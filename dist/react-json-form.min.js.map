{"version":3,"file":"react-json-form.min.js","sources":["../src/data.js","../src/components/buttons.js","../src/components/loaders.js","../src/components/icons.js","../src/components/widgets.js","../src/util.js","../src/components/form.js","../src/components/containers.js","../src/ui.js","../src/form.js","../src/index.js","../src/renderer.js"],"sourcesContent":["export function getBlankObject(schema) {\n    let keys = {};\n\n    let schema_keys = schema.keys || schema.properties;\n\n    for (let key in schema_keys) {\n        let value = schema_keys[key];\n        let type = value.type;\n\n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (type === 'array')\n            keys[key] = getBlankArray(value);\n        else if (type === 'object')\n            keys[key] = getBlankObject(value);\n        else if (type === 'boolean')\n            keys[key] = value.default || false;\n        else if (type === 'integer' || type === 'number')\n            keys[key] = value.default || null;\n        else // string etc.\n            keys[key] = value.default || '';\n    }\n\n    return keys;\n}\n\n\nexport function getBlankArray(schema) {\n    let items = [];\n    let type = schema.items.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array')\n        items.push(getBlankArray(schema.items))\n    else if (type === 'object')\n        items.push(getBlankObject(schema.items));\n    else if (type === 'boolean')\n        items.push(schema.items.default || false);\n    else if (type === 'integer' || type === 'number')\n        items.push(schema.items.default || null);\n    else // string, etc.\n        items.push(schema.items.default || '');\n\n    return items;\n}\n\n\nexport function getBlankData(schema) {\n    let type = schema.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array')\n        return getBlankArray(schema);\n    else if (type === 'object')\n        return getBlankObject(schema);\n    else if (type === 'boolean')\n        return schema.default || false;\n    else if (type === 'integer' || type === 'number')\n        return schema.default || null;\n    else // string, etc.\n        return schema.default || '';\n}\n\n\n\nfunction getSyncedArray(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n\n        if (type === 'array') {\n            newData[i] = getSyncedArray(item, schema.items);\n        } else if (type === 'object') {\n            newData[i] = getSyncedObject(item, schema.items);\n        }\n        else {\n            if ((type === 'integer' || type === 'number') && item === '')\n                newData[i] = null;\n        }\n    }\n\n    return newData;\n}\n\n\nfunction getSyncedObject(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let schemaValue = schema_keys[key];\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n      \n        if (!data.hasOwnProperty(key)) {\n            if (type === 'array')\n                newData[key] = getSyncedArray([], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject({}, schemaValue);\n            else if (type === 'boolean')\n                newData[key] = false;\n            else if (type === 'integer' || type === 'number')\n                newData[key] = null;\n            else\n                newData[key] = '';\n        } else {\n            if (type === 'array')\n                newData[key] = getSyncedArray(data[key], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject(data[key], schemaValue);\n            else {\n                if ((type === 'integer' || type === 'number') && data[key] === '')\n                    newData[key] = null;\n                else\n                    newData[key] = data[key];\n            }\n        }\n        \n    }\n\n    return newData;\n}\n\n\nexport function getSyncedData(data, schema) {\n    // adds those keys to data which are in schema but not in data\n\n    let type = schema.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array') {\n        return getSyncedArray(data, schema);\n    } else if (type === 'object') {\n        return getSyncedObject(data, schema);\n    }\n\n    return data;\n}\n","export default function Button({className, ...props}) {\n    if (!className)\n        className = '';\n\n    let classes = className.split(' ');\n\n    className = '';\n    for (let i = 0; i < classes.length; i++) {\n        className = className + 'rjf-' + classes[i] + '-button ';\n    }\n\n    return (\n        <button \n            className={className.trim()}\n            type=\"button\"\n            {...props}\n        >\n            {props.children}\n        </button>\n    );\n}","export default function Loader (props) {\n    return <div className=\"rjf-loader\"></div>;\n}\n","export default function Icon(props) {\n    let icon;\n\n    switch (props.name) {\n        case 'chevron-up':\n            icon = <ChevronUp />;\n            break;\n        case 'chevron-down':\n            icon = <ChevronDown />;\n            break;\n    }\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className={\"rjf-icon rjf-icon-\" + props.name} viewBox=\"0 0 16 16\">\n            {icon}\n        </svg>\n    );\n}\n\nfunction ChevronUp(props) {\n    return (\n        <path fillRule=\"evenodd\" d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/>\n    );\n}\n\nfunction ChevronDown(props) {\n    return (\n        <path fillRule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n    );\n}\n","import Button from './buttons';\nimport Icon from './icons';\n\n\nexport class TimePicker extends React.Component {\n    componentWillUnmount() {\n        let data = {\n            hh: this.validateValue('hh', this.props.hh).toString().padStart(2, '0'),\n            mm: this.validateValue('mm', this.props.mm).toString().padStart(2, '0'),\n            ss: this.validateValue('ss', this.props.ss).toString().padStart(2, '0')\n        }\n        this.sendValue(data);\n    }\n\n    sendValue = (data) => {\n        this.props.onChange(data);\n    }\n\n    validateValue = (name, value) => {\n        if (name === 'hh' && value < 1)\n            return 1;\n        else if (name !== 'hh' && value < 0)\n            return 0;\n        else if (name === 'hh' && value > 12)\n            return 12;\n        else if (name !== 'hh' && value > 59)\n            return 59;\n\n        return value;\n    }\n\n    handleChange = (e) => {\n        let name = e.target.dataset.name;\n        let value = e.target.value;\n\n        if (isNaN(value))\n            return;\n\n        let validValue = this.validateValue(name, parseInt(value) || 0);\n\n        if (name === 'hh' && (value === '0' || value === '' || value === '00') && validValue === 1)\n            validValue = 0;\n\n        if (value.startsWith('0') && validValue < 10 && validValue !== 0) {\n            validValue = validValue.toString().padStart(2, '0');\n        }\n\n        this.sendValue({[name]: value !== '' ? validValue.toString() : ''});\n    }\n\n    handleKeyDown = (e) => {\n        if (e.keyCode !== 38 && e.keyCode !== 40)\n            return;\n\n        let name = e.target.dataset.name;\n        let value = parseInt(e.target.value) || 0;\n\n        if (e.keyCode === 38) {\n            value++;\n        } else if (e.keyCode === 40) {\n            value--;\n        }\n\n        this.sendValue({[name]: this.validateValue(name, value).toString().padStart(2, '0')});\n    }\n\n    handleSpin = (name, type) => {\n        let value = this.props[name];\n\n        if (name === 'ampm') {\n            value = value === 'am' ? 'pm': 'am';\n        } else {\n            value = parseInt(value) || 0;\n            if (type === 'up') {\n                value++;\n            } else {\n                value--;\n            }\n            value = this.validateValue(name, value).toString().padStart(2, '0');\n        }\n\n        this.sendValue({[name]: value});\n    }\n\n    handleBlur = (e) => {\n        let value = this.validateValue(e.target.dataset.name, parseInt(e.target.value) || 0);\n\n        if (value < 10) {\n            this.sendValue({[e.target.dataset.name]: value.toString().padStart(2, '0')});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-time-picker\">\n                <div className=\"rjf-time-picker-row rjf-time-picker-labels\">\n                    <div className=\"rjf-time-picker-col\">Hrs</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">Min</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">Sec</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">am/pm</div>\n                </div>\n\n                <div className=\"rjf-time-picker-row\">\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('hh', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('mm', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ss', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ampm', 'up')}><Icon name=\"chevron-up\"/></Button></div> \n                </div>\n\n                <div className=\"rjf-time-picker-row rjf-time-picker-values\">\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"hh\" value={this.props.hh} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\">:</div>\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"mm\" value={this.props.mm} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\">:</div>\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"ss\" value={this.props.ss} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">{this.props.ampm}</div>\n                </div>\n\n                <div className=\"rjf-time-picker-row\">\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('hh', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('mm', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ss', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ampm', 'down')}><Icon name=\"chevron-down\"/></Button></div> \n                </div>\n            </div>\n        );\n    }\n}\n","export const EditorContext = React.createContext();\n\n\nexport function capitalize(string) {\n    if (!string)\n        return '';\n    \n    return string.charAt(0).toUpperCase() + string.substr(1).toLowerCase();\n}\n\n\nexport function getVerboseName(name) {\n    if (name === undefined || name === null)\n        return '';\n\n    name = name.replace(/_/g, ' ');\n    return capitalize(name);\n}\n\n\nexport function getCsrfCookie() {\n    if ((document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)).length) {\n        return document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)[0].split('=')[1];\n    }\n    return null;\n}\n","import Button from './buttons';\nimport Loader from './loaders';\nimport {TimePicker} from './widgets';\nimport {EditorContext, getCsrfCookie, capitalize} from '../util';\n\n\nexport function FormInput({label, help_text, error, inputRef, ...props}) {\n\n    if (props.type === 'string')\n        props.type = 'text'\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    if (props.value === null)\n        props.value = '';\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <input {...props} />\n        </div>\n    );\n}\n\n\nexport function FormCheckInput({label, help_text, error, value, ...props}) {\n\n    if (!label)\n        label = props.name.toUpperCase();\n\n    if (props.type === 'bool')\n        props.type = 'checkbox';\n\n    if (props.checked === undefined)\n        props.checked = value;\n\n    if (props.checked === '' || props.checked === null || props.checked === undefined)\n        props.checked = false\n\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            <label><input {...props} /> {label}</label>\n        </div>\n    );\n}\n\n\nexport function FormRadioInput({label, help_text, error, value, options, ...props}) {\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            <label>{label}</label>\n            {options.map((option, i) => {\n                let label, inputValue;\n                if (typeof option === 'object') {\n                    label = option.label;\n                    inputValue = option.value;\n                } else {\n                    label = option;\n                    if (typeof label === 'boolean')\n                        label = capitalize(label.toString());\n                    inputValue = option;\n                }\n\n                return (\n                    <label key={label + '_' + inputValue + '_' + i}>\n                        <input {...props} value={inputValue} checked={inputValue === value} /> {label}\n                    </label>\n                );\n            })}\n        </div>\n    );\n}\n\n\nexport function FormSelectInput({label, help_text, error, value, options, ...props}) {\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <select value={value || ''} {...props}>\n                <option disabled value=\"\" key={'__placehlder'}>Select...</option>\n                {options.map((option, i) => {\n                    let label, inputValue;\n                    if (typeof option === 'object') {\n                        label = option.label;\n                        inputValue = option.value;\n                    } else {\n                        label = option;\n                        if (typeof label === 'boolean')\n                            label = capitalize(label.toString());\n                        inputValue = option;\n                    }\n\n                    return (\n                        <option value={inputValue} key={label + '_' + inputValue + '_' + i}>\n                            {label}\n                        </option>\n                    );\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport function dataURItoBlob(dataURI) {\n      // Split metadata from data\n      const splitted = dataURI.split(\",\");\n      // Split params\n      const params = splitted[0].split(\";\");\n      // Get mime-type from params\n      const type = params[0].replace(\"data:\", \"\");\n      // Filter the name property from params\n      const properties = params.filter(param => {\n            return param.split(\"=\")[0] === \"name\";\n      });\n      // Look for the name and use unknown if no name property.\n      let name;\n      if (properties.length !== 1) {\n            name = \"unknown\";\n      } else {\n            // Because we filtered out the other property,\n            // we only have the name case here.\n            name = properties[0].split(\"=\")[1];\n      }\n\n      // Built the Uint8Array Blob parameter from the base64 string.\n      const binary = atob(splitted[1]);\n      const array = [];\n      for (let i = 0; i < binary.length; i++) {\n            array.push(binary.charCodeAt(i));\n      }\n      // Create the blob object\n      const blob = new window.Blob([new Uint8Array(array)], { type });\n\n      return {blob, name};\n}\n\n\n\nexport class FormFileInput extends React.Component {\n    static contextType = EditorContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value,\n            fileName: this.getFileName(),\n            loading: false\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevProps.value) {\n            this.setState({\n                value: this.props.value, \n                fileName: this.getFileName()\n            });\n        }\n    }\n\n    getFileName = () => {\n        if (!this.props.value)\n            return '';\n\n        if (this.props.type === 'data-url') {\n            return this.extractFileInfo(this.props.value).name;\n        } else if (this.props.type === 'file-url') {\n            return this.props.value;\n        } else {\n            return 'Unknown file';\n        }\n    }\n\n    extractFileInfo = (dataURL) => {\n        const {blob, name} = dataURItoBlob(dataURL);\n        return {\n            name: name,\n            size: blob.size,\n            type: blob.type\n        }\n    }\n\n    addNameToDataURL = (dataURL, name) => {\n        return dataURL.replace(';base64', ';name=' + encodeURIComponent(name) + ';base64');\n    }\n\n    handleChange = (e) => {\n        if (this.props.type === 'data-url') {\n            let file = e.target.files[0];\n            let fileName = file.name\n\n            let reader = new FileReader();\n\n            reader.onload = () => {\n\n                // this.setState({src: reader.result});\n\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: this.addNameToDataURL(reader.result, fileName),\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n\n            }\n            reader.readAsDataURL(file);\n        } else if (this.props.type === 'file-url') {\n            let endpoint = this.context.fileUploadEndpoint;\n            if (!endpoint) {\n                console.error(\n                    \"Error: fileUploadEndpoint option need to be passed \"\n                    + \"while initializing editor for enabling file uploads.\");\n                alert(\"Files can't be uploaded.\");\n                return;\n            }\n\n            this.setState({loading: true});\n\n            let formData = new FormData();\n            formData.append('field_name', this.context.fieldName);\n            formData.append('model_name', this.context.modelName);\n            formData.append('coordinates', JSON.stringify(this.props.name.split('-').slice(1)));\n            formData.append('file', e.target.files[0]);\n\n            fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'X-CSRFToken': getCsrfCookie(),\n                },\n                body: formData\n            })\n            .then((response) => response.json())\n            .then((result) => {\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: result.file_path,\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n                this.setState({loading: false});\n            })\n            .catch((error) => {\n                alert('Something went wrong while uploading file');\n                console.error('Error:', error);\n                this.setState({loading: false});\n            });\n\n        }\n\n    }\n\n    showFileBrowser = () => {\n        this.inputRef.current.click();\n    }\n\n    clearFile = () => {\n        let event = {\n            target: {\n                type: 'text',\n                value: '',\n                name: this.props.name\n            }\n        };\n\n        this.props.onChange(event);\n    }\n\n    render() {\n        let {label, value, ...props} = {value, ...this.props};\n        props.type = 'file';\n        props.onChange = this.handleChange;\n\n        if (props.readOnly)\n            props.disabled = true;\n\n        return (\n            <div> \n                {label && <label>{label}</label>}\n                <div className=\"rjf-file-field\">\n                    {this.state.value && \n                        <div className=\"rjf-current-file-name\">\n                            Current file: <span>{this.state.fileName}</span> {' '}\n                            <Button className=\"remove-file\" onClick={this.clearFile}>Clear</Button>\n                        </div>\n                    }\n                    {this.state.value && !this.state.loading && 'Change:'}\n                    {this.state.loading ?\n                        <div className=\"rjf-file-field-loading\"><Loader/> Uploading...</div>\n                    : \n                    <div className=\"rjf-file-field-input\">\n                        <FormInput {...props} inputRef={this.inputRef} />\n                    </div>\n                    }\n                    </div>\n            </div>\n        );\n    }\n}\n\n\nexport class FormTextareaInput extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!props.inputRef)\n            this.inputRef = React.createRef();\n    }\n\n    handleChange = (e) => {\n        this.updateHeight(e.target);\n\n        if (this.props.onChange)\n            this.props.onChange(e);\n    }\n\n    updateHeight = (el) => {\n        let offset = el.offsetHeight - el.clientHeight;\n        el.style.height = 'auto';\n        el.style.height = (el.scrollHeight + offset) + 'px';\n    }\n\n    componentDidMount() {\n        if (this.props.inputRef)\n            this.updateHeight(this.props.inputRef.current);\n        else \n            this.updateHeight(this.inputRef.current);\n    }\n\n    render() {\n        let {label, help_text, error, inputRef, ...props} = this.props;\n\n        delete props.type;\n\n        props.ref = inputRef || this.inputRef;\n        props.onChange = this.handleChange;\n\n        return (\n            <div>\n                {label && <label>{label}</label>}\n                <textarea {...props} />\n            </div>\n        );\n    }\n}\n\n\nexport class FormDateTimeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        // we maintain this input's state in itself\n        // so that we can only pass valid values\n        // otherwise keep the value empty if invalid\n\n        this.state = {\n            ...this.getStateFromProps(),\n            showTimePicker: false,\n        };\n\n        this.timeInput = React.createRef();\n        this.timePickerContainer = React.createRef();\n    }\n\n    getStateFromProps = () => {\n        let date = '';\n        let hh = '12';\n        let mm = '00';\n        let ss = '00';\n        let ms = '000';\n        let ampm = 'am';\n\n        if (this.props.value) {\n            let d = new Date(this.props.value);\n            let year = d.getFullYear().toString().padStart(2, '0');\n            let month = (d.getMonth() + 1).toString().padStart(2, '0');\n            let day = d.getDate().toString().padStart(2, '0');\n            date = year + '-' + month + '-' + day;\n\n            hh = d.getHours();\n            if (hh === 0) {\n                hh = 12;\n            } else if (hh === 12) {\n                ampm = 'pm';\n            } else if (hh > 12) {\n                hh = hh - 12;\n                ampm = 'pm';\n            }\n\n            mm = d.getMinutes();\n            ss = d.getSeconds();\n            ms = d.getMilliseconds();\n\n            hh = hh.toString().padStart(2, '0');\n            mm = mm.toString().padStart(2, '0');\n            ss = ss.toString().padStart(2, '0');\n        }\n\n        return {\n            date: date, hh: hh, mm: mm, ss: ss, ms: ms, ampm: ampm\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.value !== this.props.value) {\n            if (this.state.hh !== '' && this.state.hh !== '0' && this.state.hh !== '00') {\n\n                let changed = false;\n                let newState = this.getStateFromProps();\n                \n                for (let key in newState) {\n                    if (newState[key] !== this.state[key]) {\n                        changed = true;\n                        break;\n                    }\n                }\n\n                if (changed)\n                    this.setState({...newState});\n            }\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside = (e) => {\n        if (this.state.showTimePicker) {\n            if (this.timePickerContainer.current &&\n                !this.timePickerContainer.current.contains(e.target) &&\n                !this.timeInput.current.contains(e.target)\n            )\n                this.setState({showTimePicker: false});\n        }\n    };\n\n    sendValue = () => {\n        // we create a fake event object\n        // to send a combined value from two inputs\n        let event = {\n            target: {\n                type: 'text',\n                value: '',\n                name: this.props.name\n            }\n        };\n\n        if (this.state.date === '' || this.state.date === null)\n            return this.props.onChange(event);\n\n        let hh = parseInt(this.state.hh);\n\n        if (hh === 0)\n            hh = NaN; // zero value is invalid for 12 hour clock, but will be valid for 24 hour clock\n                      // so we set it to NaN to prevent creating a date object\n        \n        if (this.state.ampm === 'am') {\n            if (hh === 12)\n                hh = 0;\n        } else if (this.state.ampm === 'pm') {\n            if (hh !== 12)\n                hh = hh + 12;\n        }\n\n        hh = hh.toString().padStart(2, '0');\n        let mm = this.state.mm.padStart(2, '0');\n        let ss = this.state.ss.padStart(2, '0');\n\n        try {\n            let date = new Date(this.state.date + 'T' + hh + ':' + mm + ':' + ss + '.' + this.state.ms);\n            event['target']['value'] = date.toISOString().replace('Z', '+00:00') // make compatible to python\n        } catch (err) {\n            // invalid date\n            return this.props.onChange(event);\n        }\n\n        this.props.onChange(event);\n    }\n\n    handleDateChange = (e) => {\n        this.setState({date: e.target.value}, this.sendValue);\n    }\n\n    handleTimeChange = (value) => {\n        this.setState({...value}, this.sendValue);\n    }\n\n    showTimePicker = () => {\n        this.setState({showTimePicker: true});\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-datetime-field\">\n                {this.props.label && <label>{this.props.label}</label>}\n                <div className=\"rjf-datetime-field-inner\">\n                    <div className=\"rjf-datetime-field-date\">\n                        <FormInput\n                            label='Date'\n                            type='date'\n                            value={this.state.date}\n                            onChange={this.handleDateChange}\n                        />\n                    </div>\n                    <div className=\"rjf-datetime-field-time\">\n                        <FormInput\n                            label='Time'\n                            type='text'\n                            value={this.state.hh + ':' + this.state.mm + ':' + this.state.ss + ' ' + this.state.ampm}\n                            onFocus={this.showTimePicker}\n                            readOnly={true}\n                            inputRef={this.timeInput}\n                        />\n                        <div ref={this.timePickerContainer}>\n                            {this.state.showTimePicker &&\n                                <TimePicker\n                                    onChange={this.handleTimeChange}\n                                    hh={this.state.hh}\n                                    mm={this.state.mm}\n                                    ss={this.state.ss}\n                                    ampm={this.state.ampm}\n                                />\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import Button from './buttons';\n\n\nexport function GroupTitle(props) {\n    if (!props.children)\n        return null;\n\n    return (\n        <div className=\"rjf-form-group-title\">{props.children}</div>\n    );\n}\n\n\nfunction animate(e, animation, callback) {\n    let el = e.target.parentElement.parentElement;\n    let prevEl = el.previousElementSibling;\n    let nextEl = el.nextElementSibling;\n\n    el.classList.add('rjf-animate', 'rjf-' + animation);\n\n    if (animation === 'move-up') {\n        let {y, height} = prevEl.getBoundingClientRect();\n        let y1 = y, h1 = height;\n        \n        ({y, height} = el.getBoundingClientRect());\n        let y2 = y, h2 = height;\n        \n        prevEl.classList.add('rjf-animate');\n\n        prevEl.style.opacity = 0;\n        prevEl.style.transform = 'translateY(' + (y2 - y1)  + 'px)';\n\n        el.style.opacity = 0;\n        el.style.transform = 'translateY(-' + (y2 - y1)  + 'px)';\n\n    } else if (animation === 'move-down') {\n        let {y, height} = el.getBoundingClientRect();\n        let y1 = y, h1 = height;\n        \n        ({y, height} = nextEl.getBoundingClientRect());\n        let y2 = y, h2 = height;\n        \n        nextEl.classList.add('rjf-animate');\n\n        nextEl.style.opacity = 0;\n        nextEl.style.transform = 'translateY(-' + (y2 - y1)  + 'px)';\n\n        el.style.opacity = 0;\n        el.style.transform = 'translateY(' + (y2 - y1)  + 'px)';\n    }\n\n    setTimeout(function() {\n        callback();\n        \n        el.classList.remove('rjf-animate', 'rjf-' + animation);\n        el.style = null;\n\n        if (animation === 'move-up') {\n            prevEl.classList.remove('rjf-animate');\n            prevEl.style = null;\n        }\n        else if (animation === 'move-down') {\n            nextEl.classList.remove('rjf-animate');\n            nextEl.style = null;\n        }\n    }, 200);\n}\n\nexport function FormRowControls(props) {\n    return (\n        <div className=\"rjf-form-row-controls\">\n            {props.onMoveUp &&\n                <Button \n                    className=\"move-up\"\n                    onClick={(e) => animate(e, 'move-up', props.onMoveUp)}\n                    title=\"Move up\"\n                >\n                    <span>&uarr;</span>\n                </Button>\n            }\n            {props.onMoveDown &&\n                <Button \n                    className=\"move-down\"\n                    onClick={(e) => animate(e, 'move-down', props.onMoveDown)}\n                    title=\"Move down\"\n                >\n                    <span>&darr;</span>\n                </Button>\n            }\n            {props.onRemove &&\n                <Button \n                    className=\"remove\"\n                    onClick={(e) => animate(e, 'remove', props.onRemove)}\n                    title=\"Remove\"\n                >\n                    <span>&times;</span>\n                </Button>\n            }\n        </div>\n    );\n}\n\nexport function FormRow(props) {\n    return (\n        <div className=\"rjf-form-row\">\n            <FormRowControls {...props} />\n            <div className=\"rjf-form-row-inner\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\n\nexport function FormGroup(props) {\n    let hasChildren = React.Children.count(props.children);\n\n    let innerClassName = props.level === 0 && !hasChildren\n        ? \"\" \n        : \"rjf-form-group-inner\";\n\n    return (\n        <div className=\"rjf-form-group\">\n            {props.level === 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n            <div className={innerClassName}>\n                {props.level > 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n                {props.children}\n                {props.addable && \n                <Button\n                    className=\"add\"\n                    onClick={(e) => props.onAdd()}\n                    title=\"Add new\"\n                >\n                    {hasChildren ? 'Add more' : 'Add'}\n                </Button>\n                }\n            </div>\n        </div>\n    );\n}\n","import {getBlankData} from './data';\nimport {Button, FormInput, FormCheckInput, FormRadioInput, FormSelectInput,\n    FormFileInput, FormRow, FormGroup, FormRowControls, FormTextareaInput,\n    FormDateTimeInput} from './components';\nimport {getVerboseName} from './util';\n\n\nfunction handleChange(e, fieldType, callback) {\n    let type = e.target.type\n    let value;\n\n    if (type === 'checkbox') {\n        value = e.target.checked;\n    } else {\n        value = e.target.value;\n    }\n\n    if (fieldType === 'number' || fieldType === 'integer') {\n        value = value.trim();\n        if (value === '')\n            value = null;\n        else if (!isNaN(Number(value)))\n            value = Number(value);\n    } else if (fieldType === 'boolean') {\n        if (value === 'false' || value === false)\n            value = false;\n        else\n            value = true;\n    }\n\n    callback(e.target.name, value);\n}\n\n\nfunction FormField(props) {\n    let inputProps = {\n        name: props.name,\n        value: props.data,\n        readOnly: props.schema.readOnly || props.schema.readonly,\n    };\n\n    let type = props.schema.type;\n    if (props.schema.choices) {\n        inputProps.options = props.schema.choices;\n        type = 'select';\n    }\n    if (props.schema.widget)\n        type = props.schema.widget;\n\n    let InputField;\n\n    switch (type) {\n        case 'string':\n            InputField = FormInput;\n\n            if (props.schema.format) {\n                if (props.schema.format === 'data-url' || props.schema.format === 'file-url') {\n                    InputField = FormFileInput;\n                } else if (props.schema.format === 'datetime') {\n                    InputField = FormDateTimeInput;\n                }\n                inputProps.type = props.schema.format;\n            }\n            else {\n                inputProps.type = 'text';\n            }\n            break;\n        case 'number':\n            inputProps.type = 'number';\n            InputField = FormInput;\n            break;\n        case 'integer':\n            inputProps.type = 'number';\n            inputProps.step = '1';\n            InputField = FormInput;\n            break;\n        case 'boolean':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'checkbox':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'radio':\n            inputProps.type = 'radio';\n            InputField = FormRadioInput;\n            break;\n        case 'select':\n            InputField = FormSelectInput;\n            break;\n        case 'textarea':\n            InputField = FormTextareaInput;\n            break;\n        default:\n            inputProps.type = 'text';\n            InputField = FormInput;\n    }\n\n   return (\n        <InputField \n            {...inputProps}\n            label={\n                props.editable ? <span>{props.schema.title} <Button className=\"edit\" onClick={props.onEdit} title=\"Edit\">Edit</Button></span>\n                :\n                props.schema.title\n            }\n            onChange={(e) => handleChange(e, props.schema.type, props.onChange)}\n        />\n    );\n}\n\n\nexport function getStringFormRow(args) {\n    let {\n        data, schema, name, onChange, onRemove, removable, onEdit, editable, \n        onMoveUp, onMoveDown\n    } = args;\n\n    return (\n        <FormRow \n            key={name}\n            onRemove={removable ? (e) => onRemove(name) : null}\n            onMoveUp={onMoveUp}\n            onMoveDown={onMoveDown}\n        >\n            <FormField \n                data={data}\n                schema={schema}\n                name={name}\n                onChange={onChange}\n                onEdit={onEdit}\n                editable={editable}\n            />\n        </FormRow>\n    );\n}\n\nexport function getArrayFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, onMove, level} = args;\n\n    let rows = [];\n    let groups = [];\n\n    let removable = true;\n    let min_items = schema.min_items || schema.minItems || 0;\n    if (data.length <= min_items)\n        removable = false;\n\n    let addable = true;\n    let max_items = schema.max_items || schema.maxItems || 100;\n    if (data.length >= max_items)\n        addable = false;\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    let nextArgs = {\n        schema: schema.items,\n        onChange: onChange,\n        onAdd: onAdd,\n        onRemove: onRemove,\n        level: level + 1,\n        removable: removable,\n        onMove: onMove,\n    };\n\n    for (let i = 0; i < data.length; i++) {\n        nextArgs.data = data[i];\n        nextArgs.name = name + '-' + i;\n\n        if (i === 0)\n            nextArgs.onMoveUp = null;\n        else\n            nextArgs.onMoveUp = (e) => onMove(name + '-' + i, name + '-' + (i - 1));\n\n        if (i === data.length - 1)\n            nextArgs.onMoveDown = null;\n        else\n            nextArgs.onMoveDown = (e) => onMove(name + '-' + i, name + '-' + (i + 1));;\n\n        if (type === 'array') {\n            groups.push(getArrayFormRow(nextArgs));\n        } else if (type === 'object') {\n            groups.push(getObjectFormRow(nextArgs));\n        } else {\n            rows.push(getStringFormRow(nextArgs));\n        } \n    }\n\n    let coords = name; // coordinates for insertion and deletion\n\n    if (rows.length || (!rows.length && !groups.length)) {\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={addable}\n                onAdd={() => onAdd(getBlankData(schema.items), coords)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    if (groups.length) {\n        let groupTitle = schema.title ? <div className=\"rjf-form-group-title\">{schema.title}</div> : null;\n\n        groups = (\n            <div key={'group_' + name}>\n                {groupTitle}\n                {groups.map((i, index) => (\n                    <div className=\"rjf-form-group-wrapper\" key={'group_wrapper_' + name + '_' + index}>\n                        <FormRowControls\n                            onRemove={removable ? (e) => onRemove(name + '-' + index) : null}\n                            onMoveUp={index > 0 ? (e) => onMove(name + '-' + index, name + '-' + (index - 1)) : null}\n                            onMoveDown={index < groups.length - 1 ? (e) => onMove(name + '-' + index, name + '-' + (index + 1)) : null}\n                        />\n                        {i}\n                    </div>\n                    )\n                )}\n                {addable && \n                    <Button\n                        className=\"add\"\n                        onClick={(e) => onAdd(getBlankData(schema.items), coords)}\n                        title=\"Add new\"\n                    >\n                        Add item\n                    </Button>\n                }\n            </div>\n        )\n    }\n\n    return [...rows, ...groups];\n}\n\n\nexport function getObjectFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, level, onMove} = args;\n\n    let rows = [];\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    if (schema.additionalProperties)\n        keys = [...keys, ...Object.keys(data).filter((k) => keys.indexOf(k) === -1)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let value = data[key];\n        let childName = name + '-' + key;\n        let schemaValue = schema_keys[key] || {type: 'string'};\n\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (!schemaValue.title)\n            schemaValue.title = getVerboseName(key);\n\n        let removable = false;\n        if (schema_keys[key] === undefined)\n            removable = true;\n\n        let nextArgs = {\n            data: value,\n            schema: schemaValue,\n            name: childName,\n            onChange: onChange,\n            onAdd: onAdd,\n            onRemove: onRemove,\n            level: level + 1,\n            removable: removable,\n            onMove: onMove\n        };\n\n         if (type === 'array') {\n            rows.push(getArrayFormRow(nextArgs));\n        } else if (type === 'object') {\n            rows.push(getObjectFormRow(nextArgs));\n        } else {\n            nextArgs.onEdit = () => handleKeyEdit(data, key, value, childName, onAdd, onRemove);\n            nextArgs.editable = removable;\n            rows.push(getStringFormRow(nextArgs));\n        }\n    }\n\n    if (rows.length || schema.additionalProperties) {\n        let className = \"rjf-form-group-inner\";\n        if (level === 0 && !rows.length)\n            className = \"\";\n        \n        let coords = name;\n\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={schema.additionalProperties}\n                onAdd={() => handleKeyValueAdd(data, coords, onAdd)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    return rows;\n}\n\n\nfunction handleKeyValueAdd(data, coords, onAdd) {\n    let key = prompt(\"Add new key\");\n    if (key === null) // clicked cancel\n        return;\n\n    key = key.trim();\n    if (!key)\n        alert(\"(!) Can't add empty key.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(key))\n        alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n    else\n        onAdd(\"\", coords + '-' + key);   \n}\n\n\nfunction handleKeyEdit(data, key, value, coords, onAdd, onRemove) {\n    let newKey = prompt(\"Rename key\", key);\n    if (newKey === null) // clicked cancel\n        return;\n\n    newKey = newKey.trim();\n\n    if (newKey === key) // same keys\n        return;\n\n    if (!newKey)\n        return alert(\"(!) Key name can't be empty.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(newKey))\n        return alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n\n    onAdd(value, name + '-' + newKey);\n    onRemove(coords);\n}\n","import {getBlankData, getSyncedData} from './data';\nimport {getArrayFormRow, getObjectFormRow} from './ui';\nimport {EditorContext} from './util';\n\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dataInput = document.getElementById(this.props.dataInputId);\n        this.schema = props.schema;\n\n        let data = props.data;\n\n        if (!data) {\n            // create empty data from schema\n            data = getBlankData(this.schema);\n        } else {\n            // data might be stale if schema has new keys, so add them to data\n            try {\n                data = getSyncedData(data, this.schema);\n            } catch (error) {\n                console.error(\"Error: Schema and data structure don't match\");\n                console.error(error);\n            }\n        }\n\n        this.state = {\n            value: '',\n            data: data\n        };\n        \n        // update data in the input\n        this.populateDataInput();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.data !== prevState.data) {\n            this.populateDataInput();\n        }\n    }\n\n    populateDataInput = () => {\n        this.dataInput.value = JSON.stringify(this.state.data);\n    }\n\n    handleChange = (coords, value) => {\n        /*\n            e.target.name is a chain of indices and keys:\n            xxx-0-key-1-key2 and so on.\n            These can be used as coordinates to locate \n            a particular deeply nested item.\n\n            This first coordinate is not important and should be removed.\n        */\n        coords = coords.split('-');\n\n        coords.shift(); // remove first coord\n\n        function setDataUsingCoords(coords, data, value) {\n            let coord = coords.shift();\n            if (!isNaN(Number(coord)))\n                coord = Number(coord);\n\n            if (coords.length) {\n                setDataUsingCoords(coords, data[coord], value);\n            } else {\n                data[coord] = value;\n            }\n        }\n\n        let _data = JSON.parse(JSON.stringify(this.state.data));\n\n        setDataUsingCoords(coords, _data, value);\n\n        this.setState({data: _data});\n    }\n\n    getFields = () => {\n        let data = this.state.data;\n        let formGroups = [];\n\n        try {\n            let type = this.schema.type;\n    \n            if (type === 'list')\n                type = 'array';\n            else if (type === 'dict')\n                type = 'object';\n\n            let args = {\n                data: data,\n                schema: this.schema,\n                name: 'rjf',\n                onChange: this.handleChange,\n                onAdd: this.addFieldset,\n                onRemove: this.removeFieldset,\n                onMove: this.moveFieldset,\n                level: 0\n            };\n\n            if (type === 'array') {\n                return getArrayFormRow(args);\n            } else if (type === 'object') {\n                return getObjectFormRow(args);\n            }\n        } catch (error) {\n            formGroups = (\n                <p style={{color: '#f00'}}>\n                    <strong>(!) Error:</strong> Schema and data structure do not match.\n                </p>\n            );\n        }\n\n        return formGroups;\n    }\n\n    addFieldset = (blankData, coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            addDataUsingCoords(coords, _data, blankData);\n\n            return {data: _data};\n        });\n    }\n\n    removeFieldset = (coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            removeDataUsingCoords(coords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    moveFieldset = (oldCoords, newCoords) => {\n        oldCoords = oldCoords.split(\"-\");\n        oldCoords.shift();\n\n        newCoords = newCoords.split(\"-\");\n        newCoords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            moveDataUsingCoords(oldCoords, newCoords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-form-wrapper\">\n                <fieldset className=\"module aligned\">\n                    <EditorContext.Provider \n                        value={{\n                            fileUploadEndpoint: this.props.fileUploadEndpoint,\n                            fieldName: this.props.fieldName,\n                            modelName: this.props.modelName,\n                        }}\n                    >\n                    {this.getFields()}\n                    </EditorContext.Provider>\n                </fieldset>\n            </div>\n        );\n    }\n}\n\n\nfunction addDataUsingCoords(coords, data, value) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        addDataUsingCoords(coords, data[coord], value);\n    } else {\n        if (Array.isArray(data[coord])) {\n            data[coord].push(value);\n        }\n        else {\n            if (Array.isArray(data)) {\n                data.push(value);\n            } else {\n                data[coord] = value;\n            }\n        }\n    }\n}\n\nfunction removeDataUsingCoords(coords, data) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        removeDataUsingCoords(coords, data[coord]);\n    } else {\n        if (Array.isArray(data))\n            data.splice(coord, 1); // in-place mutation\n        else\n            delete data[coord];\n    }\n}\n\n\nfunction moveDataUsingCoords(oldCoords, newCoords, data) {\n    let oldCoord = oldCoords.shift();\n\n    if (!isNaN(Number(oldCoord)))\n        oldCoord = Number(oldCoord);\n\n    if (oldCoords.length) {\n        moveDataUsingCoords(oldCoords, newCoords, data[oldCoord]);\n    } else {\n        if (Array.isArray(data)) {\n            /* Using newCoords allows us to move items from \n            one array to another. \n            However, for now, we're only moving items in a \n            single array.\n            */\n            let newCoord = newCoords[newCoords.length - 1];\n            \n            let item = data[oldCoord];\n\n            data.splice(oldCoord, 1);\n            data.splice(newCoord, 0, item);\n        }\n    }\n}\n","import JSONForm from './renderer';\n\n\nexport default {\n  JSONForm,\n};","import Form from './form';\n\n\nexport default function JSONForm(config) {\n    this.containerId = config.containerId;\n    this.dataInputId = config.dataInputId;\n    this.schema = config.schema;\n    this.data = config.data;\n    this.fileUploadEndpoint = config.fileUploadEndpoint;\n    this.fieldName = config.fieldName;\n    this.modelName = config.modelName;\n\n    this.render = function() {\n        ReactDOM.render(\n            <Form\n                schema={this.schema}\n                dataInputId={this.dataInputId}\n                data={this.data}\n                fileUploadEndpoint={this.fileUploadEndpoint}\n                fieldName={this.fieldName}\n                modelName={this.modelName}\n            />,\n            document.getElementById(this.containerId)\n        );\n    }\n}"],"names":["getBlankObject","schema","keys","schema_keys","properties","key","value","type","getBlankArray","items","push","getBlankData","getSyncedArray","data","newData","JSON","parse","stringify","i","length","item","getSyncedObject","Object","schemaValue","hasOwnProperty","Button","className","props","classes","split","React","trim","children","Loader","Icon","icon","name","ChevronUp","ChevronDown","xmlns","width","height","fill","viewBox","fillRule","d","TimePicker","sendValue","_this","onChange","validateValue","handleChange","e","target","dataset","isNaN","validValue","parseInt","startsWith","toString","padStart","handleKeyDown","keyCode","handleSpin","handleBlur","componentWillUnmount","hh","this","mm","ss","render","onClick","_this2","onBlur","onKeyDown","ampm","Component","EditorContext","createContext","capitalize","string","charAt","toUpperCase","substr","toLowerCase","FormInput","label","inputRef","ref","FormCheckInput","undefined","checked","readOnly","disabled","FormRadioInput","options","map","option","inputValue","FormSelectInput","FormFileInput","getFileName","extractFileInfo","dataURL","dataURI","splitted","params","replace","filter","param","binary","atob","array","charCodeAt","blob","window","Blob","Uint8Array","dataURItoBlob","size","addNameToDataURL","encodeURIComponent","file","files","fileName","reader","FileReader","onload","event","result","readAsDataURL","endpoint","context","fileUploadEndpoint","console","error","alert","setState","loading","formData","FormData","append","fieldName","modelName","slice","fetch","method","headers","document","cookie","indexOf","body","then","response","json","file_path","showFileBrowser","current","click","clearFile","state","createRef","componentDidUpdate","prevProps","prevState","contextType","FormTextareaInput","updateHeight","el","offset","offsetHeight","clientHeight","style","scrollHeight","componentDidMount","FormDateTimeInput","_this3","getStateFromProps","date","ms","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","handleClickOutside","showTimePicker","timePickerContainer","contains","timeInput","NaN","toISOString","err","handleDateChange","handleTimeChange","changed","newState","addEventListener","removeEventListener","onFocus","GroupTitle","animate","animation","callback","parentElement","prevEl","previousElementSibling","nextEl","nextElementSibling","classList","add","y","getBoundingClientRect","y1","y2","opacity","transform","setTimeout","remove","FormRowControls","onMoveUp","title","onMoveDown","onRemove","FormRow","FormGroup","hasChildren","Children","count","innerClassName","level","addable","onAdd","FormField","InputField","inputProps","readonly","choices","widget","format","step","editable","onEdit","fieldType","Number","getStringFormRow","args","removable","getArrayFormRow","onMove","rows","groups","min_items","minItems","max_items","maxItems","nextArgs","getObjectFormRow","coords","index","additionalProperties","k","childName","getVerboseName","handleKeyEdit","prompt","handleKeyValueAdd","newKey","Form","populateDataInput","dataInput","shift","_data","setDataUsingCoords","coord","getFields","formGroups","addFieldset","removeFieldset","moveFieldset","color","blankData","addDataUsingCoords","removeDataUsingCoords","oldCoords","newCoords","moveDataUsingCoords","getElementById","dataInputId","Provider","Array","isArray","splice","oldCoord","newCoord","JSONForm","config","containerId","ReactDOM"],"mappings":"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"}