{"version":3,"file":"react-json-form.min.js","sources":["../src/data.js","../src/components/buttons.js","../src/components/loaders.js","../src/util.js","../src/components/form.js","../src/components/containers.js","../src/ui.js","../src/form.js","../src/index.js","../src/renderer.js"],"sourcesContent":["export function getBlankObject(schema) {\n    let keys = {};\n\n    for (let key in schema.keys) {\n        let value = schema.keys[key];\n        let type = value.type;\n\n        if (type === 'array')\n            keys[key] = getBlankArray(value);\n        else if (type === 'object')\n            keys[key] = getBlankObject(value);\n        else if (type === 'string')\n            keys[key] = '';\n        else if (schema.type === 'number')\n            return '';\n    }\n\n    return keys;\n}\n\n\nexport function getBlankArray(schema) {\n    let items = [];\n    let type = schema.items.type;\n\n    if (type === 'array')\n        items.push(getBlankArray(schema.items))\n    else if (type === 'object')\n        items.push(getBlankObject(schema.items));\n    else if (type === 'string')\n        items.push('');\n    else if (schema.type === 'number')\n        items.push('');\n\n    return items;\n}\n\n\nexport function getBlankData(schema) {\n    if (schema.type === 'array') {\n        return getBlankArray(schema);\n    }\n    else if (schema.type === 'object') {\n        return getBlankObject(schema);\n    } else if (schema.type === 'string') {\n        return '';\n    } else if (schema.type === 'number') {\n        return '';\n    }\n}\n\n\n\nfunction getSyncedArray(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n\n        if (schema.items.type === 'array') {\n            newData[i] = getSyncedArray(item, schema.items);\n        } else if (schema.items.type === 'object') {\n            newData[i] = getSyncedObject(item, schema.items);\n        }\n    }\n\n    return newData;\n}\n\n\nfunction getSyncedObject(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let keys = [...Object.keys(schema.keys)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let schemaValue = schema.keys[key];\n      \n        if (!data.hasOwnProperty(key)) {\n            if (schemaValue.type === 'string')\n                newData[key] = '';\n            else if (schemaValue.type === 'array')\n                newData[key] = getSyncedArray([], schemaValue);\n            else if (schemaValue.type === 'object')\n                newData[key] = getSyncedObject({}, schemaValue);\n        } else {\n        if (schemaValue.type === 'string')\n                newData[key] = data[key];\n            else if (schemaValue.type === 'array')\n                newData[key] = getSyncedArray(data[key], schemaValue);\n            else if (schemaValue.type === 'object')\n                newData[key] = getSyncedObject(data[key], schemaValue);\n        }\n        \n    }\n\n    return newData;\n}\n\n\nexport function getSyncedData(data, schema) {\n    // adds those keys to data which are in schema but not in data\n\n    if (schema.type === 'array') {\n        return getSyncedArray(data, schema);\n    } else if (schema.type === 'object') {\n        return getSyncedObject(data, schema);\n    }\n\n    return data;\n}\n","export default function Button({className, ...props}) {\n    if (!className)\n        className = '';\n\n    className = 'rjf-' + className + '-button';\n    return (\n        <button \n            className={className}\n            type=\"button\"\n            {...props}\n        >\n            {props.children}\n        </button>\n    );\n}","export default function Loader (props) {\n    return <div className=\"rjf-loader\"></div>;\n}\n","export const EditorContext = React.createContext();\n\n\nexport function capitalize(string) {\n    if (!string)\n        return '';\n    \n    return string.charAt(0).toUpperCase() + string.substr(1).toLowerCase();\n}\n\n\nexport function getVerboseName(name) {\n    if (name === undefined || name === null)\n        return '';\n\n    name = name.replace(/_/g, ' ');\n    return capitalize(name);\n}\n\n\nexport function getCsrfCookie() {\n    if ((document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)).length) {\n        return document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)[0].split('=')[1];\n    }\n    return null;\n}\n","import Button from './buttons';\nimport Loader from './loaders';\nimport {EditorContext, getCsrfCookie} from '../util';\n\n\nexport function FormInput({label, help_text, error, inputRef, ...props}) {\n\n    if (props.type === 'string')\n        props.type = 'text'\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <input {...props} />\n        </div>\n    );\n}\n\n\nexport function FormCheckInput({label, help_text, error, value, ...props}) {\n\n    if (!label)\n        label = props.name.toUpperCase();\n\n    if (props.type === 'bool')\n        props.type = 'checkbox';\n\n    if (props.checked === undefined)\n        props.checked = value;\n\n    if (props.checked === '')\n        props.checked = false\n\n    return (\n        <div>\n            <label><input {...props} /> {label}</label>\n        </div>\n    );\n}\n\n\nexport function FormRadioInput({label, help_text, error, value, options, ...props}) {\n    return (\n        <div>\n            <label>{label}</label>\n            {options.map((option, i) => {\n                let label, inputValue;\n                if (typeof option === 'object') {\n                    label = option.label;\n                    inputValue = option.value;\n                } else {\n                    label = option;\n                    inputValue = option;\n                }\n\n                return (\n                    <label key={label + '_' + inputValue + '_' + i}>\n                        <input {...props} value={inputValue} checked={inputValue === value} /> {label}\n                    </label>\n                );\n            })}\n        </div>\n    );\n}\n\n\nexport function FormSelectInput({label, help_text, error, value, options, ...props}) {\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <select defaultValue=\"\" {...props}>\n                <option disabled value=\"\" key={'__placehlder'}>Select...</option>\n                {options.map((option, i) => {\n                    let label, inputValue;\n                    if (typeof option === 'object') {\n                        label = option.label;\n                        inputValue = option.value;\n                    } else {\n                        label = option;\n                        inputValue = option;\n                    }\n\n                    return (\n                        <option value={inputValue} key={label + '_' + inputValue + '_' + i}>\n                            {label}\n                        </option>\n                    );\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport function dataURItoBlob(dataURI) {\n      // Split metadata from data\n      const splitted = dataURI.split(\",\");\n      // Split params\n      const params = splitted[0].split(\";\");\n      // Get mime-type from params\n      const type = params[0].replace(\"data:\", \"\");\n      // Filter the name property from params\n      const properties = params.filter(param => {\n            return param.split(\"=\")[0] === \"name\";\n      });\n      // Look for the name and use unknown if no name property.\n      let name;\n      if (properties.length !== 1) {\n            name = \"unknown\";\n      } else {\n            // Because we filtered out the other property,\n            // we only have the name case here.\n            name = properties[0].split(\"=\")[1];\n      }\n\n      // Built the Uint8Array Blob parameter from the base64 string.\n      const binary = atob(splitted[1]);\n      const array = [];\n      for (let i = 0; i < binary.length; i++) {\n            array.push(binary.charCodeAt(i));\n      }\n      // Create the blob object\n      const blob = new window.Blob([new Uint8Array(array)], { type });\n\n      return {blob, name};\n}\n\n\n\nexport class FormFileInput extends React.Component {\n    static contextType = EditorContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value,\n            fileName: this.getFileName(),\n            loading: false\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevProps.value) {\n            this.setState({\n                value: this.props.value, \n                fileName: this.getFileName()\n            });\n        }\n    }\n\n    getFileName = () => {\n        if (!this.props.value)\n            return '';\n\n        if (this.props.type === 'data-url') {\n            return this.extractFileInfo(this.props.value).name;\n        } else if (this.props.type === 'file-url') {\n            return this.props.value;\n        } else {\n            return 'Unknown file';\n        }\n    }\n\n    extractFileInfo = (dataURL) => {\n        const {blob, name} = dataURItoBlob(dataURL);\n        return {\n            name: name,\n            size: blob.size,\n            type: blob.type\n        }\n    }\n\n    addNameToDataURL = (dataURL, name) => {\n        return dataURL.replace(';base64', ';name=' + encodeURIComponent(name) + ';base64');\n    }\n\n    handleChange = (e) => {\n        if (this.props.type === 'data-url') {\n            let file = e.target.files[0];\n            let fileName = file.name\n\n            let reader = new FileReader();\n\n            reader.onload = () => {\n\n                // this.setState({src: reader.result});\n\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: this.addNameToDataURL(reader.result, fileName),\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n\n            }\n            reader.readAsDataURL(file);\n        } else if (this.props.type === 'file-url') {\n            let endpoint = this.context.fileUploadEndpoint;\n            if (!endpoint) {\n                console.error(\n                    \"Error: fileUploadEndpoint option need to be passed \"\n                    + \"while initializing editor for enabling file uploads.\");\n                alert(\"Files can't be uploaded.\");\n                return;\n            }\n\n            this.setState({loading: true});\n\n            let formData = new FormData();\n            formData.append('field_name', this.context.fieldName);\n            formData.append('model_name', this.context.modelName);\n            formData.append('coordinates', JSON.stringify(this.props.name.split('-').slice(1)));\n            formData.append('file', e.target.files[0]);\n\n            fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'X-CSRFToken': getCsrfCookie(),\n                },\n                body: formData\n            })\n            .then((response) => response.json())\n            .then((result) => {\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: result.file_path,\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n                this.setState({loading: false});\n            })\n            .catch((error) => {\n                alert('Something went wrong while uploading file');\n                console.error('Error:', error);\n                this.setState({loading: false});\n            });\n\n        }\n\n    }\n\n    showFileBrowser = () => {\n        this.inputRef.current.click();\n    }\n\n    render() {\n        let {label, value, ...props} = {value, ...this.props};\n        props.type = 'file';\n        props.onChange = this.handleChange;\n\n        return (\n            <div>\n                {label && <label>{label}</label>}\n                <div className=\"rjf-file-field\">\n                    {this.state.value && \n                        <div className=\"rjf-current-file-name\">Current file: <span>{this.state.fileName}</span></div>\n                    }\n                    {this.state.value && !this.state.loading && 'Change:'}\n                    {this.state.loading ?\n                        <div className=\"rjf-file-field-loading\"><Loader/> Uploading...</div>\n                    : \n                    <div className=\"rjf-file-field-input\">\n                        <FormInput {...props} inputRef={this.inputRef} />\n                    </div>\n                    }\n                    </div>\n            </div>\n        );\n    }\n}\n","import Button from './buttons';\n\n\nexport function GroupTitle(props) {\n    if (!props.children)\n        return null;\n\n    return (\n        <div className=\"rjf-form-group-title\">{props.children}</div>\n    );\n}\n\n\nexport function FormRow(props) {\n    return (\n        <div className=\"rjf-form-row\">\n            {props.onRemove &&\n                <Button \n                    className=\"remove\"\n                    onClick={(e) => props.onRemove(name)}\n                    title=\"Remove\"\n                >\n                    &times;\n                </Button>\n            }\n            <div className=\"rjf-form-row-inner\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\n\nexport function FormGroup(props) {\n    let hasChildren = React.Children.count(props.children);\n\n    let innerClassName = props.level === 0 && !hasChildren\n        ? \"\" \n        : \"rjf-form-group-inner\";\n\n    return (\n        <div className=\"rjf-form-group\">\n            {props.level === 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n            <div className={innerClassName}>\n                {props.level > 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n                {props.children}\n                {props.addable && \n                <Button\n                    className=\"add\"\n                    onClick={(e) => props.onAdd()}\n                    title=\"Add new\"\n                >\n                    {hasChildren ? 'Add more' : 'Add'}\n                </Button>\n                }\n            </div>\n        </div>\n    );\n}\n","import {getBlankData} from './data';\nimport {Button, FormInput, FormCheckInput, FormRadioInput, FormSelectInput,\n    FormFileInput, FormRow, FormGroup} from './components';\nimport {getVerboseName} from './util';\n\n\nfunction handleChange(e, valueType, callback) {\n    let type = e.target.type\n    let value;\n\n    if (type === 'checkbox') {\n        value = e.target.checked;\n    } else {\n        value = e.target.value;\n    }\n\n    if (valueType === 'number') {\n        value = value.trim();\n        if (value !== '' && !isNaN(Number(value)))\n            value = Number(value);\n    }\n\n    callback(e.target.name, value);\n}\n\n\nfunction FormField(props) {\n    let inputProps = {\n        name: props.name,\n        value: props.data,\n    };\n\n    let type = props.schema.type;\n    if (props.schema.choices) {\n        inputProps.options = props.schema.choices;\n        type = 'select';\n    }\n    if (props.schema.widget)\n        type = props.schema.widget;\n\n    let InputField;\n\n    switch (type) {\n        case 'string':\n            InputField = FormInput;\n\n            if (props.schema.format) {\n                if (props.schema.format === 'data-url' || props.schema.format === 'file-url') {\n                    InputField = FormFileInput;\n                }\n                inputProps.type = props.schema.format;\n            }\n            else {\n                inputProps.type = 'text';\n            }\n            break;\n        case 'number':\n            inputProps.type = 'number';\n            InputField = FormInput;\n            break;\n        case 'integer':\n            inputProps.type = 'number';\n            InputField = FormInput;\n            break;\n        case 'boolean':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'checkbox':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'radio':\n            inputProps.type = 'radio';\n            InputField = FormRadioInput;\n            break;\n        case 'select':\n            InputField = FormSelectInput;\n            break;\n        default:\n            inputProps.type = 'text';\n            InputField = FormInput;\n    }\n\n   return (\n        <InputField \n            {...inputProps}\n            label={\n                props.editable ? <span>{props.schema.title} <Button className=\"edit\" onClick={props.onEdit} title=\"Edit\">Edit</Button></span>\n                :\n                props.schema.title\n            }\n            onChange={(e) => handleChange(e, props.schema.type, props.onChange)}\n        />\n    );\n}\n\n\nexport function getStringFormRow(data, schema, name, onChange, onRemove, removable, onEdit, editable) {\n\n    return (\n        <FormRow \n            key={name}\n            onRemove={removable ? (e) => onRemove(name) : null}\n        >\n            <FormField \n                data={data}\n                schema={schema}\n                name={name}\n                onChange={onChange}\n                onEdit={onEdit}\n                editable={editable}\n            />\n        </FormRow>\n    );\n}\n\nexport function getArrayFormRow(data, schema, name, onChange, onAdd, onRemove, level) {\n    let rows = [];\n    let groups = [];\n\n    let removable = true;\n    let min_items = schema.min_items || 0;\n    if (data.length <= min_items)\n        removable = false;\n\n    let addable = true;\n    let max_items = schema.max_items || 100;\n    if (data.length >= max_items)\n        addable = false;\n\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n        let childName = name + '-' + i;\n\n        if (schema.items.type === 'array') {\n            groups.push(getArrayFormRow(item, schema.items, childName, onChange, onAdd, onRemove, level + 1));\n        } else if (schema.items.type === 'object') {\n            groups.push(getObjectFormRow(item, schema.items, childName, onChange, onAdd, onRemove, level + 1));\n        } else {\n            rows.push(getStringFormRow(item, schema.items, childName, onChange, onRemove, removable));\n        } \n    }\n\n    let coords = name; // coordinates for insertion and deletion\n\n    if (rows.length || (!rows.length && !groups.length)) {\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={addable}\n                onAdd={() => onAdd(getBlankData(schema.items), coords)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    if (groups.length) {\n        let groupTitle = schema.title ? <div className=\"rjf-form-group-title\">{schema.title}</div> : null;\n\n        groups = (\n            <div key={'group_' + name}>\n                {groupTitle}\n                {groups.map((i, index) => (\n                    <div className=\"rjf-form-group-wrapper\" key={'group_wrapper_' + name + '_' + index}>\n                        {removable && \n                            <Button\n                                className=\"remove\"\n                                onClick={(e) => onRemove(name + '-' + index)}\n                                title=\"Remove\"\n                            >\n                                &times;\n                            </Button>\n                        }\n                        {i}\n                    </div>\n                    )\n                )}\n                {addable && \n                    <Button\n                        className=\"add\"\n                        onClick={(e) => onAdd(getBlankData(schema.items), coords)}\n                        title=\"Add new\"\n                    >\n                        Add item\n                    </Button>\n                }\n            </div>\n        )\n    }\n\n    return [...rows, ...groups];\n}\n\n\nexport function getObjectFormRow(data, schema, name, onChange, onAdd, onRemove, level) {\n    let rows = [];\n\n    let keys = [...Object.keys(schema.keys)];\n\n    if (schema.additionalProperties)\n        keys = [...keys, ...Object.keys(data).filter((k) => keys.indexOf(k) === -1)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let value = data[key];\n        let childName = name + '-' + key;\n        let schemaValue = schema.keys[key] || {type: 'string'};\n\n        if (!schemaValue.title)\n            schemaValue.title = getVerboseName(key);\n\n        let removable = false;\n        if (schema.keys[key] === undefined)\n            removable = true;\n\n         if (schemaValue.type === 'array') {\n            rows.push(getArrayFormRow(value, schemaValue, childName, onChange, onAdd, onRemove, level + 1));\n        } else if (schemaValue.type === 'object') {\n            rows.push(getObjectFormRow(value, schemaValue, childName, onChange, onAdd, onRemove, level + 1));\n        } else {\n            rows.push(getStringFormRow(\n                value, schemaValue, childName, onChange, onRemove, removable, \n                () => handleKeyEdit(data, key, value, childName, onAdd, onRemove),\n                removable\n            ));\n        }\n    }\n\n    if (rows.length || schema.additionalProperties) {\n        let className = \"rjf-form-group-inner\";\n        if (level === 0 && !rows.length)\n            className = \"\";\n        \n        let coords = name;\n\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={schema.additionalProperties}\n                onAdd={() => handleKeyValueAdd(data, coords, onAdd)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    return rows;\n}\n\n\nfunction handleKeyValueAdd(data, coords, onAdd) {\n    let key = prompt(\"Add new key\");\n    if (key === null) // clicked cancel\n        return;\n\n    key = key.trim();\n    if (!key)\n        alert(\"(!) Can't add empty key.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(key))\n        alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n    else\n        onAdd(\"\", coords + '-' + key);   \n}\n\n\nfunction handleKeyEdit(data, key, value, coords, onAdd, onRemove) {\n    let newKey = prompt(\"Rename key\", key);\n    if (newKey === null) // clicked cancel\n        return;\n\n    newKey = newKey.trim();\n\n    if (newKey === key) // same keys\n        return;\n\n    if (!newKey)\n        return alert(\"(!) Key name can't be empty.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(newKey))\n        return alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n\n    onAdd(value, name + '-' + newKey);\n    onRemove(coords);\n}\n","import {getBlankData, getSyncedData} from './data';\nimport {getArrayFormRow, getObjectFormRow} from './ui';\nimport {EditorContext} from './util';\n\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dataInput = document.getElementById(this.props.dataInputId);\n        this.schema = props.schema;\n\n        let data = props.data;\n\n        if (!data) {\n            // create empty data from schema\n            data = getBlankData(this.schema);\n        } else {\n            // data might be stale if schema has new keys, so add them to data\n            try {\n                data = getSyncedData(data, this.schema);\n            } catch (error) {\n                console.log(\"Error: Schema and data don't match\");\n                console.log(error);\n            }\n        }\n\n        this.state = {\n            value: '',\n            data: data\n        };\n        \n        // update data in the input\n        this.populateDataInput();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.data !== prevState.data) {\n            this.populateDataInput();\n        }\n    }\n\n    populateDataInput = () => {\n        this.dataInput.value = JSON.stringify(this.state.data);\n    }\n\n    handleChange = (coords, value) => {\n        /*\n            e.target.name is a chain of indices and keys:\n            xxx-0-key-1-key2 and so on.\n            These can be used as coordinates to locate \n            a particular deeply nested item.\n\n            This first coordinate is not important and should be removed.\n        */\n        coords = coords.split('-');\n\n        coords.shift(); // remove first coord\n\n        function setDataUsingCoords(coords, data, value) {\n            let coord = coords.shift();\n            if (!isNaN(Number(coord)))\n                coord = Number(coord);\n\n            if (coords.length) {\n                setDataUsingCoords(coords, data[coord], value);\n            } else {\n                data[coord] = value;\n            }\n        }\n\n        let _data = JSON.parse(JSON.stringify(this.state.data));\n\n        setDataUsingCoords(coords, _data, value);\n\n        this.setState({data: _data});\n    }\n\n    getFields = () => {\n        let data = this.state.data;\n        let formGroups = [];\n\n        try {\n            if (this.schema.type === 'array') {\n                return getArrayFormRow(\n                    data, this.schema, 'rjf',\n                    this.handleChange, this.addFieldset, this.removeFieldset,\n                    0\n                );\n            } else if (this.schema.type === 'object') {\n                return getObjectFormRow(\n                    data, this.schema, 'rjf',\n                    this.handleChange, this.addFieldset, this.removeFieldset,\n                    0\n                );\n            }\n        } catch (error) {\n            formGroups = (\n                <p style={{color: '#f00'}}>\n                    <strong>(!) Error:</strong> Schema and data do not match.\n                </p>\n            );\n        }\n\n        return formGroups;\n    }\n\n    addFieldset = (blankData, coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            function addDataUsingCoords(coords, data, value) {\n                let coord = coords.shift();\n                if (!isNaN(Number(coord)))\n                    coord = Number(coord);\n\n                if (coords.length) {\n                    addDataUsingCoords(coords, data[coord], value);\n                } else {\n                    if (Array.isArray(data)) {\n                        data.push(value);\n                    }\n                    else {\n                        if (Array.isArray(data[coord])) {\n                            data[coord].push(value);\n                        } else {\n                            data[coord] = value;\n                        }\n                    }\n                }\n            }\n\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            addDataUsingCoords(coords, _data, blankData);\n\n            return {data: _data};\n        });\n    }\n\n    removeFieldset = (coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            function removeDataUsingCoords(coords, data) {\n                let coord = coords.shift();\n                if (!isNaN(Number(coord)))\n                    coord = Number(coord);\n\n                if (coords.length) {\n                    removeDataUsingCoords(coords, data[coord]);\n                } else {\n                    if (Array.isArray(data))\n                        data = data.splice(coord, 1); // in-place mutation\n                    else\n                        delete data[coord];\n                }\n            }\n\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            removeDataUsingCoords(coords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-form-wrapper\">\n                <fieldset className=\"module aligned\">\n                    <EditorContext.Provider \n                        value={{\n                            fileUploadEndpoint: this.props.fileUploadEndpoint,\n                            fieldName: this.props.fieldName,\n                            modelName: this.props.modelName,\n                        }}\n                    >\n                    {this.getFields()}\n                    </EditorContext.Provider>\n                </fieldset>\n            </div>\n        );\n    }\n}\n","import JSONForm from './renderer';\n\n\nexport default {\n  JSONForm,\n};","import Form from './form';\n\n\nexport default function JSONForm(config) {\n    this.containerId = config.containerId;\n    this.dataInputId = config.dataInputId;\n    this.schema = config.schema;\n    this.data = config.data;\n    this.fileUploadEndpoint = config.fileUploadEndpoint;\n    this.fieldName = config.fieldName;\n    this.modelName = config.modelName;\n\n    this.render = function() {\n        ReactDOM.render(\n            <Form\n                schema={this.schema}\n                dataInputId={this.dataInputId}\n                data={this.data}\n                fileUploadEndpoint={this.fileUploadEndpoint}\n                fieldName={this.fieldName}\n                modelName={this.modelName}\n            />,\n            document.getElementById(this.containerId)\n        );\n    }\n}"],"names":["getBlankObject","schema","keys","key","value","type","getBlankArray","items","push","getBlankData","getSyncedArray","data","newData","JSON","parse","stringify","i","length","item","getSyncedObject","Object","schemaValue","hasOwnProperty","Button","className","props","React","children","Loader","EditorContext","createContext","FormInput","label","inputRef","ref","FormCheckInput","name","toUpperCase","undefined","checked","FormRadioInput","options","map","option","inputValue","FormSelectInput","defaultValue","disabled","FormFileInput","_this","getFileName","extractFileInfo","dataURL","dataURI","splitted","split","params","replace","properties","filter","param","binary","atob","array","charCodeAt","blob","window","Blob","Uint8Array","dataURItoBlob","size","addNameToDataURL","encodeURIComponent","handleChange","e","file","target","files","fileName","reader","FileReader","onload","event","result","onChange","readAsDataURL","endpoint","context","fileUploadEndpoint","console","error","alert","setState","loading","formData","FormData","append","fieldName","modelName","slice","fetch","method","headers","document","cookie","trim","indexOf","body","then","response","json","file_path","showFileBrowser","current","click","state","createRef","componentDidUpdate","prevProps","prevState","this","render","Component","GroupTitle","FormRow","onRemove","onClick","title","FormGroup","hasChildren","Children","count","innerClassName","level","addable","onAdd","FormField","InputField","inputProps","choices","widget","format","editable","onEdit","valueType","callback","isNaN","Number","getStringFormRow","removable","getArrayFormRow","rows","groups","min_items","max_items","childName","getObjectFormRow","coords","index","additionalProperties","k","string","charAt","substr","toLowerCase","getVerboseName","handleKeyEdit","prompt","handleKeyValueAdd","newKey","contextType","Form","populateDataInput","dataInput","shift","_data","setDataUsingCoords","coord","getFields","formGroups","addFieldset","removeFieldset","style","color","blankData","addDataUsingCoords","Array","isArray","removeDataUsingCoords","splice","getElementById","dataInputId","log","Provider","JSONForm","config","containerId","ReactDOM"],"mappings":"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"}