{"version":3,"file":"react-json-form.min.js","sources":["../src/data.js","../src/components/buttons.js","../src/components/loaders.js","../src/components/icons.js","../src/components/widgets.js","../src/util.js","../src/components/form.js","../src/components/containers.js","../src/ui.js","../src/form.js","../src/index.js","../src/renderer.js"],"sourcesContent":["export function getBlankObject(schema) {\n    let keys = {};\n\n    let schema_keys = schema.keys || schema.properties;\n\n    for (let key in schema_keys) {\n        let value = schema_keys[key];\n        let type = value.type;\n\n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (type === 'array')\n            keys[key] = getBlankArray(value);\n        else if (type === 'object')\n            keys[key] = getBlankObject(value);\n        else if (type === 'boolean')\n            keys[key] = value.default || false;\n        else if (type === 'integer' || type === 'number')\n            keys[key] = value.default || null;\n        else // string etc.\n            keys[key] = value.default || '';\n    }\n\n    return keys;\n}\n\n\nexport function getBlankArray(schema) {\n    let items = [];\n    let type = schema.items.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array')\n        items.push(getBlankArray(schema.items))\n    else if (type === 'object')\n        items.push(getBlankObject(schema.items));\n    else if (type === 'boolean')\n        items.push(schema.items.default || false);\n    else if (type === 'integer' || type === 'number')\n        items.push(schema.items.default || null);\n    else // string, etc.\n        items.push(schema.items.default || '');\n\n    return items;\n}\n\n\nexport function getBlankData(schema) {\n    let type = schema.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array')\n        return getBlankArray(schema);\n    else if (type === 'object')\n        return getBlankObject(schema);\n    else if (type === 'boolean')\n        return schema.default || false;\n    else if (type === 'integer' || type === 'number')\n        return schema.default || null;\n    else // string, etc.\n        return schema.default || '';\n}\n\n\n\nfunction getSyncedArray(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n\n        if (type === 'array') {\n            newData[i] = getSyncedArray(item, schema.items);\n        } else if (type === 'object') {\n            newData[i] = getSyncedObject(item, schema.items);\n        }\n        else {\n            if ((type === 'integer' || type === 'number') && item === '')\n                newData[i] = null;\n        }\n    }\n\n    return newData;\n}\n\n\nfunction getSyncedObject(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let schemaValue = schema_keys[key];\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n      \n        if (!data.hasOwnProperty(key)) {\n            if (type === 'array')\n                newData[key] = getSyncedArray([], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject({}, schemaValue);\n            else if (type === 'boolean')\n                newData[key] = false;\n            else if (type === 'integer' || type === 'number')\n                newData[key] = null;\n            else\n                newData[key] = '';\n        } else {\n            if (type === 'array')\n                newData[key] = getSyncedArray(data[key], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject(data[key], schemaValue);\n            else {\n                if ((type === 'integer' || type === 'number') && data[key] === '')\n                    newData[key] = null;\n                else\n                    newData[key] = data[key];\n            }\n        }\n        \n    }\n\n    return newData;\n}\n\n\nexport function getSyncedData(data, schema) {\n    // adds those keys to data which are in schema but not in data\n\n    let type = schema.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array') {\n        return getSyncedArray(data, schema);\n    } else if (type === 'object') {\n        return getSyncedObject(data, schema);\n    }\n\n    return data;\n}\n","export default function Button({className, ...props}) {\n    if (!className)\n        className = '';\n\n    let classes = className.split(' ');\n\n    className = '';\n    for (let i = 0; i < classes.length; i++) {\n        className = className + 'rjf-' + classes[i] + '-button ';\n    }\n\n    return (\n        <button \n            className={className.trim()}\n            type=\"button\"\n            {...props}\n        >\n            {props.children}\n        </button>\n    );\n}","export default function Loader (props) {\n    return <div className=\"rjf-loader\"></div>;\n}\n","export default function Icon(props) {\n    let icon;\n\n    switch (props.name) {\n        case 'chevron-up':\n            icon = <ChevronUp />;\n            break;\n        case 'chevron-down':\n            icon = <ChevronDown />;\n            break;\n    }\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className={\"rjf-icon rjf-icon-\" + props.name} viewBox=\"0 0 16 16\">\n            {icon}\n        </svg>\n    );\n}\n\nfunction ChevronUp(props) {\n    return (\n        <path fillRule=\"evenodd\" d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/>\n    );\n}\n\nfunction ChevronDown(props) {\n    return (\n        <path fillRule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n    );\n}\n","import Button from './buttons';\nimport Icon from './icons';\n\n\nexport class TimePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hh: props.hh || '12',\n            mm: props.mm || '00',\n            ss: props.ss || '00',\n            ampm: props.ampm || 'am',\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state !== prevState)\n            this.props.onChange(this.state);\n    }\n\n    validateValue = (name, value) => {\n        if (name === 'hh' && value < 1)\n            return 1;\n        else if (name !== 'hh' && value < 0)\n            return 0;\n        else if (name === 'hh' && value > 12)\n            return 12;\n        else if (name !== 'hh' && value > 59)\n            return 59;\n\n        return value;\n    }\n\n    handleChange = (e) => {\n        let name = e.target.dataset.name;\n        let value = e.target.value;\n\n        if (isNaN(value))\n            return;\n\n        let validValue = this.validateValue(name, parseInt(value) || 0);\n\n        if (name === 'hh' && (value === '0' || value === '' || value === '00') && validValue === 1)\n            validValue = 0;\n\n        if (value.startsWith('0') && validValue < 10 && validValue !== 0) {\n            validValue = validValue.toString().padStart(2, '0');\n        }\n\n        this.setState({[name]: value !== '' ? validValue.toString() : ''});\n    }\n\n    handleKeyDown = (e) => {\n        if (e.keyCode !== 38 && e.keyCode !== 40)\n            return;\n\n        let name = e.target.dataset.name;\n        let value = parseInt(e.target.value) || 0;\n\n        if (e.keyCode === 38) {\n            value++;\n        } else if (e.keyCode === 40) {\n            value--;\n        }\n\n        this.setState({[name]: this.validateValue(name, value).toString().padStart(2, '0')});\n    }\n\n    handleSpin = (name, type) => {\n        this.setState((state) => {\n            let value = state[name];\n\n            if (name === 'ampm') {\n                value = value === 'am' ? 'pm': 'am';\n            } else {\n                value = parseInt(value) || 0;\n                if (type === 'up') {\n                    value++;\n                } else {\n                    value--;\n                }\n                value = this.validateValue(name, value).toString().padStart(2, '0');\n            }\n\n            return {[name]: value};\n        });\n    }\n\n    handleBlur = (e) => {\n        let value = this.validateValue(e.target.dataset.name, parseInt(e.target.value) || 0);\n\n        if (value < 10) {\n            this.setState({[e.target.dataset.name]: value.toString().padStart(2, '0')});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-time-picker\">\n                <div className=\"rjf-time-picker-row rjf-time-picker-labels\">\n                    <div className=\"rjf-time-picker-col\">Hrs</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">Min</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">Sec</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">am/pm</div>\n                </div>\n\n                <div className=\"rjf-time-picker-row\">\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('hh', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('mm', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ss', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ampm', 'up')}><Icon name=\"chevron-up\"/></Button></div> \n                </div>\n\n                <div className=\"rjf-time-picker-row rjf-time-picker-values\">\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"hh\" value={this.state.hh} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\">:</div>\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"mm\" value={this.state.mm} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\">:</div>\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"ss\" value={this.state.ss} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">{this.state.ampm}</div>\n                </div>\n\n                <div className=\"rjf-time-picker-row\">\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('hh', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('mm', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ss', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ampm', 'down')}><Icon name=\"chevron-down\"/></Button></div> \n                </div>\n            </div>\n        );\n    }\n}\n","export const EditorContext = React.createContext();\n\n\nexport function capitalize(string) {\n    if (!string)\n        return '';\n    \n    return string.charAt(0).toUpperCase() + string.substr(1).toLowerCase();\n}\n\n\nexport function getVerboseName(name) {\n    if (name === undefined || name === null)\n        return '';\n\n    name = name.replace(/_/g, ' ');\n    return capitalize(name);\n}\n\n\nexport function getCsrfCookie() {\n    if ((document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)).length) {\n        return document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)[0].split('=')[1];\n    }\n    return null;\n}\n","import Button from './buttons';\nimport Loader from './loaders';\nimport {TimePicker} from './widgets';\nimport {EditorContext, getCsrfCookie, capitalize} from '../util';\n\n\nexport function FormInput({label, help_text, error, inputRef, ...props}) {\n\n    if (props.type === 'string')\n        props.type = 'text'\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    if (props.value === null)\n        props.value = '';\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <input {...props} />\n        </div>\n    );\n}\n\n\nexport function FormCheckInput({label, help_text, error, value, ...props}) {\n\n    if (!label)\n        label = props.name.toUpperCase();\n\n    if (props.type === 'bool')\n        props.type = 'checkbox';\n\n    if (props.checked === undefined)\n        props.checked = value;\n\n    if (props.checked === '' || props.checked === null || props.checked === undefined)\n        props.checked = false\n\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            <label><input {...props} /> {label}</label>\n        </div>\n    );\n}\n\n\nexport function FormRadioInput({label, help_text, error, value, options, ...props}) {\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            <label>{label}</label>\n            {options.map((option, i) => {\n                let label, inputValue;\n                if (typeof option === 'object') {\n                    label = option.label;\n                    inputValue = option.value;\n                } else {\n                    label = option;\n                    if (typeof label === 'boolean')\n                        label = capitalize(label.toString());\n                    inputValue = option;\n                }\n\n                return (\n                    <label key={label + '_' + inputValue + '_' + i}>\n                        <input {...props} value={inputValue} checked={inputValue === value} /> {label}\n                    </label>\n                );\n            })}\n        </div>\n    );\n}\n\n\nexport function FormSelectInput({label, help_text, error, value, options, ...props}) {\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <select value={value || ''} {...props}>\n                <option disabled value=\"\" key={'__placehlder'}>Select...</option>\n                {options.map((option, i) => {\n                    let label, inputValue;\n                    if (typeof option === 'object') {\n                        label = option.label;\n                        inputValue = option.value;\n                    } else {\n                        label = option;\n                        if (typeof label === 'boolean')\n                            label = capitalize(label.toString());\n                        inputValue = option;\n                    }\n\n                    return (\n                        <option value={inputValue} key={label + '_' + inputValue + '_' + i}>\n                            {label}\n                        </option>\n                    );\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport function dataURItoBlob(dataURI) {\n      // Split metadata from data\n      const splitted = dataURI.split(\",\");\n      // Split params\n      const params = splitted[0].split(\";\");\n      // Get mime-type from params\n      const type = params[0].replace(\"data:\", \"\");\n      // Filter the name property from params\n      const properties = params.filter(param => {\n            return param.split(\"=\")[0] === \"name\";\n      });\n      // Look for the name and use unknown if no name property.\n      let name;\n      if (properties.length !== 1) {\n            name = \"unknown\";\n      } else {\n            // Because we filtered out the other property,\n            // we only have the name case here.\n            name = properties[0].split(\"=\")[1];\n      }\n\n      // Built the Uint8Array Blob parameter from the base64 string.\n      const binary = atob(splitted[1]);\n      const array = [];\n      for (let i = 0; i < binary.length; i++) {\n            array.push(binary.charCodeAt(i));\n      }\n      // Create the blob object\n      const blob = new window.Blob([new Uint8Array(array)], { type });\n\n      return {blob, name};\n}\n\n\n\nexport class FormFileInput extends React.Component {\n    static contextType = EditorContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value,\n            fileName: this.getFileName(),\n            loading: false\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevProps.value) {\n            this.setState({\n                value: this.props.value, \n                fileName: this.getFileName()\n            });\n        }\n    }\n\n    getFileName = () => {\n        if (!this.props.value)\n            return '';\n\n        if (this.props.type === 'data-url') {\n            return this.extractFileInfo(this.props.value).name;\n        } else if (this.props.type === 'file-url') {\n            return this.props.value;\n        } else {\n            return 'Unknown file';\n        }\n    }\n\n    extractFileInfo = (dataURL) => {\n        const {blob, name} = dataURItoBlob(dataURL);\n        return {\n            name: name,\n            size: blob.size,\n            type: blob.type\n        }\n    }\n\n    addNameToDataURL = (dataURL, name) => {\n        return dataURL.replace(';base64', ';name=' + encodeURIComponent(name) + ';base64');\n    }\n\n    handleChange = (e) => {\n        if (this.props.type === 'data-url') {\n            let file = e.target.files[0];\n            let fileName = file.name\n\n            let reader = new FileReader();\n\n            reader.onload = () => {\n\n                // this.setState({src: reader.result});\n\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: this.addNameToDataURL(reader.result, fileName),\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n\n            }\n            reader.readAsDataURL(file);\n        } else if (this.props.type === 'file-url') {\n            let endpoint = this.context.fileUploadEndpoint;\n            if (!endpoint) {\n                console.error(\n                    \"Error: fileUploadEndpoint option need to be passed \"\n                    + \"while initializing editor for enabling file uploads.\");\n                alert(\"Files can't be uploaded.\");\n                return;\n            }\n\n            this.setState({loading: true});\n\n            let formData = new FormData();\n            formData.append('field_name', this.context.fieldName);\n            formData.append('model_name', this.context.modelName);\n            formData.append('coordinates', JSON.stringify(this.props.name.split('-').slice(1)));\n            formData.append('file', e.target.files[0]);\n\n            fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'X-CSRFToken': getCsrfCookie(),\n                },\n                body: formData\n            })\n            .then((response) => response.json())\n            .then((result) => {\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: result.file_path,\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n                this.setState({loading: false});\n            })\n            .catch((error) => {\n                alert('Something went wrong while uploading file');\n                console.error('Error:', error);\n                this.setState({loading: false});\n            });\n\n        }\n\n    }\n\n    showFileBrowser = () => {\n        this.inputRef.current.click();\n    }\n\n    clearFile = () => {\n        let event = {\n            target: {\n                type: 'text',\n                value: '',\n                name: this.props.name\n            }\n        };\n\n        this.props.onChange(event);\n    }\n\n    render() {\n        let {label, value, ...props} = {value, ...this.props};\n        props.type = 'file';\n        props.onChange = this.handleChange;\n\n        if (props.readOnly)\n            props.disabled = true;\n\n        return (\n            <div> \n                {label && <label>{label}</label>}\n                <div className=\"rjf-file-field\">\n                    {this.state.value && \n                        <div className=\"rjf-current-file-name\">\n                            Current file: <span>{this.state.fileName}</span> {' '}\n                            <Button className=\"remove-file\" onClick={this.clearFile}>Clear</Button>\n                        </div>\n                    }\n                    {this.state.value && !this.state.loading && 'Change:'}\n                    {this.state.loading ?\n                        <div className=\"rjf-file-field-loading\"><Loader/> Uploading...</div>\n                    : \n                    <div className=\"rjf-file-field-input\">\n                        <FormInput {...props} inputRef={this.inputRef} />\n                    </div>\n                    }\n                    </div>\n            </div>\n        );\n    }\n}\n\n\nexport class FormTextareaInput extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!props.inputRef)\n            this.inputRef = React.createRef();\n    }\n\n    handleChange = (e) => {\n        this.updateHeight(e.target);\n\n        if (this.props.onChange)\n            this.props.onChange(e);\n    }\n\n    updateHeight = (el) => {\n        let offset = el.offsetHeight - el.clientHeight;\n        el.style.height = 'auto';\n        el.style.height = (el.scrollHeight + offset) + 'px';\n    }\n\n    componentDidMount() {\n        if (this.props.inputRef)\n            this.updateHeight(this.props.inputRef.current);\n        else \n            this.updateHeight(this.inputRef.current);\n    }\n\n    render() {\n        let {label, help_text, error, inputRef, ...props} = this.props;\n\n        delete props.type;\n\n        props.ref = inputRef || this.inputRef;\n        props.onChange = this.handleChange;\n\n        return (\n            <div>\n                {label && <label>{label}</label>}\n                <textarea {...props} />\n            </div>\n        );\n    }\n}\n\n\nexport class FormDateTimeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        // we maintain this input's state in itself\n        // so that we can only pass valid values\n        // otherwise keep the value empty if invalid\n\n        let date = '';\n        let hh = '12';\n        let mm = '00';\n        let ss = '00';\n        let ms = '000';\n        let ampm = 'am';\n\n        if (props.value) {\n            let d = new Date(props.value);\n            let year = d.getFullYear().toString().padStart(2, '0');\n            let month = (d.getMonth() + 1).toString().padStart(2, '0');\n            let day = d.getDate().toString().padStart(2, '0');\n            date = year + '-' + month + '-' + day;\n\n            hh = d.getHours();\n            if (hh === 0) {\n                hh = 12;\n            } else if (hh === 12) {\n                ampm = 'pm';\n            } else if (hh > 12) {\n                hh = hh - 12;\n                ampm = 'pm';\n            }\n\n            mm = d.getMinutes();\n            ss = d.getSeconds();\n            ms = d.getMilliseconds();\n\n            hh = hh.toString().padStart(2, '0');\n            mm = mm.toString().padStart(2, '0');\n            ss = ss.toString().padStart(2, '0');\n        }\n\n        this.state = {\n            date: date,\n            hh: hh,\n            mm: mm,\n            ss: ss,\n            ms: ms,\n            ampm: ampm,\n            showTimePicker: false,\n        };\n\n        this.timeInput = React.createRef();\n        this.timePickerContainer = React.createRef();\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside = (e) => {\n        if (this.state.showTimePicker) {\n            if (this.timePickerContainer.current &&\n                !this.timePickerContainer.current.contains(e.target) &&\n                !this.timeInput.current.contains(e.target)\n            )\n                this.setState({showTimePicker: false});\n        }\n    };\n\n    sendValue = () => {\n        // we create a fake event object\n        // to send a combined value from two inputs\n        let event = {\n            target: {\n                type: 'text',\n                value: '',\n                name: this.props.name\n            }\n        };\n\n        if (this.state.date === '' || this.state.date === null)\n            return this.props.onChange(event);\n\n        let hh = parseInt(this.state.hh);\n        \n        if (this.state.ampm === 'am') {\n            if (hh === 12)\n                hh = 0;\n        } else if (this.state.ampm === 'pm') {\n            if (hh !== 12)\n                hh = hh + 12;\n        }\n\n        hh = hh.toString().padStart(2, '0');\n        let mm = this.state.mm.padStart(2, '0');\n        let ss = this.state.ss.padStart(2, '0');\n\n        let date = new Date(this.state.date + 'T' + hh + ':' + mm + ':' + ss + '.' + this.state.ms);\n        let value = date.toISOString().replace('Z', '+00:00') // make compatible to python\n\n        event['target']['value'] = value;\n\n        this.props.onChange(event);\n    }\n\n    handleDateChange = (e) => {\n        this.setState({date: e.target.value}, this.sendValue);\n    }\n\n    handleTimeChange = (value) => {\n        this.setState({\n            hh: value.hh,\n            mm: value.mm,\n            ss: value.ss,\n            ampm: value.ampm,\n        }, this.sendValue);\n    }\n\n    showTimePicker = () => {\n        this.setState({showTimePicker: true});\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-datetime-field\">\n                {this.props.label && <label>{this.props.label}</label>}\n                <div className=\"rjf-datetime-field-inner\">\n                    <div className=\"rjf-datetime-field-date\">\n                        <FormInput\n                            label='Date'\n                            type='date'\n                            value={this.state.date}\n                            onChange={this.handleDateChange}\n                        />\n                    </div>\n                    <div className=\"rjf-datetime-field-time\">\n                        <FormInput\n                            label='Time'\n                            type='text'\n                            value={this.state.hh + ':' + this.state.mm + ':' + this.state.ss + ' ' + this.state.ampm}\n                            onFocus={this.showTimePicker}\n                            readOnly={true}\n                            inputRef={this.timeInput}\n                        />\n                        <div ref={this.timePickerContainer}>\n                            {this.state.showTimePicker &&\n                                <TimePicker\n                                    onChange={this.handleTimeChange}\n                                    hh={this.state.hh}\n                                    mm={this.state.mm}\n                                    ss={this.state.ss}\n                                    ampm={this.state.ampm}\n                                />\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import Button from './buttons';\n\n\nexport function GroupTitle(props) {\n    if (!props.children)\n        return null;\n\n    return (\n        <div className=\"rjf-form-group-title\">{props.children}</div>\n    );\n}\n\n\nfunction animate(e, animation, callback) {\n    let el = e.target.parentElement.parentElement;\n    let prevEl = el.previousElementSibling;\n    let nextEl = el.nextElementSibling;\n\n    el.classList.add('rjf-animate', 'rjf-' + animation);\n\n    if (animation === 'move-up') {\n        let {y, height} = prevEl.getBoundingClientRect();\n        let y1 = y, h1 = height;\n        \n        ({y, height} = el.getBoundingClientRect());\n        let y2 = y, h2 = height;\n        \n        prevEl.classList.add('rjf-animate');\n\n        prevEl.style.opacity = 0;\n        prevEl.style.transform = 'translateY(' + (y2 - y1)  + 'px)';\n\n        el.style.opacity = 0;\n        el.style.transform = 'translateY(-' + (y2 - y1)  + 'px)';\n\n    } else if (animation === 'move-down') {\n        let {y, height} = el.getBoundingClientRect();\n        let y1 = y, h1 = height;\n        \n        ({y, height} = nextEl.getBoundingClientRect());\n        let y2 = y, h2 = height;\n        \n        nextEl.classList.add('rjf-animate');\n\n        nextEl.style.opacity = 0;\n        nextEl.style.transform = 'translateY(-' + (y2 - y1)  + 'px)';\n\n        el.style.opacity = 0;\n        el.style.transform = 'translateY(' + (y2 - y1)  + 'px)';\n    }\n\n    setTimeout(function() {\n        callback();\n        \n        el.classList.remove('rjf-animate', 'rjf-' + animation);\n        el.style = null;\n\n        if (animation === 'move-up') {\n            prevEl.classList.remove('rjf-animate');\n            prevEl.style = null;\n        }\n        else if (animation === 'move-down') {\n            nextEl.classList.remove('rjf-animate');\n            nextEl.style = null;\n        }\n    }, 200);\n}\n\nexport function FormRowControls(props) {\n    return (\n        <div className=\"rjf-form-row-controls\">\n            {props.onMoveUp &&\n                <Button \n                    className=\"move-up\"\n                    onClick={(e) => animate(e, 'move-up', props.onMoveUp)}\n                    title=\"Move up\"\n                >\n                    <span>&uarr;</span>\n                </Button>\n            }\n            {props.onMoveDown &&\n                <Button \n                    className=\"move-down\"\n                    onClick={(e) => animate(e, 'move-down', props.onMoveDown)}\n                    title=\"Move down\"\n                >\n                    <span>&darr;</span>\n                </Button>\n            }\n            {props.onRemove &&\n                <Button \n                    className=\"remove\"\n                    onClick={(e) => animate(e, 'remove', props.onRemove)}\n                    title=\"Remove\"\n                >\n                    <span>&times;</span>\n                </Button>\n            }\n        </div>\n    );\n}\n\nexport function FormRow(props) {\n    return (\n        <div className=\"rjf-form-row\">\n            <FormRowControls {...props} />\n            <div className=\"rjf-form-row-inner\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\n\nexport function FormGroup(props) {\n    let hasChildren = React.Children.count(props.children);\n\n    let innerClassName = props.level === 0 && !hasChildren\n        ? \"\" \n        : \"rjf-form-group-inner\";\n\n    return (\n        <div className=\"rjf-form-group\">\n            {props.level === 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n            <div className={innerClassName}>\n                {props.level > 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n                {props.children}\n                {props.addable && \n                <Button\n                    className=\"add\"\n                    onClick={(e) => props.onAdd()}\n                    title=\"Add new\"\n                >\n                    {hasChildren ? 'Add more' : 'Add'}\n                </Button>\n                }\n            </div>\n        </div>\n    );\n}\n","import {getBlankData} from './data';\nimport {Button, FormInput, FormCheckInput, FormRadioInput, FormSelectInput,\n    FormFileInput, FormRow, FormGroup, FormRowControls, FormTextareaInput,\n    FormDateTimeInput} from './components';\nimport {getVerboseName} from './util';\n\n\nfunction handleChange(e, fieldType, callback) {\n    let type = e.target.type\n    let value;\n\n    if (type === 'checkbox') {\n        value = e.target.checked;\n    } else {\n        value = e.target.value;\n    }\n\n    if (fieldType === 'number' || fieldType === 'integer') {\n        value = value.trim();\n        if (value === '')\n            value = null;\n        else if (!isNaN(Number(value)))\n            value = Number(value);\n    } else if (fieldType === 'boolean') {\n        if (value === 'false' || value === false)\n            value = false;\n        else\n            value = true;\n    }\n\n    callback(e.target.name, value);\n}\n\n\nfunction FormField(props) {\n    let inputProps = {\n        name: props.name,\n        value: props.data,\n        readOnly: props.schema.readOnly || props.schema.readonly,\n    };\n\n    let type = props.schema.type;\n    if (props.schema.choices) {\n        inputProps.options = props.schema.choices;\n        type = 'select';\n    }\n    if (props.schema.widget)\n        type = props.schema.widget;\n\n    let InputField;\n\n    switch (type) {\n        case 'string':\n            InputField = FormInput;\n\n            if (props.schema.format) {\n                if (props.schema.format === 'data-url' || props.schema.format === 'file-url') {\n                    InputField = FormFileInput;\n                } else if (props.schema.format === 'datetime') {\n                    InputField = FormDateTimeInput;\n                }\n                inputProps.type = props.schema.format;\n            }\n            else {\n                inputProps.type = 'text';\n            }\n            break;\n        case 'number':\n            inputProps.type = 'number';\n            InputField = FormInput;\n            break;\n        case 'integer':\n            inputProps.type = 'number';\n            inputProps.step = '1';\n            InputField = FormInput;\n            break;\n        case 'boolean':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'checkbox':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'radio':\n            inputProps.type = 'radio';\n            InputField = FormRadioInput;\n            break;\n        case 'select':\n            InputField = FormSelectInput;\n            break;\n        case 'textarea':\n            InputField = FormTextareaInput;\n            break;\n        default:\n            inputProps.type = 'text';\n            InputField = FormInput;\n    }\n\n   return (\n        <InputField \n            {...inputProps}\n            label={\n                props.editable ? <span>{props.schema.title} <Button className=\"edit\" onClick={props.onEdit} title=\"Edit\">Edit</Button></span>\n                :\n                props.schema.title\n            }\n            onChange={(e) => handleChange(e, props.schema.type, props.onChange)}\n        />\n    );\n}\n\n\nexport function getStringFormRow(args) {\n    let {\n        data, schema, name, onChange, onRemove, removable, onEdit, editable, \n        onMoveUp, onMoveDown\n    } = args;\n\n    return (\n        <FormRow \n            key={name}\n            onRemove={removable ? (e) => onRemove(name) : null}\n            onMoveUp={onMoveUp}\n            onMoveDown={onMoveDown}\n        >\n            <FormField \n                data={data}\n                schema={schema}\n                name={name}\n                onChange={onChange}\n                onEdit={onEdit}\n                editable={editable}\n            />\n        </FormRow>\n    );\n}\n\nexport function getArrayFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, onMove, level} = args;\n\n    let rows = [];\n    let groups = [];\n\n    let removable = true;\n    let min_items = schema.min_items || schema.minItems || 0;\n    if (data.length <= min_items)\n        removable = false;\n\n    let addable = true;\n    let max_items = schema.max_items || schema.maxItems || 100;\n    if (data.length >= max_items)\n        addable = false;\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    let nextArgs = {\n        schema: schema.items,\n        onChange: onChange,\n        onAdd: onAdd,\n        onRemove: onRemove,\n        level: level + 1,\n        removable: removable,\n        onMove: onMove,\n    };\n\n    for (let i = 0; i < data.length; i++) {\n        nextArgs.data = data[i];\n        nextArgs.name = name + '-' + i;\n\n        if (i === 0)\n            nextArgs.onMoveUp = null;\n        else\n            nextArgs.onMoveUp = (e) => onMove(name + '-' + i, name + '-' + (i - 1));\n\n        if (i === data.length - 1)\n            nextArgs.onMoveDown = null;\n        else\n            nextArgs.onMoveDown = (e) => onMove(name + '-' + i, name + '-' + (i + 1));;\n\n        if (type === 'array') {\n            groups.push(getArrayFormRow(nextArgs));\n        } else if (type === 'object') {\n            groups.push(getObjectFormRow(nextArgs));\n        } else {\n            rows.push(getStringFormRow(nextArgs));\n        } \n    }\n\n    let coords = name; // coordinates for insertion and deletion\n\n    if (rows.length || (!rows.length && !groups.length)) {\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={addable}\n                onAdd={() => onAdd(getBlankData(schema.items), coords)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    if (groups.length) {\n        let groupTitle = schema.title ? <div className=\"rjf-form-group-title\">{schema.title}</div> : null;\n\n        groups = (\n            <div key={'group_' + name}>\n                {groupTitle}\n                {groups.map((i, index) => (\n                    <div className=\"rjf-form-group-wrapper\" key={'group_wrapper_' + name + '_' + index}>\n                        <FormRowControls\n                            onRemove={removable ? (e) => onRemove(name + '-' + index) : null}\n                            onMoveUp={index > 0 ? (e) => onMove(name + '-' + index, name + '-' + (index - 1)) : null}\n                            onMoveDown={index < groups.length - 1 ? (e) => onMove(name + '-' + index, name + '-' + (index + 1)) : null}\n                        />\n                        {i}\n                    </div>\n                    )\n                )}\n                {addable && \n                    <Button\n                        className=\"add\"\n                        onClick={(e) => onAdd(getBlankData(schema.items), coords)}\n                        title=\"Add new\"\n                    >\n                        Add item\n                    </Button>\n                }\n            </div>\n        )\n    }\n\n    return [...rows, ...groups];\n}\n\n\nexport function getObjectFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, level, onMove} = args;\n\n    let rows = [];\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    if (schema.additionalProperties)\n        keys = [...keys, ...Object.keys(data).filter((k) => keys.indexOf(k) === -1)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let value = data[key];\n        let childName = name + '-' + key;\n        let schemaValue = schema_keys[key] || {type: 'string'};\n\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (!schemaValue.title)\n            schemaValue.title = getVerboseName(key);\n\n        let removable = false;\n        if (schema_keys[key] === undefined)\n            removable = true;\n\n        let nextArgs = {\n            data: value,\n            schema: schemaValue,\n            name: childName,\n            onChange: onChange,\n            onAdd: onAdd,\n            onRemove: onRemove,\n            level: level + 1,\n            removable: removable,\n            onMove: onMove\n        };\n\n         if (type === 'array') {\n            rows.push(getArrayFormRow(nextArgs));\n        } else if (type === 'object') {\n            rows.push(getObjectFormRow(nextArgs));\n        } else {\n            nextArgs.onEdit = () => handleKeyEdit(data, key, value, childName, onAdd, onRemove);\n            nextArgs.editable = removable;\n            rows.push(getStringFormRow(nextArgs));\n        }\n    }\n\n    if (rows.length || schema.additionalProperties) {\n        let className = \"rjf-form-group-inner\";\n        if (level === 0 && !rows.length)\n            className = \"\";\n        \n        let coords = name;\n\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={schema.additionalProperties}\n                onAdd={() => handleKeyValueAdd(data, coords, onAdd)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    return rows;\n}\n\n\nfunction handleKeyValueAdd(data, coords, onAdd) {\n    let key = prompt(\"Add new key\");\n    if (key === null) // clicked cancel\n        return;\n\n    key = key.trim();\n    if (!key)\n        alert(\"(!) Can't add empty key.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(key))\n        alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n    else\n        onAdd(\"\", coords + '-' + key);   \n}\n\n\nfunction handleKeyEdit(data, key, value, coords, onAdd, onRemove) {\n    let newKey = prompt(\"Rename key\", key);\n    if (newKey === null) // clicked cancel\n        return;\n\n    newKey = newKey.trim();\n\n    if (newKey === key) // same keys\n        return;\n\n    if (!newKey)\n        return alert(\"(!) Key name can't be empty.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(newKey))\n        return alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n\n    onAdd(value, name + '-' + newKey);\n    onRemove(coords);\n}\n","import {getBlankData, getSyncedData} from './data';\nimport {getArrayFormRow, getObjectFormRow} from './ui';\nimport {EditorContext} from './util';\n\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dataInput = document.getElementById(this.props.dataInputId);\n        this.schema = props.schema;\n\n        let data = props.data;\n\n        if (!data) {\n            // create empty data from schema\n            data = getBlankData(this.schema);\n        } else {\n            // data might be stale if schema has new keys, so add them to data\n            try {\n                data = getSyncedData(data, this.schema);\n            } catch (error) {\n                console.error(\"Error: Schema and data structure don't match\");\n                console.error(error);\n            }\n        }\n\n        this.state = {\n            value: '',\n            data: data\n        };\n        \n        // update data in the input\n        this.populateDataInput();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.data !== prevState.data) {\n            this.populateDataInput();\n        }\n    }\n\n    populateDataInput = () => {\n        this.dataInput.value = JSON.stringify(this.state.data);\n    }\n\n    handleChange = (coords, value) => {\n        /*\n            e.target.name is a chain of indices and keys:\n            xxx-0-key-1-key2 and so on.\n            These can be used as coordinates to locate \n            a particular deeply nested item.\n\n            This first coordinate is not important and should be removed.\n        */\n        coords = coords.split('-');\n\n        coords.shift(); // remove first coord\n\n        function setDataUsingCoords(coords, data, value) {\n            let coord = coords.shift();\n            if (!isNaN(Number(coord)))\n                coord = Number(coord);\n\n            if (coords.length) {\n                setDataUsingCoords(coords, data[coord], value);\n            } else {\n                data[coord] = value;\n            }\n        }\n\n        let _data = JSON.parse(JSON.stringify(this.state.data));\n\n        setDataUsingCoords(coords, _data, value);\n\n        this.setState({data: _data});\n    }\n\n    getFields = () => {\n        let data = this.state.data;\n        let formGroups = [];\n\n        try {\n            let type = this.schema.type;\n    \n            if (type === 'list')\n                type = 'array';\n            else if (type === 'dict')\n                type = 'object';\n\n            let args = {\n                data: data,\n                schema: this.schema,\n                name: 'rjf',\n                onChange: this.handleChange,\n                onAdd: this.addFieldset,\n                onRemove: this.removeFieldset,\n                onMove: this.moveFieldset,\n                level: 0\n            };\n\n            if (type === 'array') {\n                return getArrayFormRow(args);\n            } else if (type === 'object') {\n                return getObjectFormRow(args);\n            }\n        } catch (error) {\n            formGroups = (\n                <p style={{color: '#f00'}}>\n                    <strong>(!) Error:</strong> Schema and data structure do not match.\n                </p>\n            );\n        }\n\n        return formGroups;\n    }\n\n    addFieldset = (blankData, coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            addDataUsingCoords(coords, _data, blankData);\n\n            return {data: _data};\n        });\n    }\n\n    removeFieldset = (coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            removeDataUsingCoords(coords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    moveFieldset = (oldCoords, newCoords) => {\n        oldCoords = oldCoords.split(\"-\");\n        oldCoords.shift();\n\n        newCoords = newCoords.split(\"-\");\n        newCoords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            moveDataUsingCoords(oldCoords, newCoords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-form-wrapper\">\n                <fieldset className=\"module aligned\">\n                    <EditorContext.Provider \n                        value={{\n                            fileUploadEndpoint: this.props.fileUploadEndpoint,\n                            fieldName: this.props.fieldName,\n                            modelName: this.props.modelName,\n                        }}\n                    >\n                    {this.getFields()}\n                    </EditorContext.Provider>\n                </fieldset>\n            </div>\n        );\n    }\n}\n\n\nfunction addDataUsingCoords(coords, data, value) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        addDataUsingCoords(coords, data[coord], value);\n    } else {\n        if (Array.isArray(data[coord])) {\n            data[coord].push(value);\n        }\n        else {\n            if (Array.isArray(data)) {\n                data.push(value);\n            } else {\n                data[coord] = value;\n            }\n        }\n    }\n}\n\nfunction removeDataUsingCoords(coords, data) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        removeDataUsingCoords(coords, data[coord]);\n    } else {\n        if (Array.isArray(data))\n            data.splice(coord, 1); // in-place mutation\n        else\n            delete data[coord];\n    }\n}\n\n\nfunction moveDataUsingCoords(oldCoords, newCoords, data) {\n    let oldCoord = oldCoords.shift();\n\n    if (!isNaN(Number(oldCoord)))\n        oldCoord = Number(oldCoord);\n\n    if (oldCoords.length) {\n        moveDataUsingCoords(oldCoords, newCoords, data[oldCoord]);\n    } else {\n        if (Array.isArray(data)) {\n            /* Using newCoords allows us to move items from \n            one array to another. \n            However, for now, we're only moving items in a \n            single array.\n            */\n            let newCoord = newCoords[newCoords.length - 1];\n            \n            let item = data[oldCoord];\n\n            data.splice(oldCoord, 1);\n            data.splice(newCoord, 0, item);\n        }\n    }\n}\n","import JSONForm from './renderer';\n\n\nexport default {\n  JSONForm,\n};","import Form from './form';\n\n\nexport default function JSONForm(config) {\n    this.containerId = config.containerId;\n    this.dataInputId = config.dataInputId;\n    this.schema = config.schema;\n    this.data = config.data;\n    this.fileUploadEndpoint = config.fileUploadEndpoint;\n    this.fieldName = config.fieldName;\n    this.modelName = config.modelName;\n\n    this.render = function() {\n        ReactDOM.render(\n            <Form\n                schema={this.schema}\n                dataInputId={this.dataInputId}\n                data={this.data}\n                fileUploadEndpoint={this.fileUploadEndpoint}\n                fieldName={this.fieldName}\n                modelName={this.modelName}\n            />,\n            document.getElementById(this.containerId)\n        );\n    }\n}"],"names":["getBlankObject","schema","keys","schema_keys","properties","key","value","type","getBlankArray","items","push","getBlankData","getSyncedArray","data","newData","JSON","parse","stringify","i","length","item","getSyncedObject","Object","schemaValue","hasOwnProperty","Button","className","props","classes","split","React","trim","children","Loader","Icon","icon","name","ChevronUp","ChevronDown","xmlns","width","height","fill","viewBox","fillRule","d","TimePicker","_this","validateValue","handleChange","e","target","dataset","isNaN","validValue","parseInt","startsWith","toString","padStart","setState","handleKeyDown","keyCode","handleSpin","state","handleBlur","hh","mm","ss","ampm","componentDidUpdate","prevProps","prevState","this","onChange","render","onClick","_this2","onBlur","onKeyDown","Component","EditorContext","createContext","capitalize","string","charAt","toUpperCase","substr","toLowerCase","FormInput","label","inputRef","ref","FormCheckInput","undefined","checked","readOnly","disabled","FormRadioInput","options","map","option","inputValue","FormSelectInput","FormFileInput","getFileName","extractFileInfo","dataURL","dataURI","splitted","params","replace","filter","param","binary","atob","array","charCodeAt","blob","window","Blob","Uint8Array","dataURItoBlob","size","addNameToDataURL","encodeURIComponent","file","files","fileName","reader","FileReader","onload","event","result","readAsDataURL","endpoint","context","fileUploadEndpoint","console","error","alert","loading","formData","FormData","append","fieldName","modelName","slice","fetch","method","headers","document","cookie","indexOf","body","then","response","json","file_path","showFileBrowser","current","click","clearFile","createRef","contextType","FormTextareaInput","updateHeight","el","offset","offsetHeight","clientHeight","style","scrollHeight","componentDidMount","FormDateTimeInput","_this3","handleClickOutside","showTimePicker","timePickerContainer","contains","timeInput","sendValue","date","Date","ms","toISOString","handleDateChange","handleTimeChange","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","addEventListener","componentWillUnmount","removeEventListener","onFocus","GroupTitle","animate","animation","callback","parentElement","prevEl","previousElementSibling","nextEl","nextElementSibling","classList","add","y","getBoundingClientRect","y1","y2","opacity","transform","setTimeout","remove","FormRowControls","onMoveUp","title","onMoveDown","onRemove","FormRow","FormGroup","hasChildren","Children","count","innerClassName","level","addable","onAdd","FormField","InputField","inputProps","readonly","choices","widget","format","step","editable","onEdit","fieldType","Number","getStringFormRow","args","removable","getArrayFormRow","onMove","rows","groups","min_items","minItems","max_items","maxItems","nextArgs","getObjectFormRow","coords","index","additionalProperties","k","childName","getVerboseName","handleKeyEdit","prompt","handleKeyValueAdd","newKey","Form","populateDataInput","dataInput","shift","_data","setDataUsingCoords","coord","getFields","formGroups","addFieldset","removeFieldset","moveFieldset","color","blankData","addDataUsingCoords","removeDataUsingCoords","oldCoords","newCoords","moveDataUsingCoords","getElementById","dataInputId","Provider","Array","isArray","splice","oldCoord","newCoord","JSONForm","config","containerId","ReactDOM"],"mappings":"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"}