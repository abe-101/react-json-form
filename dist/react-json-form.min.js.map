{"version":3,"file":"react-json-form.min.js","sources":["../src/data.js","../src/components/buttons.js","../src/components/loaders.js","../src/components/icons.js","../src/components/widgets.js","../src/util.js","../src/components/form.js","../src/components/containers.js","../src/ui.js","../src/form.js","../src/index.js","../src/renderer.js"],"sourcesContent":["export function getBlankObject(schema) {\n    let keys = {};\n\n    let schema_keys = schema.keys || schema.properties;\n\n    for (let key in schema_keys) {\n        let value = schema_keys[key];\n        let type = value.type;\n\n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (type === 'array')\n            keys[key] = getBlankArray(value);\n        else if (type === 'object')\n            keys[key] = getBlankObject(value);\n        else if (type === 'boolean')\n            keys[key] = value.default || false;\n        else if (type === 'integer' || type === 'number')\n            keys[key] = value.default || null;\n        else // string etc.\n            keys[key] = value.default || '';\n    }\n\n    return keys;\n}\n\n\nexport function getBlankArray(schema) {\n    if (schema.default)\n        return schema.default;\n\n    let items = [];\n    let type = schema.items.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array') {\n        items.push(getBlankArray(schema.items))\n        return items;\n    }\n    else if (type === 'object') {\n        items.push(getBlankObject(schema.items));\n        return items;\n    }\n\n    if (schema.items.widget === 'multiselect')\n        return items;\n\n    if (type === 'boolean')\n        items.push(schema.items.default || false);\n    else if (type === 'integer' || type === 'number')\n        items.push(schema.items.default || null);\n    else // string, etc.\n        items.push(schema.items.default || '');\n\n    return items;\n}\n\n\nexport function getBlankData(schema) {\n    let type = schema.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array')\n        return getBlankArray(schema);\n    else if (type === 'object')\n        return getBlankObject(schema);\n    else if (type === 'boolean')\n        return schema.default || false;\n    else if (type === 'integer' || type === 'number')\n        return schema.default || null;\n    else // string, etc.\n        return schema.default || '';\n}\n\n\n\nfunction getSyncedArray(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n\n        if (type === 'array') {\n            newData[i] = getSyncedArray(item, schema.items);\n        } else if (type === 'object') {\n            newData[i] = getSyncedObject(item, schema.items);\n        }\n        else {\n            if ((type === 'integer' || type === 'number') && item === '')\n                newData[i] = null;\n        }\n    }\n\n    return newData;\n}\n\n\nfunction getSyncedObject(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let schemaValue = schema_keys[key];\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n      \n        if (!data.hasOwnProperty(key)) {\n            if (type === 'array')\n                newData[key] = getSyncedArray([], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject({}, schemaValue);\n            else if (type === 'boolean')\n                newData[key] = false;\n            else if (type === 'integer' || type === 'number')\n                newData[key] = null;\n            else\n                newData[key] = '';\n        } else {\n            if (type === 'array')\n                newData[key] = getSyncedArray(data[key], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject(data[key], schemaValue);\n            else {\n                if ((type === 'integer' || type === 'number') && data[key] === '')\n                    newData[key] = null;\n                else\n                    newData[key] = data[key];\n            }\n        }\n        \n    }\n\n    return newData;\n}\n\n\nexport function getSyncedData(data, schema) {\n    // adds those keys to data which are in schema but not in data\n\n    let type = schema.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array') {\n        return getSyncedArray(data, schema);\n    } else if (type === 'object') {\n        return getSyncedObject(data, schema);\n    }\n\n    return data;\n}\n","export default function Button({className, ...props}) {\n    if (!className)\n        className = '';\n\n    let classes = className.split(' ');\n\n    className = '';\n    for (let i = 0; i < classes.length; i++) {\n        className = className + 'rjf-' + classes[i] + '-button ';\n    }\n\n    return (\n        <button \n            className={className.trim()}\n            type=\"button\"\n            {...props}\n        >\n            {props.children}\n        </button>\n    );\n}","export default function Loader (props) {\n    return <div className=\"rjf-loader\"></div>;\n}\n","export default function Icon(props) {\n    let icon;\n\n    switch (props.name) {\n        case 'chevron-up':\n            icon = <ChevronUp />;\n            break;\n        case 'chevron-down':\n            icon = <ChevronDown />;\n            break;\n    }\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className={\"rjf-icon rjf-icon-\" + props.name} viewBox=\"0 0 16 16\">\n            {icon}\n        </svg>\n    );\n}\n\nfunction ChevronUp(props) {\n    return (\n        <path fillRule=\"evenodd\" d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"/>\n    );\n}\n\nfunction ChevronDown(props) {\n    return (\n        <path fillRule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n    );\n}\n","import Button from './buttons';\nimport Icon from './icons';\n\n\nexport class TimePicker extends React.Component {\n    componentWillUnmount() {\n        let data = {\n            hh: this.validateValue('hh', this.props.hh).toString().padStart(2, '0'),\n            mm: this.validateValue('mm', this.props.mm).toString().padStart(2, '0'),\n            ss: this.validateValue('ss', this.props.ss).toString().padStart(2, '0')\n        }\n        this.sendValue(data);\n    }\n\n    sendValue = (data) => {\n        this.props.onChange(data);\n    }\n\n    validateValue = (name, value) => {\n        if (name === 'hh' && value < 1)\n            return 1;\n        else if (name !== 'hh' && value < 0)\n            return 0;\n        else if (name === 'hh' && value > 12)\n            return 12;\n        else if (name !== 'hh' && value > 59)\n            return 59;\n\n        return value;\n    }\n\n    handleChange = (e) => {\n        let name = e.target.dataset.name;\n        let value = e.target.value;\n\n        if (isNaN(value))\n            return;\n\n        let validValue = this.validateValue(name, parseInt(value) || 0);\n\n        if (name === 'hh' && (value === '0' || value === '' || value === '00') && validValue === 1)\n            validValue = 0;\n\n        if (value.startsWith('0') && validValue < 10 && validValue !== 0) {\n            validValue = validValue.toString().padStart(2, '0');\n        }\n\n        this.sendValue({[name]: value !== '' ? validValue.toString() : ''});\n    }\n\n    handleKeyDown = (e) => {\n        if (e.keyCode !== 38 && e.keyCode !== 40)\n            return;\n\n        let name = e.target.dataset.name;\n        let value = parseInt(e.target.value) || 0;\n\n        if (e.keyCode === 38) {\n            value++;\n        } else if (e.keyCode === 40) {\n            value--;\n        }\n\n        this.sendValue({[name]: this.validateValue(name, value).toString().padStart(2, '0')});\n    }\n\n    handleSpin = (name, type) => {\n        let value = this.props[name];\n\n        if (name === 'ampm') {\n            value = value === 'am' ? 'pm': 'am';\n        } else {\n            value = parseInt(value) || 0;\n            if (type === 'up') {\n                value++;\n            } else {\n                value--;\n            }\n            value = this.validateValue(name, value).toString().padStart(2, '0');\n        }\n\n        this.sendValue({[name]: value});\n    }\n\n    handleBlur = (e) => {\n        let value = this.validateValue(e.target.dataset.name, parseInt(e.target.value) || 0);\n\n        if (value < 10) {\n            this.sendValue({[e.target.dataset.name]: value.toString().padStart(2, '0')});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-time-picker\">\n                <div className=\"rjf-time-picker-row rjf-time-picker-labels\">\n                    <div className=\"rjf-time-picker-col\">Hrs</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">Min</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">Sec</div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">am/pm</div>\n                </div>\n\n                <div className=\"rjf-time-picker-row\">\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('hh', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('mm', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ss', 'up')}><Icon name=\"chevron-up\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ampm', 'up')}><Icon name=\"chevron-up\"/></Button></div> \n                </div>\n\n                <div className=\"rjf-time-picker-row rjf-time-picker-values\">\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"hh\" value={this.props.hh} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\">:</div>\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"mm\" value={this.props.mm} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\">:</div>\n                    <div className=\"rjf-time-picker-col\"><input type=\"text\" data-name=\"ss\" value={this.props.ss} onChange={this.handleChange} onBlur={this.handleBlur} onKeyDown={this.handleKeyDown} /></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\">{this.props.ampm}</div>\n                </div>\n\n                <div className=\"rjf-time-picker-row\">\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('hh', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('mm', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ss', 'down')}><Icon name=\"chevron-down\"/></Button></div>\n                    <div className=\"rjf-time-picker-col rjf-time-picker-col-sm\"></div>\n                    <div className=\"rjf-time-picker-col\"><Button onClick={() => this.handleSpin('ampm', 'down')}><Icon name=\"chevron-down\"/></Button></div> \n                </div>\n            </div>\n        );\n    }\n}\n","export const EditorContext = React.createContext();\n\n\nexport function capitalize(string) {\n    if (!string)\n        return '';\n    \n    return string.charAt(0).toUpperCase() + string.substr(1).toLowerCase();\n}\n\n\nexport function getVerboseName(name) {\n    if (name === undefined || name === null)\n        return '';\n\n    name = name.replace(/_/g, ' ');\n    return capitalize(name);\n}\n\n\nexport function getCsrfCookie() {\n    if ((document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)).length) {\n        return document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)[0].split('=')[1];\n    }\n    return null;\n}\n","import Button from './buttons';\nimport Loader from './loaders';\nimport {TimePicker} from './widgets';\nimport {EditorContext, getCsrfCookie, capitalize} from '../util';\n\n\nexport function FormInput({label, help_text, error, inputRef, ...props}) {\n\n    if (props.type === 'string')\n        props.type = 'text'\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    if (props.value === null)\n        props.value = '';\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <input {...props} />\n        </div>\n    );\n}\n\n\nexport function FormCheckInput({label, help_text, error, value, ...props}) {\n\n    if (!label)\n        label = props.name.toUpperCase();\n\n    if (props.type === 'bool')\n        props.type = 'checkbox';\n\n    if (props.checked === undefined)\n        props.checked = value;\n\n    if (props.checked === '' || props.checked === null || props.checked === undefined)\n        props.checked = false\n\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            <label><input {...props} /> {label}</label>\n        </div>\n    );\n}\n\n\nexport function FormRadioInput({label, help_text, error, value, options, ...props}) {\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            <label>{label}</label>\n            {options.map((option, i) => {\n                let label, inputValue;\n                if (typeof option === 'object') {\n                    label = option.label;\n                    inputValue = option.value;\n                } else {\n                    label = option;\n                    if (typeof label === 'boolean')\n                        label = capitalize(label.toString());\n                    inputValue = option;\n                }\n\n                return (\n                    <label key={label + '_' + inputValue + '_' + i}>\n                        <input {...props} value={inputValue} checked={inputValue === value} /> {label}\n                    </label>\n                );\n            })}\n        </div>\n    );\n}\n\n\nexport function FormSelectInput({label, help_text, error, value, options, ...props}) {\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <select value={value || ''} {...props}>\n                <option disabled value=\"\" key={'__placehlder'}>Select...</option>\n                {options.map((option, i) => {\n                    let label, inputValue;\n                    if (typeof option === 'object') {\n                        label = option.label;\n                        inputValue = option.value;\n                    } else {\n                        label = option;\n                        if (typeof label === 'boolean')\n                            label = capitalize(label.toString());\n                        inputValue = option;\n                    }\n\n                    return (\n                        <option value={inputValue} key={label + '_' + inputValue + '_' + i}>\n                            {label}\n                        </option>\n                    );\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport class FormMultiSelectInput extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showOptions: false\n        };\n\n        this.optionsContainer = React.createRef();\n        this.input = React.createRef();\n    }\n\n    handleChange = (e) => {\n        let value = [...this.props.value];\n\n        if (e.target.checked) {\n            value.push(e.target.value);\n        } else {\n            value = value.filter((item) => item !== e.target.value);\n        }\n\n        let event = {\n            target: {\n                type: this.props.type,\n                value: value,\n                name: this.props.name\n            }\n        };\n\n        this.props.onChange(event);\n    }\n\n    showOptions = (e) => {\n        if (!this.state.showOptions)\n            this.setState({showOptions: true});\n    }\n\n    hideOptions = (e) => {\n        this.setState({showOptions: false});\n    }\n\n    toggleOptions = (e) => {\n        this.setState((state) => ({showOptions: !state.showOptions}))\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-multiselect-field\">\n                <FormInput\n                    label={this.props.label}\n                    type=\"text\"\n                    value={this.props.value.length ? this.props.value.length + ' selected' : 'Select...'}\n                    help_text={this.props.help_text}\n                    error={this.props.error}\n                    onClick={this.toggleOptions}\n                    readOnly={true}\n                    inputRef={this.input}\n                    className=\"rjf-multiselect-field-input\"\n                />\n                {this.state.showOptions &&\n                    <FormMultiSelectInputOptions\n                        options={this.props.options}\n                        value={this.props.value}\n                        hideOptions={this.hideOptions}\n                        onChange={this.handleChange}\n                        containerRef={this.optionsContainer}\n                        inputRef={this.input}\n                        disabled={this.props.readOnly}\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nclass FormMultiSelectInputOptions extends React.Component {\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside = (e) => {\n        if (this.props.containerRef.current &&\n            !this.props.containerRef.current.contains(e.target) &&\n            !this.props.inputRef.current.contains(e.target)\n        )\n            this.props.hideOptions();\n    };\n\n    render() {\n        return (\n            <div ref={this.props.containerRef}>\n                <div className=\"rjf-multiselect-field-options-container\">\n                    {this.props.options.map((option, i) => {\n                        let label, inputValue;\n                        if (typeof option === 'object') {\n                            label = option.label;\n                            inputValue = option.value;\n                        } else {\n                            label = option;\n                            if (typeof label === 'boolean')\n                                label = capitalize(label.toString());\n                            inputValue = option;\n                        }\n\n                        let selected = this.props.value.indexOf(inputValue) > -1;\n\n                        let optionClassName = 'rjf-multiselect-field-option';\n                        if (selected)\n                            optionClassName += ' selected';\n                        if (this.props.disabled)\n                            optionClassName += ' disabled';\n\n                        return (\n                            <div key={label + '_' + inputValue + '_' + i} className={optionClassName}>\n                                <label>\n                                    <input\n                                        type=\"checkbox\"\n                                        onChange={this.props.onChange}\n                                        value={inputValue}\n                                        checked={selected}\n                                        disabled={this.props.disabled}\n                                    /> {label}\n                                </label>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport function dataURItoBlob(dataURI) {\n      // Split metadata from data\n      const splitted = dataURI.split(\",\");\n      // Split params\n      const params = splitted[0].split(\";\");\n      // Get mime-type from params\n      const type = params[0].replace(\"data:\", \"\");\n      // Filter the name property from params\n      const properties = params.filter(param => {\n            return param.split(\"=\")[0] === \"name\";\n      });\n      // Look for the name and use unknown if no name property.\n      let name;\n      if (properties.length !== 1) {\n            name = \"unknown\";\n      } else {\n            // Because we filtered out the other property,\n            // we only have the name case here.\n            name = properties[0].split(\"=\")[1];\n      }\n\n      // Built the Uint8Array Blob parameter from the base64 string.\n      const binary = atob(splitted[1]);\n      const array = [];\n      for (let i = 0; i < binary.length; i++) {\n            array.push(binary.charCodeAt(i));\n      }\n      // Create the blob object\n      const blob = new window.Blob([new Uint8Array(array)], { type });\n\n      return {blob, name};\n}\n\n\n\nexport class FormFileInput extends React.Component {\n    static contextType = EditorContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value,\n            fileName: this.getFileName(),\n            loading: false\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevProps.value) {\n            this.setState({\n                value: this.props.value, \n                fileName: this.getFileName()\n            });\n        }\n    }\n\n    getFileName = () => {\n        if (!this.props.value)\n            return '';\n\n        if (this.props.type === 'data-url') {\n            return this.extractFileInfo(this.props.value).name;\n        } else if (this.props.type === 'file-url') {\n            return this.props.value;\n        } else {\n            return 'Unknown file';\n        }\n    }\n\n    extractFileInfo = (dataURL) => {\n        const {blob, name} = dataURItoBlob(dataURL);\n        return {\n            name: name,\n            size: blob.size,\n            type: blob.type\n        }\n    }\n\n    addNameToDataURL = (dataURL, name) => {\n        return dataURL.replace(';base64', ';name=' + encodeURIComponent(name) + ';base64');\n    }\n\n    handleChange = (e) => {\n        if (this.props.type === 'data-url') {\n            let file = e.target.files[0];\n            let fileName = file.name\n\n            let reader = new FileReader();\n\n            reader.onload = () => {\n\n                // this.setState({src: reader.result});\n\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: this.addNameToDataURL(reader.result, fileName),\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n\n            }\n            reader.readAsDataURL(file);\n        } else if (this.props.type === 'file-url') {\n            let endpoint = this.context.fileUploadEndpoint;\n            if (!endpoint) {\n                console.error(\n                    \"Error: fileUploadEndpoint option need to be passed \"\n                    + \"while initializing editor for enabling file uploads.\");\n                alert(\"Files can't be uploaded.\");\n                return;\n            }\n\n            this.setState({loading: true});\n\n            let formData = new FormData();\n            formData.append('field_name', this.context.fieldName);\n            formData.append('model_name', this.context.modelName);\n            formData.append('coordinates', JSON.stringify(this.props.name.split('-').slice(1)));\n            formData.append('file', e.target.files[0]);\n\n            fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'X-CSRFToken': getCsrfCookie(),\n                },\n                body: formData\n            })\n            .then((response) => response.json())\n            .then((result) => {\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: result.file_path,\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n                this.setState({loading: false});\n            })\n            .catch((error) => {\n                alert('Something went wrong while uploading file');\n                console.error('Error:', error);\n                this.setState({loading: false});\n            });\n\n        }\n\n    }\n\n    showFileBrowser = () => {\n        this.inputRef.current.click();\n    }\n\n    clearFile = () => {\n        let event = {\n            target: {\n                type: 'text',\n                value: '',\n                name: this.props.name\n            }\n        };\n\n        this.props.onChange(event);\n    }\n\n    render() {\n        let {label, value, ...props} = {value, ...this.props};\n        props.type = 'file';\n        props.onChange = this.handleChange;\n\n        if (props.readOnly)\n            props.disabled = true;\n\n        return (\n            <div> \n                {label && <label>{label}</label>}\n                <div className=\"rjf-file-field\">\n                    {this.state.value && \n                        <div className=\"rjf-current-file-name\">\n                            Current file: <span>{this.state.fileName}</span> {' '}\n                            <Button className=\"remove-file\" onClick={this.clearFile}>Clear</Button>\n                        </div>\n                    }\n                    {this.state.value && !this.state.loading && 'Change:'}\n                    {this.state.loading ?\n                        <div className=\"rjf-file-field-loading\"><Loader/> Uploading...</div>\n                    : \n                    <div className=\"rjf-file-field-input\">\n                        <FormInput {...props} inputRef={this.inputRef} />\n                    </div>\n                    }\n                    </div>\n            </div>\n        );\n    }\n}\n\n\nexport class FormTextareaInput extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!props.inputRef)\n            this.inputRef = React.createRef();\n    }\n\n    handleChange = (e) => {\n        this.updateHeight(e.target);\n\n        if (this.props.onChange)\n            this.props.onChange(e);\n    }\n\n    updateHeight = (el) => {\n        let offset = el.offsetHeight - el.clientHeight;\n        el.style.height = 'auto';\n        el.style.height = (el.scrollHeight + offset) + 'px';\n    }\n\n    componentDidMount() {\n        if (this.props.inputRef)\n            this.updateHeight(this.props.inputRef.current);\n        else \n            this.updateHeight(this.inputRef.current);\n    }\n\n    render() {\n        let {label, help_text, error, inputRef, ...props} = this.props;\n\n        delete props.type;\n\n        props.ref = inputRef || this.inputRef;\n        props.onChange = this.handleChange;\n\n        return (\n            <div>\n                {label && <label>{label}</label>}\n                <textarea {...props} />\n            </div>\n        );\n    }\n}\n\n\nexport class FormDateTimeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        // we maintain this input's state in itself\n        // so that we can only pass valid values\n        // otherwise keep the value empty if invalid\n\n        this.state = {\n            ...this.getStateFromProps(),\n            showTimePicker: false,\n        };\n\n        this.timeInput = React.createRef();\n        this.timePickerContainer = React.createRef();\n    }\n\n    getStateFromProps = () => {\n        let date = '';\n        let hh = '12';\n        let mm = '00';\n        let ss = '00';\n        let ms = '000';\n        let ampm = 'am';\n\n        if (this.props.value) {\n            let d = new Date(this.props.value);\n            let year = d.getFullYear().toString().padStart(2, '0');\n            let month = (d.getMonth() + 1).toString().padStart(2, '0');\n            let day = d.getDate().toString().padStart(2, '0');\n            date = year + '-' + month + '-' + day;\n\n            hh = d.getHours();\n            if (hh === 0) {\n                hh = 12;\n            } else if (hh === 12) {\n                ampm = 'pm';\n            } else if (hh > 12) {\n                hh = hh - 12;\n                ampm = 'pm';\n            }\n\n            mm = d.getMinutes();\n            ss = d.getSeconds();\n            ms = d.getMilliseconds();\n\n            hh = hh.toString().padStart(2, '0');\n            mm = mm.toString().padStart(2, '0');\n            ss = ss.toString().padStart(2, '0');\n        }\n\n        return {\n            date: date, hh: hh, mm: mm, ss: ss, ms: ms, ampm: ampm\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.value !== this.props.value) {\n            if (this.state.hh !== '' && this.state.hh !== '0' && this.state.hh !== '00') {\n\n                let changed = false;\n                let newState = this.getStateFromProps();\n                \n                for (let key in newState) {\n                    if (newState[key] !== this.state[key]) {\n                        changed = true;\n                        break;\n                    }\n                }\n\n                if (changed)\n                    this.setState({...newState});\n            }\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside = (e) => {\n        if (this.state.showTimePicker) {\n            if (this.timePickerContainer.current &&\n                !this.timePickerContainer.current.contains(e.target) &&\n                !this.timeInput.current.contains(e.target)\n            )\n                this.setState({showTimePicker: false});\n        }\n    };\n\n    sendValue = () => {\n        // we create a fake event object\n        // to send a combined value from two inputs\n        let event = {\n            target: {\n                type: 'text',\n                value: '',\n                name: this.props.name\n            }\n        };\n\n        if (this.state.date === '' || this.state.date === null)\n            return this.props.onChange(event);\n\n        let hh = parseInt(this.state.hh);\n\n        if (hh === 0)\n            hh = NaN; // zero value is invalid for 12 hour clock, but will be valid for 24 hour clock\n                      // so we set it to NaN to prevent creating a date object\n        \n        if (this.state.ampm === 'am') {\n            if (hh === 12)\n                hh = 0;\n        } else if (this.state.ampm === 'pm') {\n            if (hh !== 12)\n                hh = hh + 12;\n        }\n\n        hh = hh.toString().padStart(2, '0');\n        let mm = this.state.mm.padStart(2, '0');\n        let ss = this.state.ss.padStart(2, '0');\n\n        try {\n            let date = new Date(this.state.date + 'T' + hh + ':' + mm + ':' + ss + '.' + this.state.ms);\n            event['target']['value'] = date.toISOString().replace('Z', '+00:00') // make compatible to python\n        } catch (err) {\n            // invalid date\n            return this.props.onChange(event);\n        }\n\n        this.props.onChange(event);\n    }\n\n    handleDateChange = (e) => {\n        this.setState({date: e.target.value}, this.sendValue);\n    }\n\n    handleTimeChange = (value) => {\n        this.setState({...value}, this.sendValue);\n    }\n\n    showTimePicker = () => {\n        this.setState({showTimePicker: true});\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-datetime-field\">\n                {this.props.label && <label>{this.props.label}</label>}\n                <div className=\"rjf-datetime-field-inner\">\n                    <div className=\"rjf-datetime-field-date\">\n                        <FormInput\n                            label='Date'\n                            type='date'\n                            value={this.state.date}\n                            onChange={this.handleDateChange}\n                        />\n                    </div>\n                    <div className=\"rjf-datetime-field-time\">\n                        <FormInput\n                            label='Time'\n                            type='text'\n                            value={this.state.hh + ':' + this.state.mm + ':' + this.state.ss + ' ' + this.state.ampm}\n                            onFocus={this.showTimePicker}\n                            readOnly={true}\n                            inputRef={this.timeInput}\n                        />\n                        <div ref={this.timePickerContainer}>\n                            {this.state.showTimePicker &&\n                                <TimePicker\n                                    onChange={this.handleTimeChange}\n                                    hh={this.state.hh}\n                                    mm={this.state.mm}\n                                    ss={this.state.ss}\n                                    ampm={this.state.ampm}\n                                />\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import Button from './buttons';\n\n\nexport function GroupTitle(props) {\n    if (!props.children)\n        return null;\n\n    return (\n        <div className=\"rjf-form-group-title\">{props.children}</div>\n    );\n}\n\n\nfunction animate(e, animation, callback) {\n    let el = e.target.parentElement.parentElement;\n    let prevEl = el.previousElementSibling;\n    let nextEl = el.nextElementSibling;\n\n    el.classList.add('rjf-animate', 'rjf-' + animation);\n\n    if (animation === 'move-up') {\n        let {y, height} = prevEl.getBoundingClientRect();\n        let y1 = y, h1 = height;\n        \n        ({y, height} = el.getBoundingClientRect());\n        let y2 = y, h2 = height;\n        \n        prevEl.classList.add('rjf-animate');\n\n        prevEl.style.opacity = 0;\n        prevEl.style.transform = 'translateY(' + (y2 - y1)  + 'px)';\n\n        el.style.opacity = 0;\n        el.style.transform = 'translateY(-' + (y2 - y1)  + 'px)';\n\n    } else if (animation === 'move-down') {\n        let {y, height} = el.getBoundingClientRect();\n        let y1 = y, h1 = height;\n        \n        ({y, height} = nextEl.getBoundingClientRect());\n        let y2 = y, h2 = height;\n        \n        nextEl.classList.add('rjf-animate');\n\n        nextEl.style.opacity = 0;\n        nextEl.style.transform = 'translateY(-' + (y2 - y1)  + 'px)';\n\n        el.style.opacity = 0;\n        el.style.transform = 'translateY(' + (y2 - y1)  + 'px)';\n    }\n\n    setTimeout(function() {\n        callback();\n        \n        el.classList.remove('rjf-animate', 'rjf-' + animation);\n        el.style = null;\n\n        if (animation === 'move-up') {\n            prevEl.classList.remove('rjf-animate');\n            prevEl.style = null;\n        }\n        else if (animation === 'move-down') {\n            nextEl.classList.remove('rjf-animate');\n            nextEl.style = null;\n        }\n    }, 200);\n}\n\nexport function FormRowControls(props) {\n    return (\n        <div className=\"rjf-form-row-controls\">\n            {props.onMoveUp &&\n                <Button \n                    className=\"move-up\"\n                    onClick={(e) => animate(e, 'move-up', props.onMoveUp)}\n                    title=\"Move up\"\n                >\n                    <span>&uarr;</span>\n                </Button>\n            }\n            {props.onMoveDown &&\n                <Button \n                    className=\"move-down\"\n                    onClick={(e) => animate(e, 'move-down', props.onMoveDown)}\n                    title=\"Move down\"\n                >\n                    <span>&darr;</span>\n                </Button>\n            }\n            {props.onRemove &&\n                <Button \n                    className=\"remove\"\n                    onClick={(e) => animate(e, 'remove', props.onRemove)}\n                    title=\"Remove\"\n                >\n                    <span>&times;</span>\n                </Button>\n            }\n        </div>\n    );\n}\n\nexport function FormRow(props) {\n    return (\n        <div className=\"rjf-form-row\">\n            <FormRowControls {...props} />\n            <div className=\"rjf-form-row-inner\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\n\nexport function FormGroup(props) {\n    let hasChildren = React.Children.count(props.children);\n\n    let innerClassName = props.level === 0 && !hasChildren\n        ? \"\" \n        : \"rjf-form-group-inner\";\n\n    return (\n        <div className=\"rjf-form-group\">\n            {props.level === 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n            <div className={innerClassName}>\n                {props.level > 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n                {props.children}\n                {props.addable && \n                <Button\n                    className=\"add\"\n                    onClick={(e) => props.onAdd()}\n                    title=\"Add new\"\n                >\n                    {hasChildren ? 'Add more' : 'Add'}\n                </Button>\n                }\n            </div>\n        </div>\n    );\n}\n","import {getBlankData} from './data';\nimport {Button, FormInput, FormCheckInput, FormRadioInput, FormSelectInput,\n    FormFileInput, FormRow, FormGroup, FormRowControls, FormTextareaInput,\n    FormDateTimeInput, FormMultiSelectInput} from './components';\nimport {getVerboseName} from './util';\n\n\nfunction handleChange(e, fieldType, callback) {\n    let type = e.target.type\n    let value;\n\n    if (type === 'checkbox') {\n        value = e.target.checked;\n    } else {\n        value = e.target.value;\n    }\n\n    if (fieldType === 'number' || fieldType === 'integer') {\n        value = value.trim();\n        if (value === '')\n            value = null;\n        else if (!isNaN(Number(value)))\n            value = Number(value);\n    } else if (fieldType === 'boolean') {\n        if (value === 'false' || value === false)\n            value = false;\n        else\n            value = true;\n    }\n\n    callback(e.target.name, value);\n}\n\n\nfunction FormField(props) {\n    let inputProps = {\n        name: props.name,\n        value: props.data,\n        readOnly: props.schema.readOnly || props.schema.readonly,\n    };\n\n    let type = props.schema.type;\n    if (props.schema.choices) {\n        inputProps.options = props.schema.choices;\n        type = 'select';\n    }\n    if (props.schema.widget) {\n         if (props.schema.widget === 'multiselect' && props.parentType !== 'array') {\n            // pass\n         } else {\n            type = props.schema.widget;\n         }\n    }\n\n\n    let InputField;\n\n    switch (type) {\n        case 'string':\n            InputField = FormInput;\n\n            if (props.schema.format) {\n                if (props.schema.format === 'data-url' || props.schema.format === 'file-url') {\n                    InputField = FormFileInput;\n                } else if (props.schema.format === 'datetime') {\n                    InputField = FormDateTimeInput;\n                }\n                inputProps.type = props.schema.format;\n            }\n            else {\n                inputProps.type = 'text';\n            }\n            break;\n        case 'number':\n            inputProps.type = 'number';\n            InputField = FormInput;\n            break;\n        case 'integer':\n            inputProps.type = 'number';\n            inputProps.step = '1';\n            InputField = FormInput;\n            break;\n        case 'boolean':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'checkbox':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'radio':\n            inputProps.type = 'radio';\n            InputField = FormRadioInput;\n            break;\n        case 'select':\n            InputField = FormSelectInput;\n            break;\n        case 'multiselect':\n            InputField = FormMultiSelectInput;\n            break;\n        case 'textarea':\n            InputField = FormTextareaInput;\n            break;\n        default:\n            inputProps.type = 'text';\n            InputField = FormInput;\n    }\n\n   return (\n        <InputField \n            {...inputProps}\n            label={\n                props.editable ? <span>{props.schema.title} <Button className=\"edit\" onClick={props.onEdit} title=\"Edit\">Edit</Button></span>\n                :\n                props.schema.title\n            }\n            onChange={(e) => handleChange(e, props.schema.type, props.onChange)}\n        />\n    );\n}\n\n\nexport function getStringFormRow(args) {\n    let {\n        data, schema, name, onChange, onRemove, removable, onEdit, editable, \n        onMoveUp, onMoveDown, parentType, ...fieldProps\n    } = args;\n\n    return (\n        <FormRow \n            key={name}\n            onRemove={removable ? (e) => onRemove(name) : null}\n            onMoveUp={onMoveUp}\n            onMoveDown={onMoveDown}\n        >\n            <FormField \n                data={data}\n                schema={schema}\n                name={name}\n                onChange={onChange}\n                onEdit={onEdit}\n                editable={editable}\n                parentType={parentType}\n                {...fieldProps}\n            />\n        </FormRow>\n    );\n}\n\nexport function getArrayFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, onMove, level} = args;\n\n    let rows = [];\n    let groups = [];\n\n    let removable = true;\n    let min_items = schema.min_items || schema.minItems || 0;\n    if (data.length <= min_items)\n        removable = false;\n\n    let addable = true;\n    let max_items = schema.max_items || schema.maxItems || 100;\n    if (data.length >= max_items)\n        addable = false;\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    let nextArgs = {\n        schema: schema.items,\n        onChange: onChange,\n        onAdd: onAdd,\n        onRemove: onRemove,\n        level: level + 1,\n        removable: removable,\n        onMove: onMove,\n        parentType: 'array',\n    };\n\n    if (nextArgs.schema.widget === 'multiselect') {\n        nextArgs.data = data;\n        nextArgs.name = name;\n        nextArgs.removable = false;\n        nextArgs.onMoveUp = null;\n        nextArgs.onMoveDown = null;\n        addable = false;\n        rows.push(getStringFormRow(nextArgs));\n    } else {\n\n        for (let i = 0; i < data.length; i++) {\n            nextArgs.data = data[i];\n            nextArgs.name = name + '-' + i;\n\n            if (i === 0)\n                nextArgs.onMoveUp = null;\n            else\n                nextArgs.onMoveUp = (e) => onMove(name + '-' + i, name + '-' + (i - 1));\n\n            if (i === data.length - 1)\n                nextArgs.onMoveDown = null;\n            else\n                nextArgs.onMoveDown = (e) => onMove(name + '-' + i, name + '-' + (i + 1));\n\n            if (type === 'array') {\n                groups.push(getArrayFormRow(nextArgs));\n            } else if (type === 'object') {\n                groups.push(getObjectFormRow(nextArgs));\n            } else {\n                rows.push(getStringFormRow(nextArgs));\n            } \n        }\n    }\n\n    let coords = name; // coordinates for insertion and deletion\n\n    if (rows.length || (!rows.length && !groups.length)) {\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={addable}\n                onAdd={() => onAdd(getBlankData(schema.items), coords)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    if (groups.length) {\n        let groupTitle = schema.title ? <div className=\"rjf-form-group-title\">{schema.title}</div> : null;\n\n        groups = (\n            <div key={'group_' + name}>\n                {groupTitle}\n                {groups.map((i, index) => (\n                    <div className=\"rjf-form-group-wrapper\" key={'group_wrapper_' + name + '_' + index}>\n                        <FormRowControls\n                            onRemove={removable ? (e) => onRemove(name + '-' + index) : null}\n                            onMoveUp={index > 0 ? (e) => onMove(name + '-' + index, name + '-' + (index - 1)) : null}\n                            onMoveDown={index < groups.length - 1 ? (e) => onMove(name + '-' + index, name + '-' + (index + 1)) : null}\n                        />\n                        {i}\n                    </div>\n                    )\n                )}\n                {addable && \n                    <Button\n                        className=\"add\"\n                        onClick={(e) => onAdd(getBlankData(schema.items), coords)}\n                        title=\"Add new\"\n                    >\n                        Add item\n                    </Button>\n                }\n            </div>\n        )\n    }\n\n    return [...rows, ...groups];\n}\n\n\nexport function getObjectFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, level, onMove} = args;\n\n    let rows = [];\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    if (schema.additionalProperties)\n        keys = [...keys, ...Object.keys(data).filter((k) => keys.indexOf(k) === -1)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let value = data[key];\n        let childName = name + '-' + key;\n        let schemaValue = schema_keys[key] || {type: 'string'};\n\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (!schemaValue.title)\n            schemaValue.title = getVerboseName(key);\n\n        let removable = false;\n        if (schema_keys[key] === undefined)\n            removable = true;\n\n        let nextArgs = {\n            data: value,\n            schema: schemaValue,\n            name: childName,\n            onChange: onChange,\n            onAdd: onAdd,\n            onRemove: onRemove,\n            level: level + 1,\n            removable: removable,\n            onMove: onMove,\n            parentType: 'object',\n        };\n\n         if (type === 'array') {\n            rows.push(getArrayFormRow(nextArgs));\n        } else if (type === 'object') {\n            rows.push(getObjectFormRow(nextArgs));\n        } else {\n            nextArgs.onEdit = () => handleKeyEdit(data, key, value, childName, onAdd, onRemove);\n            nextArgs.editable = removable;\n            rows.push(getStringFormRow(nextArgs));\n        }\n    }\n\n    if (rows.length || schema.additionalProperties) {\n        let className = \"rjf-form-group-inner\";\n        if (level === 0 && !rows.length)\n            className = \"\";\n        \n        let coords = name;\n\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={schema.additionalProperties}\n                onAdd={() => handleKeyValueAdd(data, coords, onAdd)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    return rows;\n}\n\n\nfunction handleKeyValueAdd(data, coords, onAdd) {\n    let key = prompt(\"Add new key\");\n    if (key === null) // clicked cancel\n        return;\n\n    key = key.trim();\n    if (!key)\n        alert(\"(!) Can't add empty key.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(key))\n        alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n    else\n        onAdd(\"\", coords + '-' + key);   \n}\n\n\nfunction handleKeyEdit(data, key, value, coords, onAdd, onRemove) {\n    let newKey = prompt(\"Rename key\", key);\n    if (newKey === null) // clicked cancel\n        return;\n\n    newKey = newKey.trim();\n\n    if (newKey === key) // same keys\n        return;\n\n    if (!newKey)\n        return alert(\"(!) Key name can't be empty.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(newKey))\n        return alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n\n    let newCoords = coords.split('-');\n    newCoords.pop();\n    newCoords.push(newKey);\n    newCoords = newCoords.join('-');\n\n    onAdd(value, newCoords);\n    onRemove(coords);\n}\n","import {getBlankData, getSyncedData} from './data';\nimport {getArrayFormRow, getObjectFormRow} from './ui';\nimport {EditorContext} from './util';\n\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dataInput = document.getElementById(this.props.dataInputId);\n        this.schema = props.schema;\n\n        let data = props.data;\n\n        if (!data) {\n            // create empty data from schema\n            data = getBlankData(this.schema);\n        } else {\n            // data might be stale if schema has new keys, so add them to data\n            try {\n                data = getSyncedData(data, this.schema);\n            } catch (error) {\n                console.error(\"Error: Schema and data structure don't match\");\n                console.error(error);\n            }\n        }\n\n        this.state = {\n            value: '',\n            data: data\n        };\n        \n        // update data in the input\n        this.populateDataInput();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.data !== prevState.data) {\n            this.populateDataInput();\n        }\n    }\n\n    populateDataInput = () => {\n        this.dataInput.value = JSON.stringify(this.state.data);\n    }\n\n    handleChange = (coords, value) => {\n        /*\n            e.target.name is a chain of indices and keys:\n            xxx-0-key-1-key2 and so on.\n            These can be used as coordinates to locate \n            a particular deeply nested item.\n\n            This first coordinate is not important and should be removed.\n        */\n        coords = coords.split('-');\n\n        coords.shift(); // remove first coord\n\n        function setDataUsingCoords(coords, data, value) {\n            let coord = coords.shift();\n            if (!isNaN(Number(coord)))\n                coord = Number(coord);\n\n            if (coords.length) {\n                setDataUsingCoords(coords, data[coord], value);\n            } else {\n                data[coord] = value;\n            }\n        }\n\n        let _data = JSON.parse(JSON.stringify(this.state.data));\n\n        setDataUsingCoords(coords, _data, value);\n\n        this.setState({data: _data});\n    }\n\n    getFields = () => {\n        let data = this.state.data;\n        let formGroups = [];\n\n        try {\n            let type = this.schema.type;\n    \n            if (type === 'list')\n                type = 'array';\n            else if (type === 'dict')\n                type = 'object';\n\n            let args = {\n                data: data,\n                schema: this.schema,\n                name: 'rjf',\n                onChange: this.handleChange,\n                onAdd: this.addFieldset,\n                onRemove: this.removeFieldset,\n                onMove: this.moveFieldset,\n                level: 0\n            };\n\n            if (type === 'array') {\n                return getArrayFormRow(args);\n            } else if (type === 'object') {\n                return getObjectFormRow(args);\n            }\n        } catch (error) {\n            formGroups = (\n                <p style={{color: '#f00'}}>\n                    <strong>(!) Error:</strong> Schema and data structure do not match.\n                </p>\n            );\n        }\n\n        return formGroups;\n    }\n\n    addFieldset = (blankData, coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            addDataUsingCoords(coords, _data, blankData);\n\n            return {data: _data};\n        });\n    }\n\n    removeFieldset = (coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            removeDataUsingCoords(coords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    moveFieldset = (oldCoords, newCoords) => {\n        oldCoords = oldCoords.split(\"-\");\n        oldCoords.shift();\n\n        newCoords = newCoords.split(\"-\");\n        newCoords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            moveDataUsingCoords(oldCoords, newCoords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-form-wrapper\">\n                <fieldset className=\"module aligned\">\n                    <EditorContext.Provider \n                        value={{\n                            fileUploadEndpoint: this.props.fileUploadEndpoint,\n                            fieldName: this.props.fieldName,\n                            modelName: this.props.modelName,\n                        }}\n                    >\n                    {this.getFields()}\n                    </EditorContext.Provider>\n                </fieldset>\n            </div>\n        );\n    }\n}\n\n\nfunction addDataUsingCoords(coords, data, value) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        addDataUsingCoords(coords, data[coord], value);\n    } else {\n        if (Array.isArray(data[coord])) {\n            data[coord].push(value);\n        }\n        else {\n            if (Array.isArray(data)) {\n                data.push(value);\n            } else {\n                data[coord] = value;\n            }\n        }\n    }\n}\n\nfunction removeDataUsingCoords(coords, data) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        removeDataUsingCoords(coords, data[coord]);\n    } else {\n        if (Array.isArray(data))\n            data.splice(coord, 1); // in-place mutation\n        else\n            delete data[coord];\n    }\n}\n\n\nfunction moveDataUsingCoords(oldCoords, newCoords, data) {\n    let oldCoord = oldCoords.shift();\n\n    if (!isNaN(Number(oldCoord)))\n        oldCoord = Number(oldCoord);\n\n    if (oldCoords.length) {\n        moveDataUsingCoords(oldCoords, newCoords, data[oldCoord]);\n    } else {\n        if (Array.isArray(data)) {\n            /* Using newCoords allows us to move items from \n            one array to another. \n            However, for now, we're only moving items in a \n            single array.\n            */\n            let newCoord = newCoords[newCoords.length - 1];\n            \n            let item = data[oldCoord];\n\n            data.splice(oldCoord, 1);\n            data.splice(newCoord, 0, item);\n        }\n    }\n}\n","import JSONForm from './renderer';\n\n\nexport default {\n  JSONForm,\n};","import Form from './form';\n\n\nexport default function JSONForm(config) {\n    this.containerId = config.containerId;\n    this.dataInputId = config.dataInputId;\n    this.schema = config.schema;\n    this.data = config.data;\n    this.fileUploadEndpoint = config.fileUploadEndpoint;\n    this.fieldName = config.fieldName;\n    this.modelName = config.modelName;\n\n    this.render = function() {\n        ReactDOM.render(\n            <Form\n                schema={this.schema}\n                dataInputId={this.dataInputId}\n                data={this.data}\n                fileUploadEndpoint={this.fileUploadEndpoint}\n                fieldName={this.fieldName}\n                modelName={this.modelName}\n            />,\n            document.getElementById(this.containerId)\n        );\n    }\n}"],"names":["getBlankObject","schema","keys","schema_keys","properties","key","value","type","getBlankArray","items","push","widget","getBlankData","getSyncedArray","data","newData","JSON","parse","stringify","i","length","item","getSyncedObject","Object","schemaValue","hasOwnProperty","Button","className","props","classes","split","React","trim","children","Loader","Icon","icon","name","ChevronUp","ChevronDown","xmlns","width","height","fill","viewBox","fillRule","d","TimePicker","sendValue","_this","onChange","validateValue","handleChange","e","target","dataset","isNaN","validValue","parseInt","startsWith","toString","padStart","handleKeyDown","keyCode","handleSpin","handleBlur","componentWillUnmount","hh","this","mm","ss","render","onClick","_this2","onBlur","onKeyDown","ampm","Component","EditorContext","createContext","capitalize","string","charAt","toUpperCase","substr","toLowerCase","FormInput","label","inputRef","ref","FormCheckInput","undefined","checked","readOnly","disabled","FormRadioInput","options","map","option","inputValue","FormSelectInput","FormMultiSelectInput","filter","showOptions","state","setState","hideOptions","toggleOptions","optionsContainer","createRef","input","help_text","error","FormMultiSelectInputOptions","containerRef","handleClickOutside","current","contains","componentDidMount","document","addEventListener","removeEventListener","selected","_this3","indexOf","optionClassName","FormFileInput","_this4","getFileName","extractFileInfo","dataURL","dataURI","splitted","params","replace","param","binary","atob","array","charCodeAt","blob","window","Blob","Uint8Array","dataURItoBlob","size","addNameToDataURL","encodeURIComponent","file","files","fileName","reader","FileReader","onload","event","result","readAsDataURL","endpoint","context","fileUploadEndpoint","console","alert","loading","formData","FormData","append","fieldName","modelName","slice","fetch","method","headers","cookie","body","then","response","json","file_path","showFileBrowser","click","clearFile","componentDidUpdate","prevProps","prevState","contextType","FormTextareaInput","_this5","updateHeight","el","offset","offsetHeight","clientHeight","style","scrollHeight","FormDateTimeInput","_this6","getStateFromProps","date","ms","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","showTimePicker","timePickerContainer","timeInput","NaN","toISOString","err","handleDateChange","handleTimeChange","changed","newState","onFocus","GroupTitle","animate","animation","callback","parentElement","prevEl","previousElementSibling","nextEl","nextElementSibling","classList","add","y","getBoundingClientRect","y1","y2","opacity","transform","setTimeout","remove","FormRowControls","onMoveUp","title","onMoveDown","onRemove","FormRow","FormGroup","hasChildren","Children","count","innerClassName","level","addable","onAdd","FormField","InputField","inputProps","readonly","choices","parentType","format","step","editable","onEdit","fieldType","Number","getStringFormRow","args","removable","fieldProps","getArrayFormRow","onMove","rows","groups","min_items","minItems","max_items","maxItems","nextArgs","getObjectFormRow","coords","index","additionalProperties","k","childName","getVerboseName","newKey","prompt","newCoords","pop","join","handleKeyEdit","handleKeyValueAdd","Form","populateDataInput","dataInput","shift","_data","setDataUsingCoords","coord","getFields","formGroups","addFieldset","removeFieldset","moveFieldset","color","blankData","addDataUsingCoords","removeDataUsingCoords","oldCoords","moveDataUsingCoords","getElementById","dataInputId","Provider","Array","isArray","splice","oldCoord","newCoord","JSONForm","config","containerId","ReactDOM"],"mappings":"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"}