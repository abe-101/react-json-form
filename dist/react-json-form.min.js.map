{"version":3,"file":"react-json-form.min.js","sources":["../src/data.js","../src/components/buttons.js","../src/components/loaders.js","../src/util.js","../src/components/form.js","../src/components/containers.js","../src/ui.js","../src/form.js","../src/index.js","../src/renderer.js"],"sourcesContent":["export function getBlankObject(schema) {\n    let keys = {};\n\n    let schema_keys = schema.keys || schema.properties;\n\n    for (let key in schema_keys) {\n        let value = schema_keys[key];\n        let type = value.type;\n\n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (type === 'array')\n            keys[key] = getBlankArray(value);\n        else if (type === 'object')\n            keys[key] = getBlankObject(value);\n        else if (type === 'boolean')\n            keys[key] = false;\n        else if (type === 'integer' || type === 'number')\n            keys[key] = null;\n        else // string etc.\n            keys[key] = '';\n    }\n\n    return keys;\n}\n\n\nexport function getBlankArray(schema) {\n    let items = [];\n    let type = schema.items.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array')\n        items.push(getBlankArray(schema.items))\n    else if (type === 'object')\n        items.push(getBlankObject(schema.items));\n    else if (type === 'boolean')\n        items.push(false);\n    else if (type === 'integer' || type === 'number')\n        items.push(null);\n    else // string, etc.\n        items.push('');\n\n    return items;\n}\n\n\nexport function getBlankData(schema) {\n    let type = schema.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array')\n        return getBlankArray(schema);\n    else if (type === 'object')\n        return getBlankObject(schema);\n    else if (type === 'boolean')\n        return false;\n    else if (type === 'integer' || type === 'number')\n        return null;\n    else // string, etc.\n        return '';\n}\n\n\n\nfunction getSyncedArray(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n\n        if (type === 'array') {\n            newData[i] = getSyncedArray(item, schema.items);\n        } else if (type === 'object') {\n            newData[i] = getSyncedObject(item, schema.items);\n        }\n        else {\n            if ((type === 'integer' || type === 'number') && item === '')\n                newData[i] = null;\n        }\n    }\n\n    return newData;\n}\n\n\nfunction getSyncedObject(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let schemaValue = schema_keys[key];\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n      \n        if (!data.hasOwnProperty(key)) {\n            if (type === 'array')\n                newData[key] = getSyncedArray([], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject({}, schemaValue);\n            else if (type === 'boolean')\n                newData[key] = false;\n            else if (type === 'integer' || type === 'number')\n                newData[key] = null;\n            else\n                newData[key] = '';\n        } else {\n            if (type === 'array')\n                newData[key] = getSyncedArray(data[key], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject(data[key], schemaValue);\n            else {\n                if ((type === 'integer' || type === 'number') && data[key] === '')\n                    newData[key] = null;\n                else\n                    newData[key] = data[key];\n            }\n        }\n        \n    }\n\n    return newData;\n}\n\n\nexport function getSyncedData(data, schema) {\n    // adds those keys to data which are in schema but not in data\n\n    let type = schema.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array') {\n        return getSyncedArray(data, schema);\n    } else if (type === 'object') {\n        return getSyncedObject(data, schema);\n    }\n\n    return data;\n}\n","export default function Button({className, ...props}) {\n    if (!className)\n        className = '';\n\n    let classes = className.split(' ');\n\n    className = '';\n    for (let i = 0; i < classes.length; i++) {\n        className = className + 'rjf-' + classes[i] + '-button ';\n    }\n\n    return (\n        <button \n            className={className.trim()}\n            type=\"button\"\n            {...props}\n        >\n            {props.children}\n        </button>\n    );\n}","export default function Loader (props) {\n    return <div className=\"rjf-loader\"></div>;\n}\n","export const EditorContext = React.createContext();\n\n\nexport function capitalize(string) {\n    if (!string)\n        return '';\n    \n    return string.charAt(0).toUpperCase() + string.substr(1).toLowerCase();\n}\n\n\nexport function getVerboseName(name) {\n    if (name === undefined || name === null)\n        return '';\n\n    name = name.replace(/_/g, ' ');\n    return capitalize(name);\n}\n\n\nexport function getCsrfCookie() {\n    if ((document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)).length) {\n        return document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)[0].split('=')[1];\n    }\n    return null;\n}\n","import Button from './buttons';\nimport Loader from './loaders';\nimport {EditorContext, getCsrfCookie, capitalize} from '../util';\n\n\nexport function FormInput({label, help_text, error, inputRef, ...props}) {\n\n    if (props.type === 'string')\n        props.type = 'text'\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    if (props.type === 'number' && props.value === null)\n        props.value = '';\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <input {...props} />\n        </div>\n    );\n}\n\n\nexport function FormCheckInput({label, help_text, error, value, ...props}) {\n\n    if (!label)\n        label = props.name.toUpperCase();\n\n    if (props.type === 'bool')\n        props.type = 'checkbox';\n\n    if (props.checked === undefined)\n        props.checked = value;\n\n    if (props.checked === '' || props.checked === null || props.checked === undefined)\n        props.checked = false\n\n    return (\n        <div>\n            <label><input {...props} /> {label}</label>\n        </div>\n    );\n}\n\n\nexport function FormRadioInput({label, help_text, error, value, options, ...props}) {\n    return (\n        <div>\n            <label>{label}</label>\n            {options.map((option, i) => {\n                let label, inputValue;\n                if (typeof option === 'object') {\n                    label = option.label;\n                    inputValue = option.value;\n                } else {\n                    label = option;\n                    if (typeof label === 'boolean')\n                        label = capitalize(label.toString());\n                    inputValue = option;\n                }\n\n                return (\n                    <label key={label + '_' + inputValue + '_' + i}>\n                        <input {...props} value={inputValue} checked={inputValue === value} /> {label}\n                    </label>\n                );\n            })}\n        </div>\n    );\n}\n\n\nexport function FormSelectInput({label, help_text, error, value, options, ...props}) {\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <select value={value || ''} {...props}>\n                <option disabled value=\"\" key={'__placehlder'}>Select...</option>\n                {options.map((option, i) => {\n                    let label, inputValue;\n                    if (typeof option === 'object') {\n                        label = option.label;\n                        inputValue = option.value;\n                    } else {\n                        label = option;\n                        if (typeof label === 'boolean')\n                            label = capitalize(label.toString());\n                        inputValue = option;\n                    }\n\n                    return (\n                        <option value={inputValue} key={label + '_' + inputValue + '_' + i}>\n                            {label}\n                        </option>\n                    );\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport function dataURItoBlob(dataURI) {\n      // Split metadata from data\n      const splitted = dataURI.split(\",\");\n      // Split params\n      const params = splitted[0].split(\";\");\n      // Get mime-type from params\n      const type = params[0].replace(\"data:\", \"\");\n      // Filter the name property from params\n      const properties = params.filter(param => {\n            return param.split(\"=\")[0] === \"name\";\n      });\n      // Look for the name and use unknown if no name property.\n      let name;\n      if (properties.length !== 1) {\n            name = \"unknown\";\n      } else {\n            // Because we filtered out the other property,\n            // we only have the name case here.\n            name = properties[0].split(\"=\")[1];\n      }\n\n      // Built the Uint8Array Blob parameter from the base64 string.\n      const binary = atob(splitted[1]);\n      const array = [];\n      for (let i = 0; i < binary.length; i++) {\n            array.push(binary.charCodeAt(i));\n      }\n      // Create the blob object\n      const blob = new window.Blob([new Uint8Array(array)], { type });\n\n      return {blob, name};\n}\n\n\n\nexport class FormFileInput extends React.Component {\n    static contextType = EditorContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value,\n            fileName: this.getFileName(),\n            loading: false\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevProps.value) {\n            this.setState({\n                value: this.props.value, \n                fileName: this.getFileName()\n            });\n        }\n    }\n\n    getFileName = () => {\n        if (!this.props.value)\n            return '';\n\n        if (this.props.type === 'data-url') {\n            return this.extractFileInfo(this.props.value).name;\n        } else if (this.props.type === 'file-url') {\n            return this.props.value;\n        } else {\n            return 'Unknown file';\n        }\n    }\n\n    extractFileInfo = (dataURL) => {\n        const {blob, name} = dataURItoBlob(dataURL);\n        return {\n            name: name,\n            size: blob.size,\n            type: blob.type\n        }\n    }\n\n    addNameToDataURL = (dataURL, name) => {\n        return dataURL.replace(';base64', ';name=' + encodeURIComponent(name) + ';base64');\n    }\n\n    handleChange = (e) => {\n        if (this.props.type === 'data-url') {\n            let file = e.target.files[0];\n            let fileName = file.name\n\n            let reader = new FileReader();\n\n            reader.onload = () => {\n\n                // this.setState({src: reader.result});\n\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: this.addNameToDataURL(reader.result, fileName),\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n\n            }\n            reader.readAsDataURL(file);\n        } else if (this.props.type === 'file-url') {\n            let endpoint = this.context.fileUploadEndpoint;\n            if (!endpoint) {\n                console.error(\n                    \"Error: fileUploadEndpoint option need to be passed \"\n                    + \"while initializing editor for enabling file uploads.\");\n                alert(\"Files can't be uploaded.\");\n                return;\n            }\n\n            this.setState({loading: true});\n\n            let formData = new FormData();\n            formData.append('field_name', this.context.fieldName);\n            formData.append('model_name', this.context.modelName);\n            formData.append('coordinates', JSON.stringify(this.props.name.split('-').slice(1)));\n            formData.append('file', e.target.files[0]);\n\n            fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'X-CSRFToken': getCsrfCookie(),\n                },\n                body: formData\n            })\n            .then((response) => response.json())\n            .then((result) => {\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: result.file_path,\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n                this.setState({loading: false});\n            })\n            .catch((error) => {\n                alert('Something went wrong while uploading file');\n                console.error('Error:', error);\n                this.setState({loading: false});\n            });\n\n        }\n\n    }\n\n    showFileBrowser = () => {\n        this.inputRef.current.click();\n    }\n\n    render() {\n        let {label, value, ...props} = {value, ...this.props};\n        props.type = 'file';\n        props.onChange = this.handleChange;\n\n        return (\n            <div>\n                {label && <label>{label}</label>}\n                <div className=\"rjf-file-field\">\n                    {this.state.value && \n                        <div className=\"rjf-current-file-name\">Current file: <span>{this.state.fileName}</span></div>\n                    }\n                    {this.state.value && !this.state.loading && 'Change:'}\n                    {this.state.loading ?\n                        <div className=\"rjf-file-field-loading\"><Loader/> Uploading...</div>\n                    : \n                    <div className=\"rjf-file-field-input\">\n                        <FormInput {...props} inputRef={this.inputRef} />\n                    </div>\n                    }\n                    </div>\n            </div>\n        );\n    }\n}\n\n\nexport function FormTextareaInput({label, help_text, error, inputRef, ...props}) {\n\n    delete props.type;\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <textarea {...props} />\n        </div>\n    );\n}\n","import Button from './buttons';\n\n\nexport function GroupTitle(props) {\n    if (!props.children)\n        return null;\n\n    return (\n        <div className=\"rjf-form-group-title\">{props.children}</div>\n    );\n}\n\n\nexport function FormRowControls(props) {\n    return (\n        <div className=\"rjf-form-row-controls\">\n            {props.onMoveUp &&\n                <Button \n                    className=\"move-up\"\n                    onClick={props.onMoveUp}\n                    title=\"Move up\"\n                >\n                    <span>&uarr;</span>\n                </Button>\n            }\n            {props.onMoveDown &&\n                <Button \n                    className=\"move-down\"\n                    onClick={props.onMoveDown}\n                    title=\"Move down\"\n                >\n                    <span>&darr;</span>\n                </Button>\n            }\n            {props.onRemove &&\n                <Button \n                    className=\"remove\"\n                    onClick={props.onRemove}\n                    title=\"Remove\"\n                >\n                    <span>&times;</span>\n                </Button>\n            }\n        </div>\n    );\n}\n\nexport function FormRow(props) {\n    return (\n        <div className=\"rjf-form-row\">\n            <FormRowControls {...props} />\n            <div className=\"rjf-form-row-inner\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\n\nexport function FormGroup(props) {\n    let hasChildren = React.Children.count(props.children);\n\n    let innerClassName = props.level === 0 && !hasChildren\n        ? \"\" \n        : \"rjf-form-group-inner\";\n\n    return (\n        <div className=\"rjf-form-group\">\n            {props.level === 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n            <div className={innerClassName}>\n                {props.level > 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n                {props.children}\n                {props.addable && \n                <Button\n                    className=\"add\"\n                    onClick={(e) => props.onAdd()}\n                    title=\"Add new\"\n                >\n                    {hasChildren ? 'Add more' : 'Add'}\n                </Button>\n                }\n            </div>\n        </div>\n    );\n}\n","import {getBlankData} from './data';\nimport {Button, FormInput, FormCheckInput, FormRadioInput, FormSelectInput,\n    FormFileInput, FormRow, FormGroup, FormRowControls, FormTextareaInput} from './components';\nimport {getVerboseName} from './util';\n\n\nfunction handleChange(e, fieldType, callback) {\n    let type = e.target.type\n    let value;\n\n    if (type === 'checkbox') {\n        value = e.target.checked;\n    } else {\n        value = e.target.value;\n    }\n\n    if (fieldType === 'number' || fieldType === 'integer') {\n        value = value.trim();\n        if (value === '')\n            value = null;\n        else if (!isNaN(Number(value)))\n            value = Number(value);\n    } else if (fieldType === 'boolean') {\n        if (value === 'false' || value === false)\n            value = false;\n        else\n            value = true;\n    }\n\n    callback(e.target.name, value);\n}\n\n\nfunction FormField(props) {\n    let inputProps = {\n        name: props.name,\n        value: props.data,\n    };\n\n    let type = props.schema.type;\n    if (props.schema.choices) {\n        inputProps.options = props.schema.choices;\n        type = 'select';\n    }\n    if (props.schema.widget)\n        type = props.schema.widget;\n\n    let InputField;\n\n    switch (type) {\n        case 'string':\n            InputField = FormInput;\n\n            if (props.schema.format) {\n                if (props.schema.format === 'data-url' || props.schema.format === 'file-url') {\n                    InputField = FormFileInput;\n                }\n                inputProps.type = props.schema.format;\n            }\n            else {\n                inputProps.type = 'text';\n            }\n            break;\n        case 'number':\n            inputProps.type = 'number';\n            InputField = FormInput;\n            break;\n        case 'integer':\n            inputProps.type = 'number';\n            inputProps.step = '1';\n            InputField = FormInput;\n            break;\n        case 'boolean':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'checkbox':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'radio':\n            inputProps.type = 'radio';\n            InputField = FormRadioInput;\n            break;\n        case 'select':\n            InputField = FormSelectInput;\n            break;\n        case 'textarea':\n            InputField = FormTextareaInput;\n            break;\n        default:\n            inputProps.type = 'text';\n            InputField = FormInput;\n    }\n\n   return (\n        <InputField \n            {...inputProps}\n            label={\n                props.editable ? <span>{props.schema.title} <Button className=\"edit\" onClick={props.onEdit} title=\"Edit\">Edit</Button></span>\n                :\n                props.schema.title\n            }\n            onChange={(e) => handleChange(e, props.schema.type, props.onChange)}\n        />\n    );\n}\n\n\nexport function getStringFormRow(args) {\n    let {\n        data, schema, name, onChange, onRemove, removable, onEdit, editable, \n        onMoveUp, onMoveDown\n    } = args;\n\n    return (\n        <FormRow \n            key={name}\n            onRemove={removable ? (e) => onRemove(name) : null}\n            onMoveUp={onMoveUp}\n            onMoveDown={onMoveDown}\n        >\n            <FormField \n                data={data}\n                schema={schema}\n                name={name}\n                onChange={onChange}\n                onEdit={onEdit}\n                editable={editable}\n            />\n        </FormRow>\n    );\n}\n\nexport function getArrayFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, onMove, level} = args;\n\n    let rows = [];\n    let groups = [];\n\n    let removable = true;\n    let min_items = schema.min_items || schema.minItems || 0;\n    if (data.length <= min_items)\n        removable = false;\n\n    let addable = true;\n    let max_items = schema.max_items || schema.maxItems || 100;\n    if (data.length >= max_items)\n        addable = false;\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    let nextArgs = {\n        schema: schema.items,\n        onChange: onChange,\n        onAdd: onAdd,\n        onRemove: onRemove,\n        level: level + 1,\n        removable: removable,\n        onMove: onMove,\n    };\n\n    for (let i = 0; i < data.length; i++) {\n        nextArgs.data = data[i];\n        nextArgs.name = name + '-' + i;\n\n        if (i === 0)\n            nextArgs.onMoveUp = null;\n        else\n            nextArgs.onMoveUp = (e) => onMove(name + '-' + i, name + '-' + (i - 1));\n\n        if (i === data.length - 1)\n            nextArgs.onMoveDown = null;\n        else\n            nextArgs.onMoveDown = (e) => onMove(name + '-' + i, name + '-' + (i + 1));;\n\n        if (type === 'array') {\n            groups.push(getArrayFormRow(nextArgs));\n        } else if (type === 'object') {\n            groups.push(getObjectFormRow(nextArgs));\n        } else {\n            rows.push(getStringFormRow(nextArgs));\n        } \n    }\n\n    let coords = name; // coordinates for insertion and deletion\n\n    if (rows.length || (!rows.length && !groups.length)) {\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={addable}\n                onAdd={() => onAdd(getBlankData(schema.items), coords)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    if (groups.length) {\n        let groupTitle = schema.title ? <div className=\"rjf-form-group-title\">{schema.title}</div> : null;\n\n        groups = (\n            <div key={'group_' + name}>\n                {groupTitle}\n                {groups.map((i, index) => (\n                    <div className=\"rjf-form-group-wrapper\" key={'group_wrapper_' + name + '_' + index}>\n                        <FormRowControls\n                            onRemove={removable ? (e) => onRemove(name + '-' + index) : null}\n                            onMoveUp={index > 0 ? (e) => onMove(name + '-' + index, name + '-' + (index - 1)) : null}\n                            onMoveDown={index < groups.length - 1 ? (e) => onMove(name + '-' + index, name + '-' + (index + 1)) : null}\n                        />\n                        {i}\n                    </div>\n                    )\n                )}\n                {addable && \n                    <Button\n                        className=\"add\"\n                        onClick={(e) => onAdd(getBlankData(schema.items), coords)}\n                        title=\"Add new\"\n                    >\n                        Add item\n                    </Button>\n                }\n            </div>\n        )\n    }\n\n    return [...rows, ...groups];\n}\n\n\nexport function getObjectFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, level, onMove} = args;\n\n    let rows = [];\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    if (schema.additionalProperties)\n        keys = [...keys, ...Object.keys(data).filter((k) => keys.indexOf(k) === -1)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let value = data[key];\n        let childName = name + '-' + key;\n        let schemaValue = schema_keys[key] || {type: 'string'};\n\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (!schemaValue.title)\n            schemaValue.title = getVerboseName(key);\n\n        let removable = false;\n        if (schema_keys[key] === undefined)\n            removable = true;\n\n        let nextArgs = {\n            data: value,\n            schema: schemaValue,\n            name: childName,\n            onChange: onChange,\n            onAdd: onAdd,\n            onRemove: onRemove,\n            level: level + 1,\n            removable: removable,\n            onMove: onMove\n        };\n\n         if (type === 'array') {\n            rows.push(getArrayFormRow(nextArgs));\n        } else if (type === 'object') {\n            rows.push(getObjectFormRow(nextArgs));\n        } else {\n            nextArgs.onEdit = () => handleKeyEdit(data, key, value, childName, onAdd, onRemove);\n            nextArgs.editable = removable;\n            rows.push(getStringFormRow(nextArgs));\n        }\n    }\n\n    if (rows.length || schema.additionalProperties) {\n        let className = \"rjf-form-group-inner\";\n        if (level === 0 && !rows.length)\n            className = \"\";\n        \n        let coords = name;\n\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={schema.additionalProperties}\n                onAdd={() => handleKeyValueAdd(data, coords, onAdd)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    return rows;\n}\n\n\nfunction handleKeyValueAdd(data, coords, onAdd) {\n    let key = prompt(\"Add new key\");\n    if (key === null) // clicked cancel\n        return;\n\n    key = key.trim();\n    if (!key)\n        alert(\"(!) Can't add empty key.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(key))\n        alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n    else\n        onAdd(\"\", coords + '-' + key);   \n}\n\n\nfunction handleKeyEdit(data, key, value, coords, onAdd, onRemove) {\n    let newKey = prompt(\"Rename key\", key);\n    if (newKey === null) // clicked cancel\n        return;\n\n    newKey = newKey.trim();\n\n    if (newKey === key) // same keys\n        return;\n\n    if (!newKey)\n        return alert(\"(!) Key name can't be empty.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(newKey))\n        return alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n\n    onAdd(value, name + '-' + newKey);\n    onRemove(coords);\n}\n","import {getBlankData, getSyncedData} from './data';\nimport {getArrayFormRow, getObjectFormRow} from './ui';\nimport {EditorContext} from './util';\n\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dataInput = document.getElementById(this.props.dataInputId);\n        this.schema = props.schema;\n\n        let data = props.data;\n\n        if (!data) {\n            // create empty data from schema\n            data = getBlankData(this.schema);\n        } else {\n            // data might be stale if schema has new keys, so add them to data\n            try {\n                data = getSyncedData(data, this.schema);\n            } catch (error) {\n                console.error(\"Error: Schema and data structure don't match\");\n                console.error(error);\n            }\n        }\n\n        this.state = {\n            value: '',\n            data: data\n        };\n        \n        // update data in the input\n        this.populateDataInput();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.data !== prevState.data) {\n            this.populateDataInput();\n        }\n    }\n\n    populateDataInput = () => {\n        this.dataInput.value = JSON.stringify(this.state.data);\n    }\n\n    handleChange = (coords, value) => {\n        /*\n            e.target.name is a chain of indices and keys:\n            xxx-0-key-1-key2 and so on.\n            These can be used as coordinates to locate \n            a particular deeply nested item.\n\n            This first coordinate is not important and should be removed.\n        */\n        coords = coords.split('-');\n\n        coords.shift(); // remove first coord\n\n        function setDataUsingCoords(coords, data, value) {\n            let coord = coords.shift();\n            if (!isNaN(Number(coord)))\n                coord = Number(coord);\n\n            if (coords.length) {\n                setDataUsingCoords(coords, data[coord], value);\n            } else {\n                data[coord] = value;\n            }\n        }\n\n        let _data = JSON.parse(JSON.stringify(this.state.data));\n\n        setDataUsingCoords(coords, _data, value);\n\n        this.setState({data: _data});\n    }\n\n    getFields = () => {\n        let data = this.state.data;\n        let formGroups = [];\n\n        try {\n            let type = this.schema.type;\n    \n            if (type === 'list')\n                type = 'array';\n            else if (type === 'dict')\n                type = 'object';\n\n            let args = {\n                data: data,\n                schema: this.schema,\n                name: 'rjf',\n                onChange: this.handleChange,\n                onAdd: this.addFieldset,\n                onRemove: this.removeFieldset,\n                onMove: this.moveFieldset,\n                level: 0\n            };\n\n            if (type === 'array') {\n                return getArrayFormRow(args);\n            } else if (type === 'object') {\n                return getObjectFormRow(args);\n            }\n        } catch (error) {\n            formGroups = (\n                <p style={{color: '#f00'}}>\n                    <strong>(!) Error:</strong> Schema and data structure do not match.\n                </p>\n            );\n        }\n\n        return formGroups;\n    }\n\n    addFieldset = (blankData, coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            addDataUsingCoords(coords, _data, blankData);\n\n            return {data: _data};\n        });\n    }\n\n    removeFieldset = (coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            removeDataUsingCoords(coords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    moveFieldset = (oldCoords, newCoords) => {\n        oldCoords = oldCoords.split(\"-\");\n        oldCoords.shift();\n\n        newCoords = newCoords.split(\"-\");\n        newCoords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            moveDataUsingCoords(oldCoords, newCoords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-form-wrapper\">\n                <fieldset className=\"module aligned\">\n                    <EditorContext.Provider \n                        value={{\n                            fileUploadEndpoint: this.props.fileUploadEndpoint,\n                            fieldName: this.props.fieldName,\n                            modelName: this.props.modelName,\n                        }}\n                    >\n                    {this.getFields()}\n                    </EditorContext.Provider>\n                </fieldset>\n            </div>\n        );\n    }\n}\n\n\nfunction addDataUsingCoords(coords, data, value) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        addDataUsingCoords(coords, data[coord], value);\n    } else {\n        if (Array.isArray(data[coord])) {\n            data[coord].push(value);\n        }\n        else {\n            if (Array.isArray(data)) {\n                data.push(value);\n            } else {\n                data[coord] = value;\n            }\n        }\n    }\n}\n\nfunction removeDataUsingCoords(coords, data) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        removeDataUsingCoords(coords, data[coord]);\n    } else {\n        if (Array.isArray(data))\n            data.splice(coord, 1); // in-place mutation\n        else\n            delete data[coord];\n    }\n}\n\n\nfunction moveDataUsingCoords(oldCoords, newCoords, data) {\n    let oldCoord = oldCoords.shift();\n\n    if (!isNaN(Number(oldCoord)))\n        oldCoord = Number(oldCoord);\n\n    if (oldCoords.length) {\n        moveDataUsingCoords(oldCoords, newCoords, data[oldCoord]);\n    } else {\n        if (Array.isArray(data)) {\n            /* Using newCoords allows us to move items from \n            one array to another. \n            However, for now, we're only moving items in a \n            single array.\n            */\n            let newCoord = newCoords[newCoords.length - 1];\n            \n            let item = data[oldCoord];\n\n            data.splice(oldCoord, 1);\n            data.splice(newCoord, 0, item);\n        }\n    }\n}\n","import JSONForm from './renderer';\n\n\nexport default {\n  JSONForm,\n};","import Form from './form';\n\n\nexport default function JSONForm(config) {\n    this.containerId = config.containerId;\n    this.dataInputId = config.dataInputId;\n    this.schema = config.schema;\n    this.data = config.data;\n    this.fileUploadEndpoint = config.fileUploadEndpoint;\n    this.fieldName = config.fieldName;\n    this.modelName = config.modelName;\n\n    this.render = function() {\n        ReactDOM.render(\n            <Form\n                schema={this.schema}\n                dataInputId={this.dataInputId}\n                data={this.data}\n                fileUploadEndpoint={this.fileUploadEndpoint}\n                fieldName={this.fieldName}\n                modelName={this.modelName}\n            />,\n            document.getElementById(this.containerId)\n        );\n    }\n}"],"names":["getBlankObject","schema","keys","schema_keys","properties","key","value","type","getBlankArray","items","push","getBlankData","getSyncedArray","data","newData","JSON","parse","stringify","i","length","item","getSyncedObject","Object","schemaValue","hasOwnProperty","Button","className","props","classes","split","React","trim","children","Loader","EditorContext","createContext","capitalize","string","charAt","toUpperCase","substr","toLowerCase","FormInput","label","inputRef","ref","FormCheckInput","name","undefined","checked","FormRadioInput","options","map","option","inputValue","toString","FormSelectInput","disabled","FormFileInput","_this","getFileName","extractFileInfo","dataURL","dataURI","splitted","params","replace","filter","param","binary","atob","array","charCodeAt","blob","window","Blob","Uint8Array","dataURItoBlob","size","addNameToDataURL","encodeURIComponent","handleChange","e","file","target","files","fileName","reader","FileReader","onload","event","result","onChange","readAsDataURL","endpoint","context","fileUploadEndpoint","console","error","alert","setState","loading","formData","FormData","append","fieldName","modelName","slice","fetch","method","headers","document","cookie","indexOf","body","then","response","json","file_path","showFileBrowser","current","click","state","createRef","componentDidUpdate","prevProps","prevState","this","render","Component","FormTextareaInput","GroupTitle","FormRowControls","onMoveUp","onClick","title","onMoveDown","onRemove","FormRow","FormGroup","hasChildren","Children","count","innerClassName","level","addable","onAdd","FormField","InputField","inputProps","choices","widget","format","step","editable","onEdit","fieldType","callback","isNaN","Number","getStringFormRow","args","removable","getArrayFormRow","onMove","rows","groups","min_items","minItems","max_items","maxItems","nextArgs","getObjectFormRow","coords","index","additionalProperties","k","childName","getVerboseName","handleKeyEdit","prompt","handleKeyValueAdd","newKey","contextType","Form","populateDataInput","dataInput","shift","_data","setDataUsingCoords","coord","getFields","formGroups","addFieldset","removeFieldset","moveFieldset","style","color","blankData","addDataUsingCoords","removeDataUsingCoords","oldCoords","newCoords","moveDataUsingCoords","getElementById","dataInputId","Provider","Array","isArray","splice","oldCoord","newCoord","JSONForm","config","containerId","ReactDOM"],"mappings":"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"}