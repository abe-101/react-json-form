{"version":3,"file":"react-json-form.min.js","sources":["../src/data.js","../src/components/buttons.js","../src/components/loaders.js","../src/util.js","../src/components/form.js","../src/components/containers.js","../src/ui.js","../src/form.js","../src/index.js","../src/renderer.js"],"sourcesContent":["export function getBlankObject(schema) {\n    let keys = {};\n\n    let schema_keys = schema.keys || schema.properties;\n\n    for (let key in schema_keys) {\n        let value = schema_keys[key];\n        let type = value.type;\n\n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (type === 'array')\n            keys[key] = getBlankArray(value);\n        else if (type === 'object')\n            keys[key] = getBlankObject(value);\n        else if (type === 'string')\n            keys[key] = '';\n        else if (schema.type === 'number')\n            return '';\n    }\n\n    return keys;\n}\n\n\nexport function getBlankArray(schema) {\n    let items = [];\n    let type = schema.items.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array')\n        items.push(getBlankArray(schema.items))\n    else if (type === 'object')\n        items.push(getBlankObject(schema.items));\n    else if (type === 'string')\n        items.push('');\n    else if (schema.type === 'number')\n        items.push('');\n\n    return items;\n}\n\n\nexport function getBlankData(schema) {\n    let type = schema.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array') {\n        return getBlankArray(schema);\n    }\n    else if (type === 'object') {\n        return getBlankObject(schema);\n    } else if (type === 'string') {\n        return '';\n    } else if (type === 'number') {\n        return '';\n    }\n}\n\n\n\nfunction getSyncedArray(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n\n        if (type === 'array') {\n            newData[i] = getSyncedArray(item, schema.items);\n        } else if (type === 'object') {\n            newData[i] = getSyncedObject(item, schema.items);\n        }\n    }\n\n    return newData;\n}\n\n\nfunction getSyncedObject(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let schemaValue = schema_keys[key];\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n      \n        if (!data.hasOwnProperty(key)) {\n            if (type === 'string')\n                newData[key] = '';\n            else if (type === 'array')\n                newData[key] = getSyncedArray([], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject({}, schemaValue);\n        } else {\n        if (type === 'string')\n                newData[key] = data[key];\n            else if (type === 'array')\n                newData[key] = getSyncedArray(data[key], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject(data[key], schemaValue);\n        }\n        \n    }\n\n    return newData;\n}\n\n\nexport function getSyncedData(data, schema) {\n    // adds those keys to data which are in schema but not in data\n\n    let type = schema.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array') {\n        return getSyncedArray(data, schema);\n    } else if (type === 'object') {\n        return getSyncedObject(data, schema);\n    }\n\n    return data;\n}\n","export default function Button({className, ...props}) {\n    if (!className)\n        className = '';\n\n    className = 'rjf-' + className + '-button';\n    return (\n        <button \n            className={className}\n            type=\"button\"\n            {...props}\n        >\n            {props.children}\n        </button>\n    );\n}","export default function Loader (props) {\n    return <div className=\"rjf-loader\"></div>;\n}\n","export const EditorContext = React.createContext();\n\n\nexport function capitalize(string) {\n    if (!string)\n        return '';\n    \n    return string.charAt(0).toUpperCase() + string.substr(1).toLowerCase();\n}\n\n\nexport function getVerboseName(name) {\n    if (name === undefined || name === null)\n        return '';\n\n    name = name.replace(/_/g, ' ');\n    return capitalize(name);\n}\n\n\nexport function getCsrfCookie() {\n    if ((document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)).length) {\n        return document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)[0].split('=')[1];\n    }\n    return null;\n}\n","import Button from './buttons';\nimport Loader from './loaders';\nimport {EditorContext, getCsrfCookie, capitalize} from '../util';\n\n\nexport function FormInput({label, help_text, error, inputRef, ...props}) {\n\n    if (props.type === 'string')\n        props.type = 'text'\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <input {...props} />\n        </div>\n    );\n}\n\n\nexport function FormCheckInput({label, help_text, error, value, ...props}) {\n\n    if (!label)\n        label = props.name.toUpperCase();\n\n    if (props.type === 'bool')\n        props.type = 'checkbox';\n\n    if (props.checked === undefined)\n        props.checked = value;\n\n    if (props.checked === '')\n        props.checked = false\n\n    return (\n        <div>\n            <label><input {...props} /> {label}</label>\n        </div>\n    );\n}\n\n\nexport function FormRadioInput({label, help_text, error, value, options, ...props}) {\n    return (\n        <div>\n            <label>{label}</label>\n            {options.map((option, i) => {\n                let label, inputValue;\n                if (typeof option === 'object') {\n                    label = option.label;\n                    inputValue = option.value;\n                } else {\n                    label = option;\n                    if (typeof label === 'boolean')\n                        label = capitalize(label.toString());\n                    inputValue = option;\n                }\n\n                return (\n                    <label key={label + '_' + inputValue + '_' + i}>\n                        <input {...props} value={inputValue} checked={inputValue === value} /> {label}\n                    </label>\n                );\n            })}\n        </div>\n    );\n}\n\n\nexport function FormSelectInput({label, help_text, error, value, options, ...props}) {\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <select defaultValue=\"\" {...props}>\n                <option disabled value=\"\" key={'__placehlder'}>Select...</option>\n                {options.map((option, i) => {\n                    let label, inputValue;\n                    if (typeof option === 'object') {\n                        label = option.label;\n                        inputValue = option.value;\n                    } else {\n                        label = option;\n                        if (typeof label === 'boolean')\n                            label = capitalize(label.toString());\n                        inputValue = option;\n                    }\n\n                    return (\n                        <option value={inputValue} key={label + '_' + inputValue + '_' + i}>\n                            {label}\n                        </option>\n                    );\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport function dataURItoBlob(dataURI) {\n      // Split metadata from data\n      const splitted = dataURI.split(\",\");\n      // Split params\n      const params = splitted[0].split(\";\");\n      // Get mime-type from params\n      const type = params[0].replace(\"data:\", \"\");\n      // Filter the name property from params\n      const properties = params.filter(param => {\n            return param.split(\"=\")[0] === \"name\";\n      });\n      // Look for the name and use unknown if no name property.\n      let name;\n      if (properties.length !== 1) {\n            name = \"unknown\";\n      } else {\n            // Because we filtered out the other property,\n            // we only have the name case here.\n            name = properties[0].split(\"=\")[1];\n      }\n\n      // Built the Uint8Array Blob parameter from the base64 string.\n      const binary = atob(splitted[1]);\n      const array = [];\n      for (let i = 0; i < binary.length; i++) {\n            array.push(binary.charCodeAt(i));\n      }\n      // Create the blob object\n      const blob = new window.Blob([new Uint8Array(array)], { type });\n\n      return {blob, name};\n}\n\n\n\nexport class FormFileInput extends React.Component {\n    static contextType = EditorContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value,\n            fileName: this.getFileName(),\n            loading: false\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevProps.value) {\n            this.setState({\n                value: this.props.value, \n                fileName: this.getFileName()\n            });\n        }\n    }\n\n    getFileName = () => {\n        if (!this.props.value)\n            return '';\n\n        if (this.props.type === 'data-url') {\n            return this.extractFileInfo(this.props.value).name;\n        } else if (this.props.type === 'file-url') {\n            return this.props.value;\n        } else {\n            return 'Unknown file';\n        }\n    }\n\n    extractFileInfo = (dataURL) => {\n        const {blob, name} = dataURItoBlob(dataURL);\n        return {\n            name: name,\n            size: blob.size,\n            type: blob.type\n        }\n    }\n\n    addNameToDataURL = (dataURL, name) => {\n        return dataURL.replace(';base64', ';name=' + encodeURIComponent(name) + ';base64');\n    }\n\n    handleChange = (e) => {\n        if (this.props.type === 'data-url') {\n            let file = e.target.files[0];\n            let fileName = file.name\n\n            let reader = new FileReader();\n\n            reader.onload = () => {\n\n                // this.setState({src: reader.result});\n\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: this.addNameToDataURL(reader.result, fileName),\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n\n            }\n            reader.readAsDataURL(file);\n        } else if (this.props.type === 'file-url') {\n            let endpoint = this.context.fileUploadEndpoint;\n            if (!endpoint) {\n                console.error(\n                    \"Error: fileUploadEndpoint option need to be passed \"\n                    + \"while initializing editor for enabling file uploads.\");\n                alert(\"Files can't be uploaded.\");\n                return;\n            }\n\n            this.setState({loading: true});\n\n            let formData = new FormData();\n            formData.append('field_name', this.context.fieldName);\n            formData.append('model_name', this.context.modelName);\n            formData.append('coordinates', JSON.stringify(this.props.name.split('-').slice(1)));\n            formData.append('file', e.target.files[0]);\n\n            fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'X-CSRFToken': getCsrfCookie(),\n                },\n                body: formData\n            })\n            .then((response) => response.json())\n            .then((result) => {\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: result.file_path,\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n                this.setState({loading: false});\n            })\n            .catch((error) => {\n                alert('Something went wrong while uploading file');\n                console.error('Error:', error);\n                this.setState({loading: false});\n            });\n\n        }\n\n    }\n\n    showFileBrowser = () => {\n        this.inputRef.current.click();\n    }\n\n    render() {\n        let {label, value, ...props} = {value, ...this.props};\n        props.type = 'file';\n        props.onChange = this.handleChange;\n\n        return (\n            <div>\n                {label && <label>{label}</label>}\n                <div className=\"rjf-file-field\">\n                    {this.state.value && \n                        <div className=\"rjf-current-file-name\">Current file: <span>{this.state.fileName}</span></div>\n                    }\n                    {this.state.value && !this.state.loading && 'Change:'}\n                    {this.state.loading ?\n                        <div className=\"rjf-file-field-loading\"><Loader/> Uploading...</div>\n                    : \n                    <div className=\"rjf-file-field-input\">\n                        <FormInput {...props} inputRef={this.inputRef} />\n                    </div>\n                    }\n                    </div>\n            </div>\n        );\n    }\n}\n","import Button from './buttons';\n\n\nexport function GroupTitle(props) {\n    if (!props.children)\n        return null;\n\n    return (\n        <div className=\"rjf-form-group-title\">{props.children}</div>\n    );\n}\n\n\nexport function FormRow(props) {\n    return (\n        <div className=\"rjf-form-row\">\n            {props.onRemove &&\n                <Button \n                    className=\"remove\"\n                    onClick={(e) => props.onRemove(name)}\n                    title=\"Remove\"\n                >\n                    <span>&times;</span>\n                </Button>\n            }\n            <div className=\"rjf-form-row-inner\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\n\nexport function FormGroup(props) {\n    let hasChildren = React.Children.count(props.children);\n\n    let innerClassName = props.level === 0 && !hasChildren\n        ? \"\" \n        : \"rjf-form-group-inner\";\n\n    return (\n        <div className=\"rjf-form-group\">\n            {props.level === 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n            <div className={innerClassName}>\n                {props.level > 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n                {props.children}\n                {props.addable && \n                <Button\n                    className=\"add\"\n                    onClick={(e) => props.onAdd()}\n                    title=\"Add new\"\n                >\n                    {hasChildren ? 'Add more' : 'Add'}\n                </Button>\n                }\n            </div>\n        </div>\n    );\n}\n","import {getBlankData} from './data';\nimport {Button, FormInput, FormCheckInput, FormRadioInput, FormSelectInput,\n    FormFileInput, FormRow, FormGroup} from './components';\nimport {getVerboseName} from './util';\n\n\nfunction handleChange(e, valueType, callback) {\n    let type = e.target.type\n    let value;\n\n    if (type === 'checkbox') {\n        value = e.target.checked;\n    } else {\n        value = e.target.value;\n    }\n\n    if (valueType === 'number') {\n        value = value.trim();\n        if (value !== '' && !isNaN(Number(value)))\n            value = Number(value);\n    } else if (valueType === 'boolean') {\n        if (value === 'false')\n            value = false;\n        else\n            value = true;\n    }\n\n    callback(e.target.name, value);\n}\n\n\nfunction FormField(props) {\n    let inputProps = {\n        name: props.name,\n        value: props.data,\n    };\n\n    let type = props.schema.type;\n    if (props.schema.choices) {\n        inputProps.options = props.schema.choices;\n        type = 'select';\n    }\n    if (props.schema.widget)\n        type = props.schema.widget;\n\n    let InputField;\n\n    switch (type) {\n        case 'string':\n            InputField = FormInput;\n\n            if (props.schema.format) {\n                if (props.schema.format === 'data-url' || props.schema.format === 'file-url') {\n                    InputField = FormFileInput;\n                }\n                inputProps.type = props.schema.format;\n            }\n            else {\n                inputProps.type = 'text';\n            }\n            break;\n        case 'number':\n            inputProps.type = 'number';\n            InputField = FormInput;\n            break;\n        case 'integer':\n            inputProps.type = 'number';\n            InputField = FormInput;\n            break;\n        case 'boolean':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'checkbox':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'radio':\n            inputProps.type = 'radio';\n            InputField = FormRadioInput;\n            break;\n        case 'select':\n            InputField = FormSelectInput;\n            break;\n        default:\n            inputProps.type = 'text';\n            InputField = FormInput;\n    }\n\n   return (\n        <InputField \n            {...inputProps}\n            label={\n                props.editable ? <span>{props.schema.title} <Button className=\"edit\" onClick={props.onEdit} title=\"Edit\">Edit</Button></span>\n                :\n                props.schema.title\n            }\n            onChange={(e) => handleChange(e, props.schema.type, props.onChange)}\n        />\n    );\n}\n\n\nexport function getStringFormRow(data, schema, name, onChange, onRemove, removable, onEdit, editable) {\n\n    return (\n        <FormRow \n            key={name}\n            onRemove={removable ? (e) => onRemove(name) : null}\n        >\n            <FormField \n                data={data}\n                schema={schema}\n                name={name}\n                onChange={onChange}\n                onEdit={onEdit}\n                editable={editable}\n            />\n        </FormRow>\n    );\n}\n\nexport function getArrayFormRow(data, schema, name, onChange, onAdd, onRemove, level) {\n    let rows = [];\n    let groups = [];\n\n    let removable = true;\n    let min_items = schema.min_items || schema.minItems || 0;\n    if (data.length <= min_items)\n        removable = false;\n\n    let addable = true;\n    let max_items = schema.max_items || schema.maxItems || 100;\n    if (data.length >= max_items)\n        addable = false;\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n        let childName = name + '-' + i;\n\n        if (type === 'array') {\n            groups.push(getArrayFormRow(item, schema.items, childName, onChange, onAdd, onRemove, level + 1));\n        } else if (type === 'object') {\n            groups.push(getObjectFormRow(item, schema.items, childName, onChange, onAdd, onRemove, level + 1));\n        } else {\n            rows.push(getStringFormRow(item, schema.items, childName, onChange, onRemove, removable));\n        } \n    }\n\n    let coords = name; // coordinates for insertion and deletion\n\n    if (rows.length || (!rows.length && !groups.length)) {\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={addable}\n                onAdd={() => onAdd(getBlankData(schema.items), coords)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    if (groups.length) {\n        let groupTitle = schema.title ? <div className=\"rjf-form-group-title\">{schema.title}</div> : null;\n\n        groups = (\n            <div key={'group_' + name}>\n                {groupTitle}\n                {groups.map((i, index) => (\n                    <div className=\"rjf-form-group-wrapper\" key={'group_wrapper_' + name + '_' + index}>\n                        {removable && \n                            <Button\n                                className=\"remove\"\n                                onClick={(e) => onRemove(name + '-' + index)}\n                                title=\"Remove\"\n                            >\n                                <span>&times;</span>\n                            </Button>\n                        }\n                        {i}\n                    </div>\n                    )\n                )}\n                {addable && \n                    <Button\n                        className=\"add\"\n                        onClick={(e) => onAdd(getBlankData(schema.items), coords)}\n                        title=\"Add new\"\n                    >\n                        Add item\n                    </Button>\n                }\n            </div>\n        )\n    }\n\n    return [...rows, ...groups];\n}\n\n\nexport function getObjectFormRow(data, schema, name, onChange, onAdd, onRemove, level) {\n    let rows = [];\n\n    schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    if (schema.additionalProperties)\n        keys = [...keys, ...Object.keys(data).filter((k) => keys.indexOf(k) === -1)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let value = data[key];\n        let childName = name + '-' + key;\n        let schemaValue = schema_keys[key] || {type: 'string'};\n\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (!schemaValue.title)\n            schemaValue.title = getVerboseName(key);\n\n        let removable = false;\n        if (schema_keys[key] === undefined)\n            removable = true;\n\n         if (type === 'array') {\n            rows.push(getArrayFormRow(value, schemaValue, childName, onChange, onAdd, onRemove, level + 1));\n        } else if (type === 'object') {\n            rows.push(getObjectFormRow(value, schemaValue, childName, onChange, onAdd, onRemove, level + 1));\n        } else {\n            rows.push(getStringFormRow(\n                value, schemaValue, childName, onChange, onRemove, removable, \n                () => handleKeyEdit(data, key, value, childName, onAdd, onRemove),\n                removable\n            ));\n        }\n    }\n\n    if (rows.length || schema.additionalProperties) {\n        let className = \"rjf-form-group-inner\";\n        if (level === 0 && !rows.length)\n            className = \"\";\n        \n        let coords = name;\n\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={schema.additionalProperties}\n                onAdd={() => handleKeyValueAdd(data, coords, onAdd)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    return rows;\n}\n\n\nfunction handleKeyValueAdd(data, coords, onAdd) {\n    let key = prompt(\"Add new key\");\n    if (key === null) // clicked cancel\n        return;\n\n    key = key.trim();\n    if (!key)\n        alert(\"(!) Can't add empty key.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(key))\n        alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n    else\n        onAdd(\"\", coords + '-' + key);   \n}\n\n\nfunction handleKeyEdit(data, key, value, coords, onAdd, onRemove) {\n    let newKey = prompt(\"Rename key\", key);\n    if (newKey === null) // clicked cancel\n        return;\n\n    newKey = newKey.trim();\n\n    if (newKey === key) // same keys\n        return;\n\n    if (!newKey)\n        return alert(\"(!) Key name can't be empty.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(newKey))\n        return alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n\n    onAdd(value, name + '-' + newKey);\n    onRemove(coords);\n}\n","import {getBlankData, getSyncedData} from './data';\nimport {getArrayFormRow, getObjectFormRow} from './ui';\nimport {EditorContext} from './util';\n\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dataInput = document.getElementById(this.props.dataInputId);\n        this.schema = props.schema;\n\n        let data = props.data;\n\n        if (!data) {\n            // create empty data from schema\n            data = getBlankData(this.schema);\n        } else {\n            // data might be stale if schema has new keys, so add them to data\n            try {\n                data = getSyncedData(data, this.schema);\n            } catch (error) {\n                console.log(\"Error: Schema and data don't match\");\n                console.log(error);\n            }\n        }\n\n        this.state = {\n            value: '',\n            data: data\n        };\n        \n        // update data in the input\n        this.populateDataInput();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.data !== prevState.data) {\n            this.populateDataInput();\n        }\n    }\n\n    populateDataInput = () => {\n        this.dataInput.value = JSON.stringify(this.state.data);\n    }\n\n    handleChange = (coords, value) => {\n        /*\n            e.target.name is a chain of indices and keys:\n            xxx-0-key-1-key2 and so on.\n            These can be used as coordinates to locate \n            a particular deeply nested item.\n\n            This first coordinate is not important and should be removed.\n        */\n        coords = coords.split('-');\n\n        coords.shift(); // remove first coord\n\n        function setDataUsingCoords(coords, data, value) {\n            let coord = coords.shift();\n            if (!isNaN(Number(coord)))\n                coord = Number(coord);\n\n            if (coords.length) {\n                setDataUsingCoords(coords, data[coord], value);\n            } else {\n                data[coord] = value;\n            }\n        }\n\n        let _data = JSON.parse(JSON.stringify(this.state.data));\n\n        setDataUsingCoords(coords, _data, value);\n\n        this.setState({data: _data});\n    }\n\n    getFields = () => {\n        let data = this.state.data;\n        let formGroups = [];\n\n        try {\n            let type = this.schema.type;\n    \n            if (type === 'list')\n                type = 'array';\n            else if (type === 'dict')\n                type = 'object';\n\n            if (type === 'array') {\n                return getArrayFormRow(\n                    data, this.schema, 'rjf',\n                    this.handleChange, this.addFieldset, this.removeFieldset,\n                    0\n                );\n            } else if (type === 'object') {\n                return getObjectFormRow(\n                    data, this.schema, 'rjf',\n                    this.handleChange, this.addFieldset, this.removeFieldset,\n                    0\n                );\n            }\n        } catch (error) {\n            formGroups = (\n                <p style={{color: '#f00'}}>\n                    <strong>(!) Error:</strong> Schema and data do not match.\n                </p>\n            );\n        }\n\n        return formGroups;\n    }\n\n    addFieldset = (blankData, coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            function addDataUsingCoords(coords, data, value) {\n                let coord = coords.shift();\n                if (!isNaN(Number(coord)))\n                    coord = Number(coord);\n\n                if (coords.length) {\n                    addDataUsingCoords(coords, data[coord], value);\n                } else {\n                    if (Array.isArray(data[coord])) {\n                        data[coord].push(value);\n                    }\n                    else {\n                        if (Array.isArray(data)) {\n                            data.push(value);\n                        } else {\n                            data[coord] = value;\n                        }\n                    }\n                }\n            }\n\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            addDataUsingCoords(coords, _data, blankData);\n\n            return {data: _data};\n        });\n    }\n\n    removeFieldset = (coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            function removeDataUsingCoords(coords, data) {\n                let coord = coords.shift();\n                if (!isNaN(Number(coord)))\n                    coord = Number(coord);\n\n                if (coords.length) {\n                    removeDataUsingCoords(coords, data[coord]);\n                } else {\n                    if (Array.isArray(data))\n                        data = data.splice(coord, 1); // in-place mutation\n                    else\n                        delete data[coord];\n                }\n            }\n\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            removeDataUsingCoords(coords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-form-wrapper\">\n                <fieldset className=\"module aligned\">\n                    <EditorContext.Provider \n                        value={{\n                            fileUploadEndpoint: this.props.fileUploadEndpoint,\n                            fieldName: this.props.fieldName,\n                            modelName: this.props.modelName,\n                        }}\n                    >\n                    {this.getFields()}\n                    </EditorContext.Provider>\n                </fieldset>\n            </div>\n        );\n    }\n}\n","import JSONForm from './renderer';\n\n\nexport default {\n  JSONForm,\n};","import Form from './form';\n\n\nexport default function JSONForm(config) {\n    this.containerId = config.containerId;\n    this.dataInputId = config.dataInputId;\n    this.schema = config.schema;\n    this.data = config.data;\n    this.fileUploadEndpoint = config.fileUploadEndpoint;\n    this.fieldName = config.fieldName;\n    this.modelName = config.modelName;\n\n    this.render = function() {\n        ReactDOM.render(\n            <Form\n                schema={this.schema}\n                dataInputId={this.dataInputId}\n                data={this.data}\n                fileUploadEndpoint={this.fileUploadEndpoint}\n                fieldName={this.fieldName}\n                modelName={this.modelName}\n            />,\n            document.getElementById(this.containerId)\n        );\n    }\n}"],"names":["getBlankObject","schema","keys","schema_keys","properties","key","value","type","getBlankArray","items","push","getBlankData","getSyncedArray","data","newData","JSON","parse","stringify","i","length","item","getSyncedObject","Object","schemaValue","hasOwnProperty","Button","className","props","React","children","Loader","EditorContext","createContext","capitalize","string","charAt","toUpperCase","substr","toLowerCase","FormInput","label","inputRef","ref","FormCheckInput","name","undefined","checked","FormRadioInput","options","map","option","inputValue","toString","FormSelectInput","defaultValue","disabled","FormFileInput","_this","getFileName","extractFileInfo","dataURL","dataURI","splitted","split","params","replace","filter","param","binary","atob","array","charCodeAt","blob","window","Blob","Uint8Array","dataURItoBlob","size","addNameToDataURL","encodeURIComponent","handleChange","e","file","target","files","fileName","reader","FileReader","onload","event","result","onChange","readAsDataURL","endpoint","context","fileUploadEndpoint","console","error","alert","setState","loading","formData","FormData","append","fieldName","modelName","slice","fetch","method","headers","document","cookie","trim","indexOf","body","then","response","json","file_path","showFileBrowser","current","click","state","createRef","componentDidUpdate","prevProps","prevState","this","render","Component","GroupTitle","FormRow","onRemove","onClick","title","FormGroup","hasChildren","Children","count","innerClassName","level","addable","onAdd","FormField","InputField","inputProps","choices","widget","format","editable","onEdit","valueType","callback","isNaN","Number","getStringFormRow","removable","getArrayFormRow","rows","groups","min_items","minItems","max_items","maxItems","childName","getObjectFormRow","coords","index","additionalProperties","k","getVerboseName","handleKeyEdit","prompt","handleKeyValueAdd","newKey","contextType","Form","populateDataInput","dataInput","shift","_data","setDataUsingCoords","coord","getFields","formGroups","addFieldset","removeFieldset","style","color","blankData","addDataUsingCoords","Array","isArray","removeDataUsingCoords","splice","getElementById","dataInputId","log","Provider","JSONForm","config","containerId","ReactDOM"],"mappings":"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"}